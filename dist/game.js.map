{
  "version": 3,
  "sources": ["../node_modules/kaboom/src/math.ts", "../node_modules/kaboom/src/utils.ts", "../node_modules/kaboom/src/gamepad.json", "../node_modules/kaboom/src/app.ts", "../node_modules/kaboom/src/easings.ts", "../node_modules/kaboom/src/timer.ts", "../node_modules/kaboom/src/kaboom.ts", "../code/main.ts"],
  "sourcesContent": ["import {\n\tPoint,\n\tRNGValue,\n\tLerpValue,\n\tVec2Args,\n} from \"./types\"\n\nexport function deg2rad(deg: number): number {\n\treturn deg * Math.PI / 180\n}\n\nexport function rad2deg(rad: number): number {\n\treturn rad * 180 / Math.PI\n}\n\nexport function clamp(\n\tval: number,\n\tmin: number,\n\tmax: number,\n): number {\n\tif (min > max) {\n\t\treturn clamp(val, max, min)\n\t}\n\treturn Math.min(Math.max(val, min), max)\n}\n\nexport function lerp<V extends LerpValue>(\n\ta: V,\n\tb: V,\n\tt: number,\n): V {\n\tif (typeof a === \"number\" && typeof b === \"number\") {\n\t\treturn a + (b - a) * t as V\n\t} else if (a instanceof Vec2 && b instanceof Vec2) {\n\t\treturn a.lerp(b, t) as V\n\t} else if (a instanceof Color && b instanceof Color) {\n\t\treturn a.lerp(b, t) as V\n\t}\n\tthrow new Error(`Bad value for lerp(): ${a}, ${b}. Only number, Vec2 and Color is supported.`)\n}\n\nexport function map(\n\tv: number,\n\tl1: number,\n\th1: number,\n\tl2: number,\n\th2: number,\n): number {\n\treturn l2 + (v - l1) / (h1 - l1) * (h2 - l2)\n}\n\nexport function mapc(\n\tv: number,\n\tl1: number,\n\th1: number,\n\tl2: number,\n\th2: number,\n): number {\n\treturn clamp(map(v, l1, h1, l2, h2), l2, h2)\n}\n\nexport class Vec2 {\n\tx: number = 0\n\ty: number = 0\n\tconstructor(x: number = 0, y: number = x) {\n\t\tthis.x = x\n\t\tthis.y = y\n\t}\n\tstatic fromAngle(deg: number) {\n\t\tconst angle = deg2rad(deg)\n\t\treturn new Vec2(Math.cos(angle), Math.sin(angle))\n\t}\n\tstatic LEFT = new Vec2(-1, 0)\n\tstatic RIGHT = new Vec2(1, 0)\n\tstatic UP = new Vec2(0, -1)\n\tstatic DOWN = new Vec2(0, 1)\n\tclone(): Vec2 {\n\t\treturn new Vec2(this.x, this.y)\n\t}\n\tadd(...args: Vec2Args): Vec2 {\n\t\tconst p2 = vec2(...args)\n\t\treturn new Vec2(this.x + p2.x, this.y + p2.y)\n\t}\n\tsub(...args: Vec2Args): Vec2 {\n\t\tconst p2 = vec2(...args)\n\t\treturn new Vec2(this.x - p2.x, this.y - p2.y)\n\t}\n\tscale(...args: Vec2Args): Vec2 {\n\t\tconst s = vec2(...args)\n\t\treturn new Vec2(this.x * s.x, this.y * s.y)\n\t}\n\tdist(...args: Vec2Args): number {\n\t\tconst p2 = vec2(...args)\n\t\treturn this.sub(p2).len()\n\t}\n\tsdist(...args: Vec2Args): number {\n\t\tconst p2 = vec2(...args)\n\t\treturn this.sub(p2).slen()\n\t}\n\tlen(): number {\n\t\treturn Math.sqrt(this.dot(this))\n\t}\n\tslen(): number {\n\t\treturn this.dot(this)\n\t}\n\tunit(): Vec2 {\n\t\tconst len = this.len()\n\t\treturn len === 0 ? new Vec2(0) : this.scale(1 / len)\n\t}\n\tnormal(): Vec2 {\n\t\treturn new Vec2(this.y, -this.x)\n\t}\n\treflect(normal: Vec2) {\n\t\treturn this.sub(normal.scale(2 * this.dot(normal)))\n\t}\n\tproject(on: Vec2) {\n\t\treturn on.scale(on.dot(this) / on.len())\n\t}\n\treject(on: Vec2) {\n\t\treturn this.sub(this.project(on))\n\t}\n\tdot(p2: Vec2): number {\n\t\treturn this.x * p2.x + this.y * p2.y\n\t}\n\tcross(p2: Vec2): number {\n\t\treturn this.x * p2.y - this.y * p2.x\n\t}\n\tangle(...args: Vec2Args): number {\n\t\tconst p2 = vec2(...args)\n\t\treturn rad2deg(Math.atan2(this.y - p2.y, this.x - p2.x))\n\t}\n\tangleBetween(...args: Vec2Args): number {\n\t\tconst p2 = vec2(...args)\n\t\treturn rad2deg(Math.atan2(this.cross(p2), this.dot(p2)))\n\t}\n\tlerp(dest: Vec2, t: number): Vec2 {\n\t\treturn new Vec2(lerp(this.x, dest.x, t), lerp(this.y, dest.y, t))\n\t}\n\tslerp(dest: Vec2, t: number): Vec2 {\n\t\tconst cos = this.dot(dest)\n\t\tconst sin = this.cross(dest)\n\t\tconst angle = Math.atan2(sin, cos)\n\t\treturn this\n\t\t\t.scale(Math.sin((1 - t) * angle))\n\t\t\t.add(dest.scale(Math.sin(t * angle)))\n\t\t\t.scale(1 / sin)\n\t}\n\tisZero(): boolean {\n\t\treturn this.x === 0 && this.y === 0\n\t}\n\ttoFixed(n: number): Vec2 {\n\t\treturn new Vec2(Number(this.x.toFixed(n)), Number(this.y.toFixed(n)))\n\t}\n\ttransform(m: Mat4): Vec2 {\n\t\treturn m.multVec2(this)\n\t}\n\teq(other: Vec2): boolean {\n\t\treturn this.x === other.x && this.y === other.y\n\t}\n\tbbox(): Rect {\n\t\treturn new Rect(this, 0, 0)\n\t}\n\ttoString(): string {\n\t\treturn `vec2(${this.x.toFixed(2)}, ${this.y.toFixed(2)})`\n\t}\n}\n\nexport function vec2(...args: Vec2Args): Vec2 {\n\tif (args.length === 1) {\n\t\tif (args[0] instanceof Vec2) {\n\t\t\treturn new Vec2(args[0].x, args[0].y)\n\t\t} else if (Array.isArray(args[0]) && args[0].length === 2) {\n\t\t\treturn new Vec2(...args[0])\n\t\t}\n\t}\n\t// @ts-ignore\n\treturn new Vec2(...args)\n}\n\nexport class Color {\n\n\tr: number = 255\n\tg: number = 255\n\tb: number = 255\n\n\tconstructor(r: number, g: number, b: number) {\n\t\tthis.r = clamp(r, 0, 255)\n\t\tthis.g = clamp(g, 0, 255)\n\t\tthis.b = clamp(b, 0, 255)\n\t}\n\n\tstatic fromArray(arr: number[]) {\n\t\treturn new Color(arr[0], arr[1], arr[2])\n\t}\n\n\tstatic fromHex(hex: string | number) {\n\t\tif (typeof hex === \"number\") {\n\t\t\treturn new Color(\n\t\t\t\t(hex >> 16) & 0xff,\n\t\t\t\t(hex >> 8) & 0xff,\n\t\t\t\t(hex >> 0) & 0xff,\n\t\t\t)\n\t\t} else if (typeof hex === \"string\") {\n\t\t\tconst result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex)\n\t\t\treturn new Color(\n\t\t\t\tparseInt(result[1], 16),\n\t\t\t\tparseInt(result[2], 16),\n\t\t\t\tparseInt(result[3], 16),\n\t\t\t)\n\t\t} else {\n\t\t\tthrow new Error(\"Invalid hex color format\")\n\t\t}\n\t}\n\n\tstatic fromHSL(h: number, s: number, l: number) {\n\n\t\tif (s == 0){\n\t\t\treturn new Color(255 * l, 255 * l, 255 * l)\n\t\t}\n\n\t\tconst hue2rgb = (p, q, t) => {\n\t\t\tif (t < 0) t += 1\n\t\t\tif (t > 1) t -= 1\n\t\t\tif (t < 1 / 6) return p + (q - p) * 6 * t\n\t\t\tif (t < 1 / 2) return q\n\t\t\tif (t < 2 / 3) return p + (q - p) * (2/3 - t) * 6\n\t\t\treturn p\n\t\t}\n\n\t\tconst q = l < 0.5 ? l * (1 + s) : l + s - l * s\n\t\tconst p = 2 * l - q\n\t\tconst r = hue2rgb(p, q, h + 1 / 3)\n\t\tconst g = hue2rgb(p, q, h)\n\t\tconst b = hue2rgb(p, q, h - 1 / 3)\n\n\t\treturn new Color(Math.round(r * 255), Math.round(g * 255), Math.round(b * 255))\n\n\t}\n\n\tstatic RED = new Color(255, 0, 0)\n\tstatic GREEN = new Color(0, 255, 0)\n\tstatic BLUE = new Color(0, 0, 255)\n\tstatic YELLOW = new Color(255, 255, 0)\n\tstatic MAGENTA = new Color(255, 0, 255)\n\tstatic CYAN = new Color(0, 255, 255)\n\tstatic WHITE = new Color(255, 255, 255)\n\tstatic BLACK = new Color(0, 0, 0)\n\n\tclone(): Color {\n\t\treturn new Color(this.r, this.g, this.b)\n\t}\n\n\tlighten(a: number): Color {\n\t\treturn new Color(this.r + a, this.g + a, this.b + a)\n\t}\n\n\tdarken(a: number): Color {\n\t\treturn this.lighten(-a)\n\t}\n\n\tinvert(): Color {\n\t\treturn new Color(255 - this.r, 255 - this.g, 255 - this.b)\n\t}\n\n\tmult(other: Color): Color {\n\t\treturn new Color(\n\t\t\tthis.r * other.r / 255,\n\t\t\tthis.g * other.g / 255,\n\t\t\tthis.b * other.b / 255,\n\t\t)\n\t}\n\n\tlerp(dest: Color, t: number): Color {\n\t\treturn new Color(\n\t\t\tlerp(this.r, dest.r, t),\n\t\t\tlerp(this.g, dest.g, t),\n\t\t\tlerp(this.b, dest.b, t),\n\t\t)\n\t}\n\n\teq(other: Color): boolean {\n\t\treturn this.r === other.r\n\t\t\t&& this.g === other.g\n\t\t\t&& this.b === other.b\n\n\t}\n\n\ttoString(): string {\n\t\treturn `rgb(${this.r}, ${this.g}, ${this.b})`\n\t}\n\n\ttoHex(): string {\n\t\treturn \"#\" + ((1 << 24) + (this.r << 16) + (this.g << 8) + this.b).toString(16).slice(1)\n\t}\n\n}\n\nexport function rgb(...args): Color {\n\tif (args.length === 0) {\n\t\treturn new Color(255, 255, 255)\n\t} else if (args.length === 1) {\n\t\tif (args[0] instanceof Color) {\n\t\t\treturn args[0].clone()\n\t\t} else if (typeof args[0] === \"string\") {\n\t\t\treturn Color.fromHex(args[0])\n\t\t} else if (Array.isArray(args[0]) && args[0].length === 3) {\n\t\t\treturn Color.fromArray(args[0])\n\t\t}\n\t}\n\t// @ts-ignore\n\treturn new Color(...args)\n}\n\nexport const hsl2rgb = (h, s, l) => Color.fromHSL(h, s, l)\n\nexport class Quad {\n\tx: number = 0\n\ty: number = 0\n\tw: number = 1\n\th: number = 1\n\tconstructor(x: number, y: number, w: number, h: number) {\n\t\tthis.x = x\n\t\tthis.y = y\n\t\tthis.w = w\n\t\tthis.h = h\n\t}\n\tscale(other: Quad): Quad {\n\t\treturn new Quad(\n\t\t\tthis.x + this.w * other.x,\n\t\t\tthis.y + this.h * other.y,\n\t\t\tthis.w * other.w,\n\t\t\tthis.h * other.h,\n\t\t)\n\t}\n\tpos() {\n\t\treturn new Vec2(this.x, this.y)\n\t}\n\tclone(): Quad {\n\t\treturn new Quad(this.x, this.y, this.w, this.h)\n\t}\n\teq(other: Quad): boolean {\n\t\treturn this.x === other.x\n\t\t\t&& this.y === other.y\n\t\t\t&& this.w === other.w\n\t\t\t&& this.h === other.h\n\t}\n\ttoString(): string {\n\t\treturn `quad(${this.x}, ${this.y}, ${this.w}, ${this.h})`\n\t}\n}\n\nexport function quad(x: number, y: number, w: number, h: number): Quad {\n\treturn new Quad(x, y, w, h)\n}\n\nexport class Mat4 {\n\n\tm: number[] = [\n\t\t1, 0, 0, 0,\n\t\t0, 1, 0, 0,\n\t\t0, 0, 1, 0,\n\t\t0, 0, 0, 1,\n\t]\n\n\tconstructor(m?: number[]) {\n\t\tif (m) {\n\t\t\tthis.m = m\n\t\t}\n\t}\n\n\tstatic translate(p: Vec2): Mat4 {\n\t\treturn new Mat4([\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\tp.x, p.y, 0, 1,\n\t\t])\n\t}\n\n\tstatic scale(s: Vec2): Mat4 {\n\t\treturn new Mat4([\n\t\t\ts.x, 0, 0, 0,\n\t\t\t0, s.y, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1,\n\t\t])\n\t}\n\n\tstatic rotateX(a: number): Mat4 {\n\t\ta = deg2rad(-a)\n\t\tconst c = Math.cos(a)\n\t\tconst s = Math.sin(a)\n\t\treturn new Mat4([\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, -s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1,\n\t\t])\n\t}\n\n\tstatic rotateY(a: number): Mat4 {\n\t\ta = deg2rad(-a)\n\t\tconst c = Math.cos(a)\n\t\tconst s = Math.sin(a)\n\t\treturn new Mat4([\n\t\t\tc, 0, s, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t-s, 0, c, 0,\n\t\t\t0, 0, 0, 1,\n\t\t])\n\t}\n\n\tstatic rotateZ(a: number): Mat4 {\n\t\ta = deg2rad(-a)\n\t\tconst c = Math.cos(a)\n\t\tconst s = Math.sin(a)\n\t\treturn new Mat4([\n\t\t\tc, -s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1,\n\t\t])\n\t}\n\n\ttranslate(p: Vec2) {\n\t\tthis.m[12] += this.m[0] * p.x + this.m[4] * p.y\n\t\tthis.m[13] += this.m[1] * p.x + this.m[5] * p.y\n\t\tthis.m[14] += this.m[2] * p.x + this.m[6] * p.y\n\t\tthis.m[15] += this.m[3] * p.x + this.m[7] * p.y\n\t\treturn this\n\t}\n\n\tscale(p: Vec2) {\n\t\tthis.m[0] *= p.x\n\t\tthis.m[4] *= p.y\n\t\tthis.m[1] *= p.x\n\t\tthis.m[5] *= p.y\n\t\tthis.m[2] *= p.x\n\t\tthis.m[6] *= p.y\n\t\tthis.m[3] *= p.x\n\t\tthis.m[7] *= p.y\n\t\treturn this\n\t}\n\n\trotate(a: number): Mat4 {\n\t\ta = deg2rad(-a)\n\t\tconst c = Math.cos(a)\n\t\tconst s = Math.sin(a)\n\t\tconst m0 = this.m[0]\n\t\tconst m1 = this.m[1]\n\t\tconst m4 = this.m[4]\n\t\tconst m5 = this.m[5]\n\t\tthis.m[0] = m0 * c + m1 * s\n\t\tthis.m[1] = -m0 * s + m1 * c\n\t\tthis.m[4] = m4 * c + m5 * s\n\t\tthis.m[5] = -m4 * s + m5 * c\n\t\treturn this\n\t}\n\n\t// TODO: in-place variant\n\tmult(other: Mat4): Mat4 {\n\t\tconst out = []\n\t\tfor (let i = 0; i < 4; i++) {\n\t\t\tfor (let j = 0; j < 4; j++) {\n\t\t\t\tout[i * 4 + j] =\n\t\t\t\t\tthis.m[0 * 4 + j] * other.m[i * 4 + 0] +\n\t\t\t\t\tthis.m[1 * 4 + j] * other.m[i * 4 + 1] +\n\t\t\t\t\tthis.m[2 * 4 + j] * other.m[i * 4 + 2] +\n\t\t\t\t\tthis.m[3 * 4 + j] * other.m[i * 4 + 3]\n\t\t\t}\n\t\t}\n\t\treturn new Mat4(out)\n\t}\n\n\tmultVec2(p: Vec2): Vec2 {\n\t\treturn new Vec2(\n\t\t\tp.x * this.m[0] + p.y * this.m[4] + this.m[12],\n\t\t\tp.x * this.m[1] + p.y * this.m[5] + this.m[13],\n\t\t)\n\t}\n\n\tgetTranslation() {\n\t\treturn new Vec2(this.m[12], this.m[13])\n\t}\n\n\tgetScale() {\n\t\tif (this.m[0] != 0 || this.m[1] != 0) {\n\t\t\tconst det = this.m[0] * this.m[5] - this.m[1] * this.m[4]\n\t\t\tconst r = Math.sqrt(this.m[0] * this.m[0] + this.m[1] * this.m[1])\n\t\t\treturn new Vec2(r, det / r)\n\t\t} else if (this.m[4] != 0 || this.m[5] != 0) {\n\t\t\tconst det = this.m[0] * this.m[5] - this.m[1] * this.m[4]\n\t\t\tconst s = Math.sqrt(this.m[4] * this.m[4] + this.m[5] * this.m[5])\n\t\t\treturn new Vec2(det / s, s)\n\t\t} else {\n\t\t\treturn new Vec2(0, 0)\n\t\t}\n\t}\n\n\tgetRotation() {\n\t\tif (this.m[0] != 0 || this.m[1] != 0) {\n\t\t\tconst r = Math.sqrt(this.m[0] * this.m[0] + this.m[1] * this.m[1])\n\t\t\treturn rad2deg(this.m[1] > 0 ? Math.acos(this.m[0] / r) : -Math.acos(this.m[0] / r))\n\t\t} else if (this.m[4] != 0 || this.m[5] != 0) {\n\t\t\tconst s = Math.sqrt(this.m[4] * this.m[4] + this.m[5] * this.m[5])\n\t\t\treturn rad2deg(Math.PI / 2 - (this.m[5] > 0 ? Math.acos(-this.m[4] / s) : -Math.acos(this.m[4] / s)))\n\t\t} else {\n\t\t\treturn 0\n\t\t}\n\t}\n\n\tgetSkew() {\n\t\tif (this.m[0] != 0 || this.m[1] != 0) {\n\t\t\tconst r = Math.sqrt(this.m[0] * this.m[0] + this.m[1] * this.m[1])\n\t\t\treturn new Vec2(Math.atan(this.m[0] * this.m[4] + this.m[1] * this.m[5]) / (r * r), 0)\n\t\t}\n\t\telse if (this.m[4] != 0 || this.m[5] != 0) {\n\t\t\tconst s = Math.sqrt(this.m[4] * this.m[4] + this.m[5] * this.m[5])\n\t\t\treturn new Vec2(0, Math.atan(this.m[0] * this.m[4] + this.m[1] * this.m[5]) / (s * s))\n\t\t}\n\t\telse {\n\t\t\treturn new Vec2(0, 0)\n\t\t}\n\t}\n\n\tinvert(): Mat4 {\n\n\t\tconst out = []\n\n\t\tconst f00 = this.m[10] * this.m[15] - this.m[14] * this.m[11]\n\t\tconst f01 = this.m[9] * this.m[15] - this.m[13] * this.m[11]\n\t\tconst f02 = this.m[9] * this.m[14] - this.m[13] * this.m[10]\n\t\tconst f03 = this.m[8] * this.m[15] - this.m[12] * this.m[11]\n\t\tconst f04 = this.m[8] * this.m[14] - this.m[12] * this.m[10]\n\t\tconst f05 = this.m[8] * this.m[13] - this.m[12] * this.m[9]\n\t\tconst f06 = this.m[6] * this.m[15] - this.m[14] * this.m[7]\n\t\tconst f07 = this.m[5] * this.m[15] - this.m[13] * this.m[7]\n\t\tconst f08 = this.m[5] * this.m[14] - this.m[13] * this.m[6]\n\t\tconst f09 = this.m[4] * this.m[15] - this.m[12] * this.m[7]\n\t\tconst f10 = this.m[4] * this.m[14] - this.m[12] * this.m[6]\n\t\tconst f11 = this.m[5] * this.m[15] - this.m[13] * this.m[7]\n\t\tconst f12 = this.m[4] * this.m[13] - this.m[12] * this.m[5]\n\t\tconst f13 = this.m[6] * this.m[11] - this.m[10] * this.m[7]\n\t\tconst f14 = this.m[5] * this.m[11] - this.m[9] * this.m[7]\n\t\tconst f15 = this.m[5] * this.m[10] - this.m[9] * this.m[6]\n\t\tconst f16 = this.m[4] * this.m[11] - this.m[8] * this.m[7]\n\t\tconst f17 = this.m[4] * this.m[10] - this.m[8] * this.m[6]\n\t\tconst f18 = this.m[4] * this.m[9] - this.m[8] * this.m[5]\n\n\t\tout[0] = this.m[5] * f00 - this.m[6] * f01 + this.m[7] * f02\n\t\tout[4] = -(this.m[4] * f00 - this.m[6] * f03 + this.m[7] * f04)\n\t\tout[8] = this.m[4] * f01 - this.m[5] * f03 + this.m[7] * f05\n\t\tout[12] = -(this.m[4] * f02 - this.m[5] * f04 + this.m[6] * f05)\n\n\t\tout[1] = -(this.m[1] * f00 - this.m[2] * f01 + this.m[3] * f02)\n\t\tout[5] = this.m[0] * f00 - this.m[2] * f03 + this.m[3] * f04\n\t\tout[9] = -(this.m[0] * f01 - this.m[1] * f03 + this.m[3] * f05)\n\t\tout[13] = this.m[0] * f02 - this.m[1] * f04 + this.m[2] * f05\n\n\t\tout[2] = this.m[1] * f06 - this.m[2] * f07 + this.m[3] * f08\n\t\tout[6] = -(this.m[0] * f06 - this.m[2] * f09 + this.m[3] * f10)\n\t\tout[10] = this.m[0] * f11 - this.m[1] * f09 + this.m[3] * f12\n\t\tout[14] = -(this.m[0] * f08 - this.m[1] * f10 + this.m[2] * f12)\n\n\t\tout[3] = -(this.m[1] * f13 - this.m[2] * f14 + this.m[3] * f15)\n\t\tout[7] = this.m[0] * f13 - this.m[2] * f16 + this.m[3] * f17\n\t\tout[11] = -(this.m[0] * f14 - this.m[1] * f16 + this.m[3] * f18)\n\t\tout[15] = this.m[0] * f15 - this.m[1] * f17 + this.m[2] * f18\n\n\t\tconst det =\n\t\t\tthis.m[0] * out[0] +\n\t\t\tthis.m[1] * out[4] +\n\t\t\tthis.m[2] * out[8] +\n\t\t\tthis.m[3] * out[12]\n\n\t\tfor (let i = 0; i < 4; i++) {\n\t\t\tfor (let j = 0; j < 4; j++) {\n\t\t\t\tout[i * 4 + j] *= (1.0 / det)\n\t\t\t}\n\t\t}\n\n\t\treturn new Mat4(out)\n\n\t}\n\n\tclone(): Mat4 {\n\t\treturn new Mat4([...this.m])\n\t}\n\n\ttoString(): string {\n\t\treturn this.m.toString()\n\t}\n\n}\n\nexport function wave(lo: number, hi: number, t: number, f = Math.sin): number {\n\treturn lo + (f(t) + 1) / 2 * (hi - lo)\n}\n\n// basic ANSI C LCG\nconst A = 1103515245\nconst C = 12345\nconst M = 2147483648\n\nexport class RNG {\n\tseed: number\n\tconstructor(seed: number) {\n\t\tthis.seed = seed\n\t}\n\tgen(): number {\n\t\tthis.seed = (A * this.seed + C) % M\n\t\treturn this.seed / M\n\t}\n\tgenNumber(a: number, b: number): number {\n\t\treturn a + this.gen() * (b - a)\n\t}\n\tgenVec2(a: Vec2, b?: Vec2): Vec2 {\n\t\treturn new Vec2(\n\t\t\tthis.genNumber(a.x, b.x),\n\t\t\tthis.genNumber(a.y, b.y),\n\t\t)\n\t}\n\tgenColor(a: Color, b: Color): Color {\n\t\treturn new Color(\n\t\t\tthis.genNumber(a.r, b.r),\n\t\t\tthis.genNumber(a.g, b.g),\n\t\t\tthis.genNumber(a.b, b.b),\n\t\t)\n\t}\n\tgenAny<T extends RNGValue>(...args: T[]): T {\n\t\tif (args.length === 0) {\n\t\t\treturn this.gen() as T\n\t\t} else if (args.length === 1) {\n\t\t\tif (typeof args[0] === \"number\") {\n\t\t\t\treturn this.genNumber(0, args[0]) as T\n\t\t\t} else if (args[0] instanceof Vec2) {\n\t\t\t\treturn this.genVec2(vec2(0, 0), args[0]) as T\n\t\t\t} else if (args[0] instanceof Color) {\n\t\t\t\treturn this.genColor(rgb(0, 0, 0), args[0]) as T\n\t\t\t}\n\t\t} else if (args.length === 2) {\n\t\t\tif (typeof args[0] === \"number\" && typeof args[1] === \"number\") {\n\t\t\t\treturn this.genNumber(args[0], args[1]) as T\n\t\t\t} else if (args[0] instanceof Vec2 && args[1] instanceof Vec2) {\n\t\t\t\treturn this.genVec2(args[0], args[1]) as T\n\t\t\t} else if (args[0] instanceof Color && args[1] instanceof Color) {\n\t\t\t\treturn this.genColor(args[0], args[1]) as T\n\t\t\t}\n\t\t}\n\t}\n}\n\n// TODO: let user pass seed\nconst defRNG = new RNG(Date.now())\n\nexport function randSeed(seed?: number): number {\n\tif (seed != null) {\n\t\tdefRNG.seed = seed\n\t}\n\treturn defRNG.seed\n}\n\nexport function rand(...args) {\n\t// @ts-ignore\n\treturn defRNG.genAny(...args)\n}\n\n// TODO: randi() to return 0 / 1?\nexport function randi(...args: number[]) {\n\treturn Math.floor(rand(...args))\n}\n\nexport function chance(p: number): boolean {\n\treturn rand() <= p\n}\n\nexport function choose<T>(list: T[]): T {\n\treturn list[randi(list.length)]\n}\n\n// TODO: better name\nexport function testRectRect2(r1: Rect, r2: Rect): boolean {\n\treturn r1.pos.x + r1.width >= r2.pos.x\n\t\t&& r1.pos.x <= r2.pos.x + r2.width\n\t\t&& r1.pos.y + r1.height >= r2.pos.y\n\t\t&& r1.pos.y <= r2.pos.y + r2.height\n}\n\nexport function testRectRect(r1: Rect, r2: Rect): boolean {\n\treturn r1.pos.x + r1.width > r2.pos.x\n\t\t&& r1.pos.x < r2.pos.x + r2.width\n\t\t&& r1.pos.y + r1.height > r2.pos.y\n\t\t&& r1.pos.y < r2.pos.y + r2.height\n}\n\n// TODO: better name\nexport function testLineLineT(l1: Line, l2: Line): number | null {\n\n\tif ((l1.p1.x === l1.p2.x && l1.p1.y === l1.p2.y) || (l2.p1.x === l2.p2.x && l2.p1.y === l2.p2.y)) {\n\t\treturn null\n\t}\n\n\tconst denom = ((l2.p2.y - l2.p1.y) * (l1.p2.x - l1.p1.x) - (l2.p2.x - l2.p1.x) * (l1.p2.y - l1.p1.y))\n\n\t// parallel\n\tif (denom === 0) {\n\t\treturn null\n\t}\n\n\tconst ua = ((l2.p2.x - l2.p1.x) * (l1.p1.y - l2.p1.y) - (l2.p2.y - l2.p1.y) * (l1.p1.x - l2.p1.x)) / denom\n\tconst ub = ((l1.p2.x - l1.p1.x) * (l1.p1.y - l2.p1.y) - (l1.p2.y - l1.p1.y) * (l1.p1.x - l2.p1.x)) / denom\n\n\t// is the intersection on the segments\n\tif (ua < 0 || ua > 1 || ub < 0 || ub > 1) {\n\t\treturn null\n\t}\n\n\treturn ua\n\n}\n\nexport function testLineLine(l1: Line, l2: Line): Vec2 | null {\n\tconst t = testLineLineT(l1, l2)\n\tif (!t) return null\n\treturn vec2(\n\t\tl1.p1.x + t * (l1.p2.x - l1.p1.x),\n\t\tl1.p1.y + t * (l1.p2.y - l1.p1.y),\n\t)\n}\n\nexport function testRectLine(r: Rect, l: Line): boolean {\n\tif (testRectPoint(r, l.p1) || testRectPoint(r, l.p2)) {\n\t\treturn true\n\t}\n\tconst pts = r.points()\n\treturn !!testLineLine(l, new Line(pts[0], pts[1]))\n\t\t|| !!testLineLine(l, new Line(pts[1], pts[2]))\n\t\t|| !!testLineLine(l, new Line(pts[2], pts[3]))\n\t\t|| !!testLineLine(l, new Line(pts[3], pts[0]))\n}\n\nexport function testRectPoint2(r: Rect, pt: Point): boolean {\n\treturn pt.x >= r.pos.x\n\t\t&& pt.x <= r.pos.x + r.width\n\t\t&& pt.y >= r.pos.y\n\t\t&& pt.y <= r.pos.y + r.height\n}\n\nexport function testRectPoint(r: Rect, pt: Point): boolean {\n\treturn pt.x > r.pos.x\n\t\t&& pt.x < r.pos.x + r.width\n\t\t&& pt.y > r.pos.y\n\t\t&& pt.y < r.pos.y + r.height\n}\n\nexport function testRectCircle(r: Rect, c: Circle): boolean {\n\tconst nx = Math.max(r.pos.x, Math.min(c.center.x, r.pos.x + r.width))\n\tconst ny = Math.max(r.pos.y, Math.min(c.center.y, r.pos.y + r.height))\n\tconst nearestPoint = vec2(nx, ny)\n\treturn nearestPoint.sdist(c.center) <= c.radius * c.radius\n}\n\nexport function testRectPolygon(r: Rect, p: Polygon): boolean {\n\treturn testPolygonPolygon(p, new Polygon(r.points()))\n}\n\nexport function testLinePoint(l: Line, pt: Vec2): boolean {\n\tconst v1 = pt.sub(l.p1)\n\tconst v2 = l.p2.sub(l.p1)\n\n\t// Check if sine is 0, in that case lines are parallel.\n\t// If not parallel, the point cannot lie on the line.\n\tif (Math.abs(v1.cross(v2)) > Number.EPSILON) {\n\t\treturn false\n\t}\n\n\t// Scalar projection of v1 on v2\n\tconst t = v1.dot(v2) / v2.dot(v2)\n\t// Since t is percentual distance of pt from line.p1 on the line,\n\t// it should be between 0% and 100%\n\treturn t >= 0 && t <= 1\n}\n\nexport function testLineCircle(l: Line, circle: Circle): boolean {\n\tconst v = l.p2.sub(l.p1)\n\tconst a = v.dot(v)\n\tconst centerToOrigin = l.p1.sub(circle.center)\n\tconst b = 2 * v.dot(centerToOrigin)\n\tconst c = centerToOrigin.dot(centerToOrigin) - circle.radius * circle.radius\n\t// Calculate the discriminant of ax^2 + bx + c\n\tconst dis = b * b - 4 * a * c\n\n\t// No root\n\tif ((a <= Number.EPSILON) || (dis < 0)) {\n\t\treturn false\n\t}\n\t// One possible root\n\telse if (dis == 0) {\n\t\tconst t = -b / (2 * a)\n\t\tif (t >= 0 && t <= 1) {\n\t\t\treturn true\n\t\t}\n\t}\n\t// Two possible roots\n\telse {\n\t\tconst t1 = (-b + Math.sqrt(dis)) / (2 * a)\n\t\tconst t2 = (-b - Math.sqrt(dis)) / (2 * a)\n\t\tif ((t1 >= 0 && t1 <= 1) || (t2 >= 0 && t2 <= 1)) {\n\t\t\treturn true\n\t\t}\n\t}\n\n\t// Check if line is completely within the circle\n\t// We only need to check one point, since the line didn't cross the circle\n\treturn testCirclePoint(circle, l.p1)\n}\n\nexport function testLinePolygon(l: Line, p: Polygon): boolean {\n\n\t// test if line is inside\n\tif (testPolygonPoint(p, l.p1) || testPolygonPoint(p, l.p2)) {\n\t\treturn true\n\t}\n\n\t// test each line\n\tfor (let i = 0; i < p.pts.length; i++) {\n\t\tconst p1 = p.pts[i]\n\t\tconst p2 = p.pts[(i + 1) % p.pts.length]\n\t\tif (testLineLine(l, new Line(p1, p2))) {\n\t\t\treturn true\n\t\t}\n\t}\n\n\treturn false\n\n}\n\nexport function testCirclePoint(c: Circle, p: Point): boolean {\n\treturn c.center.sdist(p) < c.radius * c.radius\n}\n\nexport function testCircleCircle(c1: Circle, c2: Circle): boolean {\n\treturn c1.center.sdist(c2.center) < (c1.radius + c2.radius) * (c1.radius + c2.radius)\n}\n\nexport function testCirclePolygon(c: Circle, p: Polygon): boolean {\n\t// For each edge check for intersection\n\tlet prev = p.pts[p.pts.length - 1]\n\tfor (const cur of p.pts) {\n\t\tif (testLineCircle(new Line(prev, cur), c)) {\n\t\t\treturn true\n\t\t}\n\t\tprev = cur\n\t}\n\n\t// Check if the polygon is completely within the circle\n\t// We only need to check one point, since the polygon didn't cross the circle\n\tif (testCirclePoint(c, p.pts[0])) {\n\t\treturn true\n\t}\n\n\t// Check if the circle is completely within the polygon\n\treturn testPolygonPoint(p, c.center)\n}\n\nexport function testPolygonPolygon(p1: Polygon, p2: Polygon): boolean {\n\tfor (let i = 0; i < p1.pts.length; i++) {\n\t\tif (testLinePolygon(new Line(p1.pts[i], p1.pts[(i + 1) % p1.pts.length]), p2)) {\n\t\t\treturn true\n\t\t}\n\t}\n\treturn false\n}\n\n// https://wrf.ecse.rpi.edu/Research/Short_Notes/pnpoly.html\nexport function testPolygonPoint(poly: Polygon, pt: Point): boolean {\n\n\tlet c = false\n\tconst p = poly.pts\n\n\tfor (let i = 0, j = p.length - 1; i < p.length; j = i++) {\n\t\tif (\n\t\t\t((p[i].y > pt.y) != (p[j].y > pt.y))\n\t\t\t&& (pt.x < (p[j].x - p[i].x) * (pt.y - p[i].y) / (p[j].y - p[i].y) + p[i].x)\n\t\t) {\n\t\t\tc = !c\n\t\t}\n\t}\n\n\treturn c\n\n}\n\nexport function testPointPoint(p1: Point, p2: Point): boolean {\n\treturn p1.x === p2.x && p1.y === p2.y\n}\n\nexport class Line {\n\tp1: Vec2\n\tp2: Vec2\n\tconstructor(p1: Vec2, p2: Vec2) {\n\t\tthis.p1 = p1.clone()\n\t\tthis.p2 = p2.clone()\n\t}\n\ttransform(m: Mat4): Line {\n\t\treturn new Line(m.multVec2(this.p1), m.multVec2(this.p2))\n\t}\n\tbbox(): Rect {\n\t\treturn Rect.fromPoints(this.p1, this.p2)\n\t}\n\tarea(): number {\n\t\treturn this.p1.dist(this.p2)\n\t}\n\tclone(): Line {\n\t\treturn new Line(this.p1, this.p2)\n\t}\n}\n\n// TODO: use x: number y: number (x, y, width, height)\nexport class Rect {\n\tpos: Vec2\n\twidth: number\n\theight: number\n\tconstructor(pos: Vec2, width: number, height: number) {\n\t\tthis.pos = pos.clone()\n\t\tthis.width = width\n\t\tthis.height = height\n\t}\n\tstatic fromPoints(p1: Vec2, p2: Vec2): Rect {\n\t\treturn new Rect(p1.clone(), p2.x - p1.x, p2.y - p1.y)\n\t}\n\tcenter(): Vec2 {\n\t\treturn new Vec2(this.pos.x + this.width / 2, this.pos.y + this.height / 2)\n\t}\n\tpoints(): [Vec2, Vec2, Vec2, Vec2] {\n\t\treturn [\n\t\t\tthis.pos,\n\t\t\tthis.pos.add(this.width, 0),\n\t\t\tthis.pos.add(this.width, this.height),\n\t\t\tthis.pos.add(0, this.height),\n\t\t]\n\t}\n\ttransform(m: Mat4): Polygon {\n\t\treturn new Polygon(this.points().map((pt) => m.multVec2(pt)))\n\t}\n\tbbox(): Rect {\n\t\treturn this.clone()\n\t}\n\tarea(): number {\n\t\treturn this.width * this.height\n\t}\n\tclone(): Rect {\n\t\treturn new Rect(this.pos.clone(), this.width, this.height)\n\t}\n\tdistToPoint(p: Vec2): number {\n\t\treturn Math.sqrt(this.sdistToPoint(p))\n\t}\n\tsdistToPoint(p: Vec2): number {\n\t\tconst min = this.pos\n\t\tconst max = this.pos.add(this.width, this.height)\n\t\tconst dx = Math.max(min.x - p.x, 0, p.x - max.x)\n\t\tconst dy = Math.max(min.y - p.y, 0, p.y - max.y)\n\t\treturn dx * dx + dy * dy\n\t}\n}\n\nexport class Circle {\n\tcenter: Vec2\n\tradius: number\n\tconstructor(center: Vec2, radius: number) {\n\t\tthis.center = center.clone()\n\t\tthis.radius = radius\n\t}\n\ttransform(tr: Mat4): Ellipse {\n\t\treturn new Ellipse(this.center, this.radius, this.radius).transform(tr)\n\t}\n\tbbox(): Rect {\n\t\treturn Rect.fromPoints(\n\t\t\tthis.center.sub(vec2(this.radius)),\n\t\t\tthis.center.add(vec2(this.radius)),\n\t\t)\n\t}\n\tarea(): number {\n\t\treturn this.radius * this.radius * Math.PI\n\t}\n\tclone(): Circle {\n\t\treturn new Circle(this.center, this.radius)\n\t}\n}\n\nexport class Ellipse {\n\tcenter: Vec2\n\tradiusX: number\n\tradiusY: number\n\tconstructor(center: Vec2, rx: number, ry: number) {\n\t\tthis.center = center.clone()\n\t\tthis.radiusX = rx\n\t\tthis.radiusY = ry\n\t}\n\ttransform(tr: Mat4): Ellipse {\n\t\treturn new Ellipse(\n\t\t\ttr.multVec2(this.center),\n\t\t\ttr.m[0] * this.radiusX,\n\t\t\ttr.m[5] * this.radiusY,\n\t\t)\n\t}\n\tbbox(): Rect {\n\t\treturn Rect.fromPoints(\n\t\t\tthis.center.sub(vec2(this.radiusX, this.radiusY)),\n\t\t\tthis.center.add(vec2(this.radiusX, this.radiusY)),\n\t\t)\n\t}\n\tarea(): number {\n\t\treturn this.radiusX * this.radiusY * Math.PI\n\t}\n\tclone(): Ellipse {\n\t\treturn new Ellipse(this.center, this.radiusX, this.radiusY)\n\t}\n}\n\nexport class Polygon {\n\tpts: Vec2[]\n\tconstructor(pts: Vec2[]) {\n\t\tif (pts.length < 3) {\n\t\t\tthrow new Error(\"Polygons should have at least 3 vertices\")\n\t\t}\n\t\tthis.pts = pts\n\t}\n\ttransform(m: Mat4): Polygon {\n\t\treturn new Polygon(this.pts.map((pt) => m.multVec2(pt)))\n\t}\n\tbbox(): Rect {\n\t\tconst p1 = vec2(Number.MAX_VALUE)\n\t\tconst p2 = vec2(-Number.MAX_VALUE)\n\t\tfor (const pt of this.pts) {\n\t\t\tp1.x = Math.min(p1.x, pt.x)\n\t\t\tp2.x = Math.max(p2.x, pt.x)\n\t\t\tp1.y = Math.min(p1.y, pt.y)\n\t\t\tp2.y = Math.max(p2.y, pt.y)\n\t\t}\n\t\treturn Rect.fromPoints(p1, p2)\n\t}\n\tarea(): number {\n\t\tlet total = 0\n\t\tconst l = this.pts.length\n\t\tfor (let i = 0; i < l; i++) {\n\t\t\tconst p1 = this.pts[i]\n\t\t\tconst p2 = this.pts[(i + 1) % l]\n\t\t\ttotal += (p1.x * p2.y * 0.5)\n\t\t\ttotal -= (p2.x * p1.y * 0.5)\n\t\t}\n\t\treturn Math.abs(total)\n\t}\n\tclone(): Polygon {\n\t\treturn new Polygon(this.pts.map((pt) => pt.clone()))\n\t}\n}\n\nexport function sat(p1: Polygon, p2: Polygon): Vec2 | null {\n\tlet overlap = Number.MAX_VALUE\n\tlet displacement = vec2(0)\n\tfor (const poly of [p1, p2]) {\n\t\tfor (let i = 0; i < poly.pts.length; i++) {\n\t\t\tconst a = poly.pts[i]\n\t\t\tconst b = poly.pts[(i + 1) % poly.pts.length]\n\t\t\tconst axisProj = b.sub(a).normal().unit()\n\t\t\tlet min1 = Number.MAX_VALUE\n\t\t\tlet max1 = -Number.MAX_VALUE\n\t\t\tfor (let j = 0; j < p1.pts.length; j++) {\n\t\t\t\tconst q = p1.pts[j].dot(axisProj)\n\t\t\t\tmin1 = Math.min(min1, q)\n\t\t\t\tmax1 = Math.max(max1, q)\n\t\t\t}\n\t\t\tlet min2 = Number.MAX_VALUE\n\t\t\tlet max2 = -Number.MAX_VALUE\n\t\t\tfor (let j = 0; j < p2.pts.length; j++) {\n\t\t\t\tconst q = p2.pts[j].dot(axisProj)\n\t\t\t\tmin2 = Math.min(min2, q)\n\t\t\t\tmax2 = Math.max(max2, q)\n\t\t\t}\n\t\t\tconst o = Math.min(max1, max2) - Math.max(min1, min2)\n\t\t\tif (o < 0) {\n\t\t\t\treturn null\n\t\t\t}\n\t\t\tif (o < Math.abs(overlap)) {\n\t\t\t\tconst o1 = max2 - min1\n\t\t\t\tconst o2 = min2 - max1\n\t\t\t\toverlap = Math.abs(o1) < Math.abs(o2) ? o1 : o2\n\t\t\t\tdisplacement = axisProj.scale(overlap)\n\t\t\t}\n\t\t}\n\t}\n\treturn displacement\n}\n", "export class IDList<T> extends Map<number, T> {\n\tprivate lastID: number\n\tconstructor(...args) {\n\t\tsuper(...args)\n\t\tthis.lastID = 0\n\t}\n\tpush(v: T): number {\n\t\tconst id = this.lastID\n\t\tthis.set(id, v)\n\t\tthis.lastID++\n\t\treturn id\n\t}\n\tpushd(v: T): () => void {\n\t\tconst id = this.push(v)\n\t\treturn () => this.delete(id)\n\t}\n}\n\nexport class EventController {\n\tpaused: boolean = false\n\treadonly cancel: () => void\n\tconstructor(cancel: () => void) {\n\t\tthis.cancel = cancel\n\t}\n\tstatic join(events: EventController[]): EventController {\n\t\tconst ev = new EventController(() => events.forEach((e) => e.cancel()))\n\t\tObject.defineProperty(ev, \"paused\", {\n\t\t\tget: () => events[0].paused,\n\t\t\tset: (p: boolean) => events.forEach((e) => e.paused = p),\n\t\t})\n\t\tev.paused = false\n\t\treturn ev\n\t}\n}\n\nexport class Event<Args extends any[] = any[]> {\n\tprivate handlers: IDList<(...args: Args) => void> = new IDList()\n\tadd(action: (...args: Args) => void): EventController {\n\t\tconst cancel = this.handlers.pushd((...args: Args) => {\n\t\t\tif (ev.paused) return\n\t\t\taction(...args)\n\t\t})\n\t\tconst ev = new EventController(cancel)\n\t\treturn ev\n\t}\n\taddOnce(action: (...args) => void): EventController {\n\t\tconst ev = this.add((...args) => {\n\t\t\tev.cancel()\n\t\t\taction(...args)\n\t\t})\n\t\treturn ev\n\t}\n\tnext(): Promise<Args> {\n\t\treturn new Promise((res) => this.addOnce(res))\n\t}\n\ttrigger(...args: Args) {\n\t\tthis.handlers.forEach((action) => action(...args))\n\t}\n\tnumListeners(): number {\n\t\treturn this.handlers.size\n\t}\n}\n\n// TODO: only accept one argument?\nexport class EventHandler<EventMap extends Record<string, any[]>> {\n\tprivate handlers: Partial<{\n\t\t[Name in keyof EventMap]: Event<EventMap[Name]>\n\t}> = {}\n\ton<Name extends keyof EventMap>(\n\t\tname: Name,\n\t\taction: (...args: EventMap[Name]) => void,\n\t): EventController {\n\t\tif (!this.handlers[name]) {\n\t\t\tthis.handlers[name] = new Event<EventMap[Name]>()\n\t\t}\n\t\treturn this.handlers[name].add(action)\n\t}\n\tonOnce<Name extends keyof EventMap>(\n\t\tname: Name,\n\t\taction: (...args: EventMap[Name]) => void,\n\t): EventController {\n\t\tconst ev = this.on(name, (...args) => {\n\t\t\tev.cancel()\n\t\t\taction(...args)\n\t\t})\n\t\treturn ev\n\t}\n\tnext<Name extends keyof EventMap>(name: Name): Promise<unknown> {\n\t\treturn new Promise((res) => {\n\t\t\t// TODO: can only pass 1 val to resolve()\n\t\t\tthis.onOnce(name, (...args: EventMap[Name]) => res(args[0]))\n\t\t})\n\t}\n\ttrigger<Name extends keyof EventMap>(name: Name, ...args: EventMap[Name]) {\n\t\tif (this.handlers[name]) {\n\t\t\tthis.handlers[name].trigger(...args)\n\t\t}\n\t}\n\tremove<Name extends keyof EventMap>(name: Name) {\n\t\tdelete this.handlers[name]\n\t}\n\tclear() {\n\t\tthis.handlers = {}\n\t}\n\tnumListeners<Name extends keyof EventMap>(name: Name): number {\n\t\treturn this.handlers[name]?.numListeners() ?? 0\n\t}\n}\n\nexport function deepEq(o1: any, o2: any): boolean {\n\tconst t1 = typeof o1\n\tconst t2 = typeof o2\n\tif (t1 !== t2) {\n\t\treturn false\n\t}\n\tif (t1 === \"object\" && t2 === \"object\" && o1 !== null && o2 !== null) {\n\t\tconst k1 = Object.keys(o1)\n\t\tconst k2 = Object.keys(o2)\n\t\tif (k1.length !== k2.length) {\n\t\t\treturn false\n\t\t}\n\t\tfor (const k of k1) {\n\t\t\tconst v1 = o1[k]\n\t\t\tconst v2 = o2[k]\n\t\t\tif (!(typeof v1 === \"function\" && typeof v2 === \"function\")) {\n\t\t\t\tif (!deepEq(v1, v2)) {\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn true\n\t}\n\treturn o1 === o2\n}\n\nexport function base64ToArrayBuffer(base64: string): ArrayBuffer {\n\tconst binstr = window.atob(base64)\n\tconst len = binstr.length\n\tconst bytes = new Uint8Array(len)\n\tfor (let i = 0; i < len; i++) {\n\t\tbytes[i] = binstr.charCodeAt(i)\n\t}\n\treturn bytes.buffer\n}\n\nexport function dataURLToArrayBuffer(url: string): ArrayBuffer {\n\treturn base64ToArrayBuffer(url.split(\",\")[1])\n}\n\nexport function download(filename: string, url: string) {\n\tconst a = document.createElement(\"a\")\n\ta.href = url\n\ta.download = filename\n\ta.click()\n}\n\nexport function downloadText(filename: string, text: string) {\n\tdownload(filename, \"data:text/plain;charset=utf-8,\" + text)\n}\n\nexport function downloadJSON(filename: string, data: any) {\n\tdownloadText(filename, JSON.stringify(data))\n}\n\nexport function downloadBlob(filename: string, blob: Blob) {\n\tconst url = URL.createObjectURL(blob)\n\tdownload(filename, url)\n\tURL.revokeObjectURL(url)\n}\n\nexport const isDataURL = (str: string) => str.match(/^data:\\w+\\/\\w+;base64,.+/)\nexport const getExt = (p: string) => p.split(\".\").pop()\n\nexport const uid = (() => {\n\tlet id = 0\n\treturn () => id++\n})()\n\nconst warned = new Set()\n\nexport function warn(msg: string) {\n\tif (!warned.has(msg)) {\n\t\twarned.add(msg)\n\t\tconsole.warn(msg)\n\t}\n}\n\nexport function deprecateMsg(oldName: string, newName: string) {\n\twarn(`${oldName} is deprecated. Use ${newName} instead.`)\n}\n\nexport function deprecate(oldName: string, newName: string, newFunc: (...args) => any) {\n\treturn (...args) => {\n\t\tdeprecateMsg(oldName, newName)\n\t\treturn newFunc(...args)\n\t}\n}\n\nexport function benchmark(task: () => void, times: number = 1) {\n\tconst t1 = performance.now()\n\tfor (let i = 0; i < times; i++) {\n\t\ttask()\n\t}\n\tconst t2 = performance.now()\n\treturn t2 - t1\n}\n\nexport function comparePerf(t1: () => void, t2: () => void, times: number = 1) {\n\treturn benchmark(t2, times) / benchmark(t1, times)\n}\n\nexport class BinaryHeap<T> {\n\t_items: T[]\n\t_compareFn: (a: T, b: T) => boolean\n\n\t/**\n\t * Creates a binary heap with the given compare function\n\t * Not passing a compare function will give a min heap\n\t */\n\tconstructor(compareFn = (a: T, b: T) => a < b) {\n\t\tthis._compareFn = compareFn\n\t\tthis._items = []\n\t}\n\n\t/**\n\t * Insert an item into the binary heap\n\t */\n\tinsert(item: T) {\n\t\tthis._items.push(item)\n\t\tthis.moveUp(this._items.length - 1)\n\t}\n\n\t/**\n\t * Remove the smallest item from the binary heap in case of a min heap\n\t * or the greatest item from the binary heap in case of a max heap\n\t */\n\tremove() {\n\t\tif (this._items.length === 0)\n\t\t\treturn null\n\t\tconst item = this._items[0]\n\t\tconst lastItem = this._items.pop()\n\t\tif (this._items.length !== 0) {\n\t\t\tthis._items[0] = lastItem as T\n\t\t\tthis.moveDown(0)\n\t\t}\n\t\treturn item\n\t}\n\n\t/**\n\t * Remove all items\n\t */\n\tclear() {\n\t\tthis._items.splice(0, this._items.length)\n\t}\n\n\tmoveUp(pos: number) {\n\t\twhile (pos > 0) {\n\t\t\tconst parent = Math.floor((pos - 1) / 2)\n\t\t\tif (!this._compareFn(this._items[pos], this._items[parent]))\n\t\t\t\tif (this._items[pos] >= this._items[parent])\n\t\t\t\t\tbreak\n\t\t\tthis.swap(pos, parent)\n\t\t\tpos = parent\n\t\t}\n\t}\n\n\tmoveDown(pos: number) {\n\t\twhile (pos < Math.floor(this._items.length / 2)) {\n\t\t\tlet child = 2 * pos + 1\n\t\t\tif (child < this._items.length - 1 && !this._compareFn(this._items[child], this._items[child + 1]))\n\t\t\t\t++child\n\t\t\tif (this._compareFn(this._items[pos], this._items[child]))\n\t\t\t\tbreak\n\t\t\tthis.swap(pos, child)\n\t\t\tpos = child\n\t\t}\n\t}\n\n\tswap(index1: number, index2: number) {\n\t\t[this._items[index1], this._items[index2]] = [this._items[index2], this._items[index1]]\n\t}\n\n\t/**\n\t * Returns the amount of items\n\t */\n\tget length() {\n\t\treturn this._items.length\n\t}\n}\n", "{\n\t\"Joy-Con L+R (STANDARD GAMEPAD Vendor: 057e Product: 200e)\": {\n\t\t\"buttons\": {\n\t\t\t\"0\": \"south\",\n\t\t\t\"1\": \"east\",\n\t\t\t\"2\": \"west\",\n\t\t\t\"3\": \"north\",\n\t\t\t\"4\": \"lshoulder\",\n\t\t\t\"5\": \"rshoulder\",\n\t\t\t\"6\": \"ltrigger\",\n\t\t\t\"7\": \"rtrigger\",\n\t\t\t\"8\": \"select\",\n\t\t\t\"9\": \"start\",\n\t\t\t\"10\": \"lstick\",\n\t\t\t\"11\": \"rstick\",\n\t\t\t\"12\": \"dpad-up\",\n\t\t\t\"13\": \"dpad-down\",\n\t\t\t\"14\": \"dpad-left\",\n\t\t\t\"15\": \"dpad-right\",\n\t\t\t\"16\": \"home\",\n\t\t\t\"17\": \"capture\"\n\t\t},\n\t\t\"sticks\": {\n\t\t\t\"left\": { \"x\": 0, \"y\": 1 },\n\t\t\t\"right\": { \"x\": 2, \"y\": 3 }\n\t\t}\n\t},\n\t\"Joy-Con (L) (STANDARD GAMEPAD Vendor: 057e Product: 2006)\": {\n\t\t\"buttons\": {\n\t\t\t\"0\": \"south\",\n\t\t\t\"1\": \"east\",\n\t\t\t\"2\": \"west\",\n\t\t\t\"3\": \"north\",\n\t\t\t\"4\": \"lshoulder\",\n\t\t\t\"5\": \"rshoulder\",\n\t\t\t\"9\": \"select\",\n\t\t\t\"10\": \"lstick\",\n\t\t\t\"16\": \"start\"\n\t\t},\n\t\t\"sticks\": {\n\t\t\t\"left\": { \"x\": 0, \"y\": 1 }\n\t\t}\n\t},\n\t\"Joy-Con (R) (STANDARD GAMEPAD Vendor: 057e Product: 2007)\": {\n\t\t\"buttons\": {\n\t\t\t\"0\": \"south\",\n\t\t\t\"1\": \"east\",\n\t\t\t\"2\": \"west\",\n\t\t\t\"3\": \"north\",\n\t\t\t\"4\": \"lshoulder\",\n\t\t\t\"5\": \"rshoulder\",\n\t\t\t\"9\": \"start\",\n\t\t\t\"10\": \"lstick\",\n\t\t\t\"16\": \"select\"\n\t\t},\n\t\t\"sticks\": {\n\t\t\t\"left\": { \"x\": 0, \"y\": 1 }\n\t\t}\n\t},\n\t\"Pro Controller (STANDARD GAMEPAD Vendor: 057e Product: 2009)\": {\n\t\t\"buttons\": {\n\t\t\t\"0\": \"south\",\n\t\t\t\"1\": \"east\",\n\t\t\t\"2\": \"west\",\n\t\t\t\"3\": \"north\",\n\t\t\t\"4\": \"lshoulder\",\n\t\t\t\"5\": \"rshoulder\",\n\t\t\t\"6\": \"ltrigger\",\n\t\t\t\"7\": \"rtrigger\",\n\t\t\t\"8\": \"select\",\n\t\t\t\"9\": \"start\",\n\t\t\t\"10\": \"lstick\",\n\t\t\t\"11\": \"rstick\",\n\t\t\t\"12\": \"dpad-up\",\n\t\t\t\"13\": \"dpad-down\",\n\t\t\t\"14\": \"dpad-left\",\n\t\t\t\"15\": \"dpad-right\",\n\t\t\t\"16\": \"home\",\n\t\t\t\"17\": \"capture\"\n\t\t},\n\t\t\"sticks\": {\n\t\t\t\"left\": { \"x\": 0, \"y\": 1 },\n\t\t\t\"right\": { \"x\": 2, \"y\": 3 }\n\t\t}\n\t},\n\t\"default\": {\n\t\t\"buttons\": {\n\t\t\t\"0\": \"south\",\n\t\t\t\"1\": \"east\",\n\t\t\t\"2\": \"west\",\n\t\t\t\"3\": \"north\",\n\t\t\t\"4\": \"lshoulder\",\n\t\t\t\"5\": \"rshoulder\",\n\t\t\t\"6\": \"ltrigger\",\n\t\t\t\"7\": \"rtrigger\",\n\t\t\t\"8\": \"select\",\n\t\t\t\"9\": \"start\",\n\t\t\t\"10\": \"lstick\",\n\t\t\t\"11\": \"rstick\",\n\t\t\t\"12\": \"dpad-up\",\n\t\t\t\"13\": \"dpad-down\",\n\t\t\t\"14\": \"dpad-left\",\n\t\t\t\"15\": \"dpad-right\",\n\t\t\t\"16\": \"home\"\n\t\t},\n\t\t\"sticks\": {\n\t\t\t\"left\": { \"x\": 0, \"y\": 1 },\n\t\t\t\"right\": { \"x\": 2, \"y\": 3 }\n\t\t}\n\t}\n}\n", "// everything related to canvas, game loop and input\n\nimport type {\n\tKaboomCtx,\n\tCursor,\n\tKey,\n\tMouseButton,\n\tGamepadButton,\n\tGamepadStick,\n\tGamepadDef,\n\tKGamePad,\n} from \"./types\"\n\nimport {\n\tVec2,\n} from \"./math\"\n\nimport {\n\tEventHandler,\n\tEventController,\n} from \"./utils\"\n\nimport GAMEPAD_MAP from \"./gamepad.json\"\n\nexport class ButtonState<T = string> {\n\tpressed: Set<T> = new Set([])\n\tpressedRepeat: Set<T> = new Set([])\n\treleased: Set<T> = new Set([])\n\tdown: Set<T> = new Set([])\n\tupdate() {\n\t\tthis.pressed.clear()\n\t\tthis.released.clear()\n\t\tthis.pressedRepeat.clear()\n\t}\n\tpress(btn: T) {\n\t\tthis.pressed.add(btn)\n\t\tthis.pressedRepeat.add(btn)\n\t\tthis.down.add(btn)\n\t}\n\tpressRepeat(btn: T) {\n\t\tthis.pressedRepeat.add(btn)\n\t}\n\trelease(btn: T) {\n\t\tthis.down.delete(btn)\n\t\tthis.pressed.delete(btn)\n\t\tthis.released.add(btn)\n\t}\n}\n\nclass GamepadState {\n\tbuttonState: ButtonState<GamepadButton> = new ButtonState()\n\tstickState: Map<GamepadStick, Vec2> = new Map()\n}\n\nclass FPSCounter {\n\tprivate dts: number[] = []\n\tprivate timer: number = 0\n\tfps: number = 0\n\ttick(dt: number) {\n\t\tthis.dts.push(dt)\n\t\tthis.timer += dt\n\t\tif (this.timer >= 1) {\n\t\t\tthis.timer = 0\n\t\t\tthis.fps = Math.round(1 / (this.dts.reduce((a, b) => a + b) / this.dts.length))\n\t\t\tthis.dts = []\n\t\t}\n\t}\n}\n\nexport default (opt: {\n\tcanvas: HTMLCanvasElement,\n\ttouchToMouse?: boolean,\n\tgamepads?: Record<string, GamepadDef>,\n\tpixelDensity?: number,\n\tmaxFPS?: number,\n}) => {\n\n\tif (!opt.canvas) {\n\t\tthrow new Error(\"Please provide a canvas\")\n\t}\n\n\tconst state = {\n\t\tcanvas: opt.canvas,\n\t\tloopID: null as null | number,\n\t\tstopped: false,\n\t\tdt: 0,\n\t\ttime: 0,\n\t\trealTime: 0,\n\t\tfpsCounter: new FPSCounter(),\n\t\ttimeScale: 1,\n\t\tskipTime: false,\n\t\tnumFrames: 0,\n\t\tpaused: false,\n\t\tmousePos: new Vec2(0),\n\t\tmouseDeltaPos: new Vec2(0),\n\t\tkeyState: new ButtonState<Key>(),\n\t\tmouseState: new ButtonState<MouseButton>(),\n\t\tmergedGamepadState: new GamepadState(),\n\t\tgamepadStates: new Map<number, GamepadState>(),\n\t\tgamepads: [] as KGamePad[],\n\t\tcharInputted: [],\n\t\tisMouseMoved: false,\n\t\tlastWidth: opt.canvas.offsetWidth,\n\t\tlastHeight: opt.canvas.offsetHeight,\n\t\tevents: new EventHandler<{\n\t\t\tmouseMove: [],\n\t\t\tmouseDown: [MouseButton],\n\t\t\tmousePress: [MouseButton],\n\t\t\tmouseRelease: [MouseButton],\n\t\t\tcharInput: [string],\n\t\t\tkeyPress: [Key],\n\t\t\tkeyDown: [Key],\n\t\t\tkeyPressRepeat: [Key],\n\t\t\tkeyRelease: [Key],\n\t\t\ttouchStart: [Vec2, Touch],\n\t\t\ttouchMove: [Vec2, Touch],\n\t\t\ttouchEnd: [Vec2, Touch],\n\t\t\tgamepadButtonDown: [string],\n\t\t\tgamepadButtonPress: [string],\n\t\t\tgamepadButtonRelease: [string],\n\t\t\tgamepadStick: [string, Vec2],\n\t\t\tgamepadConnect: [KGamePad],\n\t\t\tgamepadDisconnect: [KGamePad],\n\t\t\tscroll: [Vec2],\n\t\t\thide: [],\n\t\t\tshow: [],\n\t\t\tresize: [],\n\t\t\tinput: [],\n\t\t}>(),\n\t}\n\n\tfunction canvas() {\n\t\treturn state.canvas\n\t}\n\n\tfunction dt() {\n\t\treturn state.dt * state.timeScale\n\t}\n\n\tfunction time() {\n\t\treturn state.time\n\t}\n\n\tfunction fps() {\n\t\treturn state.fpsCounter.fps\n\t}\n\n\tfunction numFrames() {\n\t\treturn state.numFrames\n\t}\n\n\tfunction screenshot(): string {\n\t\treturn state.canvas.toDataURL()\n\t}\n\n\tfunction setCursor(c: Cursor): void {\n\t\tstate.canvas.style.cursor = c\n\t}\n\n\tfunction getCursor(): Cursor {\n\t\treturn state.canvas.style.cursor\n\t}\n\n\tfunction setCursorLocked(b: boolean): void {\n\t\tif (b) {\n\t\t\ttry {\n\t\t\t\tconst res = state.canvas.requestPointerLock() as unknown as Promise<void>\n\t\t\t\tif (res.catch) {\n\t\t\t\t\tres.catch((e) => console.error(e))\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error(e)\n\t\t\t}\n\t\t} else {\n\t\t\tdocument.exitPointerLock()\n\t\t}\n\t}\n\n\tfunction isCursorLocked(): boolean {\n\t\treturn !!document.pointerLockElement\n\t}\n\n\t// wrappers around full screen functions to work across browsers\n\tfunction enterFullscreen(el: HTMLElement) {\n\t\tif (el.requestFullscreen) el.requestFullscreen()\n\t\t// @ts-ignore\n\t\telse if (el.webkitRequestFullscreen) el.webkitRequestFullscreen()\n\t}\n\n\tfunction exitFullscreen() {\n\t\tif (document.exitFullscreen) document.exitFullscreen()\n\t\t// @ts-ignore\n\t\telse if (document.webkitExitFullScreen) document.webkitExitFullScreen()\n\t}\n\n\tfunction getFullscreenElement(): Element | void {\n\t\treturn document.fullscreenElement\n\t\t\t// @ts-ignore\n\t\t\t|| document.webkitFullscreenElement\n\t}\n\n\tfunction setFullscreen(f: boolean = true) {\n\t\tif (f) {\n\t\t\tenterFullscreen(state.canvas)\n\t\t} else {\n\t\t\texitFullscreen()\n\t\t}\n\t}\n\n\tfunction isFullscreen(): boolean {\n\t\treturn Boolean(getFullscreenElement())\n\t}\n\n\tfunction quit() {\n\t\tstate.stopped = true\n\t\tfor (const name in canvasEvents) {\n\t\t\tstate.canvas.removeEventListener(name, canvasEvents[name])\n\t\t}\n\t\tfor (const name in docEvents) {\n\t\t\tdocument.removeEventListener(name, docEvents[name])\n\t\t}\n\t\tfor (const name in winEvents) {\n\t\t\twindow.removeEventListener(name, winEvents[name])\n\t\t}\n\t\tresizeObserver.disconnect()\n\t}\n\n\tfunction run(action: () => void) {\n\n\t\tif (state.loopID !== null) {\n\t\t\tcancelAnimationFrame(state.loopID)\n\t\t}\n\n\t\tlet accumulatedDt = 0\n\n\t\tconst frame = (t: number) => {\n\n\t\t\tif (state.stopped) return\n\n\t\t\t// TODO: paused should still process input\n\t\t\t// TODO: allow background actions?\n\t\t\tif (state.paused || document.visibilityState !== \"visible\") {\n\t\t\t\tstate.loopID = requestAnimationFrame(frame)\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tconst loopTime = t / 1000\n\t\t\tconst realDt = loopTime - state.realTime\n\t\t\tconst desiredDt = opt.maxFPS ? 1 / opt.maxFPS : 0\n\n\t\t\tstate.realTime = loopTime\n\t\t\taccumulatedDt += realDt\n\n\t\t\tif (accumulatedDt > desiredDt) {\n\t\t\t\tif (!state.skipTime) {\n\t\t\t\t\tstate.dt = accumulatedDt\n\t\t\t\t\tstate.time += dt()\n\t\t\t\t\tstate.fpsCounter.tick(state.dt)\n\t\t\t\t}\n\t\t\t\taccumulatedDt = 0\n\t\t\t\tstate.skipTime = false\n\t\t\t\tstate.numFrames++\n\t\t\t\tprocessInput()\n\t\t\t\taction()\n\t\t\t\tresetInput()\n\t\t\t}\n\n\t\t\tstate.loopID = requestAnimationFrame(frame)\n\n\t\t}\n\n\t\tframe(0)\n\n\t}\n\n\tfunction isTouchscreen() {\n\t\treturn (\"ontouchstart\" in window) || navigator.maxTouchPoints > 0\n\t}\n\n\tfunction mousePos(): Vec2 {\n\t\treturn state.mousePos.clone()\n\t}\n\n\tfunction mouseDeltaPos(): Vec2 {\n\t\treturn state.mouseDeltaPos.clone()\n\t}\n\n\tfunction isMousePressed(m: MouseButton = \"left\"): boolean {\n\t\treturn state.mouseState.pressed.has(m)\n\t}\n\n\tfunction isMouseDown(m: MouseButton = \"left\"): boolean {\n\t\treturn state.mouseState.down.has(m)\n\t}\n\n\tfunction isMouseReleased(m: MouseButton = \"left\"): boolean {\n\t\treturn state.mouseState.released.has(m)\n\t}\n\n\tfunction isMouseMoved(): boolean {\n\t\treturn state.isMouseMoved\n\t}\n\n\tfunction isKeyPressed(k?: Key): boolean {\n\t\treturn k === undefined\n\t\t\t? state.keyState.pressed.size > 0\n\t\t\t: state.keyState.pressed.has(k)\n\t}\n\n\tfunction isKeyPressedRepeat(k?: Key): boolean {\n\t\treturn k === undefined\n\t\t\t? state.keyState.pressedRepeat.size > 0\n\t\t\t: state.keyState.pressedRepeat.has(k)\n\t}\n\n\tfunction isKeyDown(k?: Key): boolean {\n\t\treturn k === undefined\n\t\t\t? state.keyState.down.size > 0\n\t\t\t: state.keyState.down.has(k)\n\t}\n\n\tfunction isKeyReleased(k?: Key): boolean {\n\t\treturn k === undefined\n\t\t\t? state.keyState.released.size > 0\n\t\t\t: state.keyState.released.has(k)\n\t}\n\n\tfunction isGamepadButtonPressed(btn?: GamepadButton): boolean {\n\t\treturn btn === undefined\n\t\t\t? state.mergedGamepadState.buttonState.pressed.size > 0\n\t\t\t: state.mergedGamepadState.buttonState.pressed.has(btn)\n\t}\n\n\tfunction isGamepadButtonDown(btn?: GamepadButton): boolean {\n\t\treturn btn === undefined\n\t\t\t? state.mergedGamepadState.buttonState.down.size > 0\n\t\t\t: state.mergedGamepadState.buttonState.down.has(btn)\n\t}\n\n\tfunction isGamepadButtonReleased(btn?: GamepadButton): boolean {\n\t\treturn btn === undefined\n\t\t\t? state.mergedGamepadState.buttonState.released.size > 0\n\t\t\t: state.mergedGamepadState.buttonState.released.has(btn)\n\t}\n\n\tfunction onResize(action: () => void): EventController {\n\t\treturn state.events.on(\"resize\", action)\n\t}\n\n\t// input callbacks\n\tconst onKeyDown = ((key, action) => {\n\t\tif (typeof key === \"function\") {\n\t\t\treturn state.events.on(\"keyDown\", key)\n\t\t} else if (typeof key === \"string\" && typeof action === \"function\") {\n\t\t\treturn state.events.on(\"keyDown\", (k) => k === key && action(key))\n\t\t}\n\t}) as KaboomCtx[\"onKeyDown\"]\n\n\tconst onKeyPress = ((key, action) => {\n\t\tif (typeof key === \"function\") {\n\t\t\treturn state.events.on(\"keyPress\", key)\n\t\t} else if (typeof key === \"string\" && typeof action === \"function\") {\n\t\t\treturn state.events.on(\"keyPress\", (k) => k === key && action(key))\n\t\t}\n\t}) as KaboomCtx[\"onKeyPress\"]\n\n\tconst onKeyPressRepeat = ((key, action) => {\n\t\tif (typeof key === \"function\") {\n\t\t\treturn state.events.on(\"keyPressRepeat\", key)\n\t\t} else if (typeof key === \"string\" && typeof action === \"function\") {\n\t\t\treturn state.events.on(\"keyPressRepeat\", (k) => k === key && action(key))\n\t\t}\n\t}) as KaboomCtx[\"onKeyPressRepeat\"]\n\n\tconst onKeyRelease = ((key, action) => {\n\t\tif (typeof key === \"function\") {\n\t\t\treturn state.events.on(\"keyRelease\", key)\n\t\t} else if (typeof key === \"string\" && typeof action === \"function\") {\n\t\t\treturn state.events.on(\"keyRelease\", (k) => k === key && action(key))\n\t\t}\n\t}) as KaboomCtx[\"onKeyRelease\"]\n\n\tfunction onMouseDown(\n\t\tmouse: MouseButton | ((m: MouseButton) => void),\n\t\taction?: (m: MouseButton) => void,\n\t): EventController {\n\t\tif (typeof mouse === \"function\") {\n\t\t\treturn state.events.on(\"mouseDown\", (m) => mouse(m))\n\t\t} else {\n\t\t\treturn state.events.on(\"mouseDown\", (m) => m === mouse && action(m))\n\t\t}\n\t}\n\n\tfunction onMousePress(\n\t\tmouse: MouseButton | ((m: MouseButton) => void),\n\t\taction?: (m: MouseButton) => void,\n\t): EventController {\n\t\tif (typeof mouse === \"function\") {\n\t\t\treturn state.events.on(\"mousePress\", (m) => mouse(m))\n\t\t} else {\n\t\t\treturn state.events.on(\"mousePress\", (m) => m === mouse && action(m))\n\t\t}\n\t}\n\n\tfunction onMouseRelease(\n\t\tmouse: MouseButton | ((m: MouseButton) => void),\n\t\taction?: (m: MouseButton) => void,\n\t): EventController {\n\t\tif (typeof mouse === \"function\") {\n\t\t\treturn state.events.on(\"mouseRelease\", (m) => mouse(m))\n\t\t} else {\n\t\t\treturn state.events.on(\"mouseRelease\", (m) => m === mouse && action(m))\n\t\t}\n\t}\n\n\tfunction onMouseMove(f: (pos: Vec2, dpos: Vec2) => void): EventController {\n\t\treturn state.events.on(\"mouseMove\", () => f(mousePos(), mouseDeltaPos()))\n\t}\n\n\tfunction onCharInput(action: (ch: string) => void): EventController {\n\t\treturn state.events.on(\"charInput\", action)\n\t}\n\n\tfunction onTouchStart(f: (pos: Vec2, t: Touch) => void): EventController {\n\t\treturn state.events.on(\"touchStart\", f)\n\t}\n\n\tfunction onTouchMove(f: (pos: Vec2, t: Touch) => void): EventController {\n\t\treturn state.events.on(\"touchMove\", f)\n\t}\n\n\tfunction onTouchEnd(f: (pos: Vec2, t: Touch) => void): EventController {\n\t\treturn state.events.on(\"touchEnd\", f)\n\t}\n\n\tfunction onScroll(action: (delta: Vec2) => void): EventController {\n\t\treturn state.events.on(\"scroll\", action)\n\t}\n\n\tfunction onHide(action: () => void): EventController {\n\t\treturn state.events.on(\"hide\", action)\n\t}\n\n\tfunction onShow(action: () => void): EventController {\n\t\treturn state.events.on(\"show\", action)\n\t}\n\n\tfunction onGamepadButtonDown(btn: GamepadButton | ((btn: GamepadButton) => void), action?: (btn: GamepadButton) => void): EventController {\n\t\tif (typeof btn === \"function\") {\n\t\t\treturn state.events.on(\"gamepadButtonDown\", btn)\n\t\t} else if (typeof btn === \"string\" && typeof action === \"function\") {\n\t\t\treturn state.events.on(\"gamepadButtonDown\", (b) => b === btn && action(btn))\n\t\t}\n\t}\n\n\tfunction onGamepadButtonPress(btn: GamepadButton | ((btn: GamepadButton) => void), action?: (btn: GamepadButton) => void): EventController {\n\t\tif (typeof btn === \"function\") {\n\t\t\treturn state.events.on(\"gamepadButtonPress\", btn)\n\t\t} else if (typeof btn === \"string\" && typeof action === \"function\") {\n\t\t\treturn state.events.on(\"gamepadButtonPress\", (b) => b === btn && action(btn))\n\t\t}\n\t}\n\n\tfunction onGamepadButtonRelease(btn: GamepadButton | ((btn: GamepadButton) => void), action?: (btn: GamepadButton) => void): EventController {\n\t\tif (typeof btn === \"function\") {\n\t\t\treturn state.events.on(\"gamepadButtonRelease\", btn)\n\t\t} else if (typeof btn === \"string\" && typeof action === \"function\") {\n\t\t\treturn state.events.on(\"gamepadButtonRelease\", (b) => b === btn && action(btn))\n\t\t}\n\t}\n\n\tfunction onGamepadStick(stick: GamepadStick, action: (value: Vec2) => void): EventController {\n\t\treturn state.events.on(\"gamepadStick\", ((a: string, v: Vec2) => a === stick && action(v)))\n\t}\n\n\tfunction onGamepadConnect(action: (gamepad: KGamePad) => void) {\n\t\tstate.events.on(\"gamepadConnect\", action)\n\t}\n\n\tfunction onGamepadDisconnect(action: (gamepad: KGamePad) => void) {\n\t\tstate.events.on(\"gamepadDisconnect\", action)\n\t}\n\n\tfunction getGamepadStick(stick: GamepadStick): Vec2 {\n\t\treturn state.mergedGamepadState.stickState.get(stick) || new Vec2(0)\n\t}\n\n\tfunction charInputted(): string[] {\n\t\treturn [...state.charInputted]\n\t}\n\n\tfunction getGamepads(): KGamePad[] {\n\t\treturn [...state.gamepads]\n\t}\n\n\tfunction processInput() {\n\t\tstate.events.trigger(\"input\")\n\t\tstate.keyState.down.forEach((k) => state.events.trigger(\"keyDown\", k))\n\t\tstate.mouseState.down.forEach((k) => state.events.trigger(\"mouseDown\", k))\n\t\tprocessGamepad()\n\t}\n\n\tfunction resetInput() {\n\t\tstate.keyState.update()\n\t\tstate.mouseState.update()\n\t\tstate.mergedGamepadState.buttonState.update()\n\t\tstate.mergedGamepadState.stickState.forEach((v, k) => {\n\t\t\tstate.mergedGamepadState.stickState.set(k, new Vec2(0))\n\t\t})\n\t\tstate.charInputted = []\n\t\tstate.isMouseMoved = false\n\n\t\tstate.gamepadStates.forEach((s) => {\n\t\t\ts.buttonState.update()\n\t\t\ts.stickState.forEach((v, k) => {\n\t\t\t\ts.stickState.set(k, new Vec2(0))\n\t\t\t})\n\t\t})\n\t}\n\n\tfunction registerGamepad(browserGamepad: Gamepad) {\n\n\t\tconst gamepad = {\n\t\t\tindex: browserGamepad.index,\n\t\t\tisPressed: (btn: GamepadButton) => {\n\t\t\t\treturn state.gamepadStates.get(browserGamepad.index).buttonState.pressed.has(btn)\n\t\t\t},\n\t\t\tisDown: (btn: GamepadButton) => {\n\t\t\t\treturn state.gamepadStates.get(browserGamepad.index).buttonState.down.has(btn)\n\t\t\t},\n\t\t\tisReleased: (btn: GamepadButton) => {\n\t\t\t\treturn state.gamepadStates.get(browserGamepad.index).buttonState.released.has(btn)\n\t\t\t},\n\t\t\tgetStick: (stick: GamepadStick) => {\n\t\t\t\treturn state.gamepadStates.get(browserGamepad.index).stickState.get(stick)\n\t\t\t},\n\t\t}\n\n\t\tstate.gamepads.push(gamepad)\n\n\t\tstate.gamepadStates.set(browserGamepad.index, {\n\t\t\tbuttonState: new ButtonState(),\n\t\t\tstickState: new Map([\n\t\t\t\t[\"left\", new Vec2(0)],\n\t\t\t\t[\"right\", new Vec2(0)],\n\t\t\t]),\n\t\t})\n\n\t\treturn gamepad\n\n\t}\n\n\tfunction removeGamepad(gamepad: Gamepad) {\n\t\tstate.gamepads = state.gamepads.filter((g) => g.index !== gamepad.index)\n\t\tstate.gamepadStates.delete(gamepad.index)\n\t}\n\n\tfunction processGamepad() {\n\n\t\tfor (const browserGamepad of navigator.getGamepads()) {\n\t\t\tif (browserGamepad && !state.gamepadStates.has(browserGamepad.index)) {\n\t\t\t\tregisterGamepad(browserGamepad)\n\t\t\t}\n\t\t}\n\n\t\tfor (const gamepad of state.gamepads) {\n\n\t\t\tconst browserGamepad = navigator.getGamepads()[gamepad.index]\n\t\t\tconst customMap = opt.gamepads ?? {}\n\t\t\tconst map = customMap[browserGamepad.id] ?? GAMEPAD_MAP[browserGamepad.id] ?? GAMEPAD_MAP[\"default\"]\n\t\t\tconst gamepadState = state.gamepadStates.get(gamepad.index)\n\n\t\t\tfor (let i = 0; i < browserGamepad.buttons.length; i++) {\n\t\t\t\tif (browserGamepad.buttons[i].pressed) {\n\t\t\t\t\tif (!gamepadState.buttonState.down.has(map.buttons[i])) {\n\t\t\t\t\t\tstate.mergedGamepadState.buttonState.press(map.buttons[i])\n\t\t\t\t\t\tgamepadState.buttonState.press(map.buttons[i])\n\t\t\t\t\t\tstate.events.trigger(\"gamepadButtonPress\", map.buttons[i])\n\t\t\t\t\t}\n\t\t\t\t\tstate.events.trigger(\"gamepadButtonDown\", map.buttons[i])\n\t\t\t\t} else {\n\t\t\t\t\tif (gamepadState.buttonState.down.has(map.buttons[i])) {\n\t\t\t\t\t\tstate.mergedGamepadState.buttonState.release(map.buttons[i])\n\t\t\t\t\t\tgamepadState.buttonState.release(map.buttons[i])\n\t\t\t\t\t\tstate.events.trigger(\"gamepadButtonRelease\", map.buttons[i])\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (const stickName in map.sticks) {\n\t\t\t\tconst stick = map.sticks[stickName]\n\t\t\t\tconst value = new Vec2(\n\t\t\t\t\tbrowserGamepad.axes[stick.x],\n\t\t\t\t\tbrowserGamepad.axes[stick.y],\n\t\t\t\t)\n\t\t\t\tgamepadState.stickState.set(stickName as GamepadStick, value)\n\t\t\t\tstate.mergedGamepadState.stickState.set(stickName as GamepadStick, value)\n\t\t\t\tstate.events.trigger(\"gamepadStick\", stickName, value)\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttype EventList<M> = {\n\t\t[event in keyof M]?: (event: M[event]) => void\n\t}\n\n\tconst canvasEvents: EventList<HTMLElementEventMap> = {}\n\tconst docEvents: EventList<DocumentEventMap> = {}\n\tconst winEvents: EventList<WindowEventMap> = {}\n\n\tcanvasEvents.mousemove = (e) => {\n\t\tconst mousePos = new Vec2(e.offsetX, e.offsetY)\n\t\tconst mouseDeltaPos = new Vec2(e.movementX, e.movementY)\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tstate.isMouseMoved = true\n\t\t\tstate.mousePos = mousePos\n\t\t\tstate.mouseDeltaPos = mouseDeltaPos\n\t\t\tstate.events.trigger(\"mouseMove\")\n\t\t})\n\t}\n\n\tconst MOUSE_BUTTONS: MouseButton[] = [\n\t\t\"left\",\n\t\t\"middle\",\n\t\t\"right\",\n\t\t\"back\",\n\t\t\"forward\",\n\t]\n\n\tcanvasEvents.mousedown = (e) => {\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tconst m = MOUSE_BUTTONS[e.button]\n\t\t\tif (!m) return\n\t\t\tstate.mouseState.press(m)\n\t\t\tstate.events.trigger(\"mousePress\", m)\n\t\t})\n\t}\n\n\tcanvasEvents.mouseup = (e) => {\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tconst m = MOUSE_BUTTONS[e.button]\n\t\t\tif (!m) return\n\t\t\tstate.mouseState.release(m)\n\t\t\tstate.events.trigger(\"mouseRelease\", m)\n\t\t})\n\t}\n\n\tconst PREVENT_DEFAULT_KEYS = new Set([\n\t\t\" \",\n\t\t\"ArrowLeft\",\n\t\t\"ArrowRight\",\n\t\t\"ArrowUp\",\n\t\t\"ArrowDown\",\n\t\t\"Tab\",\n\t])\n\n\t// translate these key names to a simpler version\n\tconst KEY_ALIAS = {\n\t\t\"ArrowLeft\": \"left\",\n\t\t\"ArrowRight\": \"right\",\n\t\t\"ArrowUp\": \"up\",\n\t\t\"ArrowDown\": \"down\",\n\t\t\" \": \"space\",\n\t}\n\n\tcanvasEvents.keydown = (e) => {\n\t\tif (PREVENT_DEFAULT_KEYS.has(e.key)) {\n\t\t\te.preventDefault()\n\t\t}\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tconst k = KEY_ALIAS[e.key] || e.key.toLowerCase()\n\t\t\tif (k.length === 1) {\n\t\t\t\tstate.events.trigger(\"charInput\", k)\n\t\t\t\tstate.charInputted.push(k)\n\t\t\t} else if (k === \"space\") {\n\t\t\t\tstate.events.trigger(\"charInput\", \" \")\n\t\t\t\tstate.charInputted.push(\" \")\n\t\t\t}\n\t\t\tif (e.repeat) {\n\t\t\t\tstate.keyState.pressRepeat(k)\n\t\t\t\tstate.events.trigger(\"keyPressRepeat\", k)\n\t\t\t} else {\n\t\t\t\tstate.keyState.press(k)\n\t\t\t\tstate.events.trigger(\"keyPressRepeat\", k)\n\t\t\t\tstate.events.trigger(\"keyPress\", k)\n\t\t\t}\n\t\t})\n\t}\n\n\tcanvasEvents.keyup = (e) => {\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tconst k = KEY_ALIAS[e.key] || e.key.toLowerCase()\n\t\t\tstate.keyState.release(k)\n\t\t\tstate.events.trigger(\"keyRelease\", k)\n\t\t})\n\t}\n\n\tcanvasEvents.touchstart = (e) => {\n\t\t// disable long tap context menu\n\t\te.preventDefault()\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tconst touches = [...e.changedTouches]\n\t\t\tconst box = state.canvas.getBoundingClientRect()\n\t\t\tif (opt.touchToMouse !== false) {\n\t\t\t\tstate.mousePos = new Vec2(\n\t\t\t\t\ttouches[0].clientX - box.x,\n\t\t\t\t\ttouches[0].clientY - box.y,\n\t\t\t\t)\n\t\t\t\tstate.mouseState.press(\"left\")\n\t\t\t\tstate.events.trigger(\"mousePress\", \"left\")\n\t\t\t}\n\t\t\ttouches.forEach((t) => {\n\t\t\t\tstate.events.trigger(\n\t\t\t\t\t\"touchStart\",\n\t\t\t\t\tnew Vec2(t.clientX - box.x, t.clientY - box.y),\n\t\t\t\t\tt,\n\t\t\t\t)\n\t\t\t})\n\t\t})\n\t}\n\n\tcanvasEvents.touchmove = (e) => {\n\t\t// disable scrolling\n\t\te.preventDefault()\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tconst touches = [...e.changedTouches]\n\t\t\tconst box = state.canvas.getBoundingClientRect()\n\t\t\tif (opt.touchToMouse !== false) {\n\t\t\t\tstate.mousePos = new Vec2(\n\t\t\t\t\ttouches[0].clientX - box.x,\n\t\t\t\t\ttouches[0].clientY - box.y,\n\t\t\t\t)\n\t\t\t\tstate.events.trigger(\"mouseMove\")\n\t\t\t}\n\t\t\ttouches.forEach((t) => {\n\t\t\t\tstate.events.trigger(\n\t\t\t\t\t\"touchMove\",\n\t\t\t\t\tnew Vec2(t.clientX - box.x, t.clientY - box.y),\n\t\t\t\t\tt,\n\t\t\t\t)\n\t\t\t})\n\t\t})\n\t}\n\n\tcanvasEvents.touchend = (e) => {\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tconst touches = [...e.changedTouches]\n\t\t\tconst box = state.canvas.getBoundingClientRect()\n\t\t\tif (opt.touchToMouse !== false) {\n\t\t\t\tstate.mousePos = new Vec2(\n\t\t\t\t\ttouches[0].clientX - box.x,\n\t\t\t\t\ttouches[0].clientY - box.y,\n\t\t\t\t)\n\t\t\t\tstate.mouseState.release(\"left\")\n\t\t\t\tstate.events.trigger(\"mouseRelease\", \"left\")\n\t\t\t}\n\t\t\ttouches.forEach((t) => {\n\t\t\t\tstate.events.trigger(\n\t\t\t\t\t\"touchEnd\",\n\t\t\t\t\tnew Vec2(t.clientX - box.x, t.clientY - box.y),\n\t\t\t\t\tt,\n\t\t\t\t)\n\t\t\t})\n\t\t})\n\t}\n\n\tcanvasEvents.touchcancel = (e) => {\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tconst touches = [...e.changedTouches]\n\t\t\tconst box = state.canvas.getBoundingClientRect()\n\t\t\tif (opt.touchToMouse !== false) {\n\t\t\t\tstate.mousePos = new Vec2(\n\t\t\t\t\ttouches[0].clientX - box.x,\n\t\t\t\t\ttouches[0].clientY - box.y,\n\t\t\t\t)\n\t\t\t\tstate.mouseState.release(\"left\")\n\t\t\t\tstate.events.trigger(\"mouseRelease\", \"left\")\n\t\t\t}\n\t\t\ttouches.forEach((t) => {\n\t\t\t\tstate.events.trigger(\n\t\t\t\t\t\"touchEnd\",\n\t\t\t\t\tnew Vec2(t.clientX - box.x, t.clientY - box.y),\n\t\t\t\t\tt,\n\t\t\t\t)\n\t\t\t})\n\t\t})\n\t}\n\n\t// TODO: option to not prevent default?\n\tcanvasEvents.wheel = (e) => {\n\t\te.preventDefault()\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tstate.events.trigger(\"scroll\", new Vec2(e.deltaX, e.deltaY))\n\t\t})\n\t}\n\n\tcanvasEvents.contextmenu = (e) => e.preventDefault()\n\n\tdocEvents.visibilitychange = () => {\n\t\tif (document.visibilityState === \"visible\") {\n\t\t\t// prevent a surge of dt when switch back after the tab being hidden for a while\n\t\t\tstate.skipTime = true\n\t\t\tstate.events.trigger(\"show\")\n\t\t} else {\n\t\t\tstate.events.trigger(\"hide\")\n\t\t}\n\t}\n\n\twinEvents.gamepadconnected = (e) => {\n\t\tconst kbGamepad = registerGamepad(e.gamepad)\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tstate.events.trigger(\"gamepadConnect\", kbGamepad)\n\t\t})\n\t}\n\n\twinEvents.gamepaddisconnected = (e) => {\n\t\tconst kbGamepad = getGamepads().filter((g) => g.index === e.gamepad.index)[0]\n\t\tremoveGamepad(e.gamepad)\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tstate.events.trigger(\"gamepadDisconnect\", kbGamepad)\n\t\t})\n\t}\n\n\tfor (const name in canvasEvents) {\n\t\tstate.canvas.addEventListener(name, canvasEvents[name])\n\t}\n\n\tfor (const name in docEvents) {\n\t\tdocument.addEventListener(name, docEvents[name])\n\t}\n\n\tfor (const name in winEvents) {\n\t\twindow.addEventListener(name, winEvents[name])\n\t}\n\n\tconst resizeObserver = new ResizeObserver((entries) => {\n\t\tfor (const entry of entries) {\n\t\t\tif (entry.target !== state.canvas) continue\n\t\t\tif (\n\t\t\t\tstate.lastWidth === state.canvas.offsetWidth\n\t\t\t\t&& state.lastHeight === state.canvas.offsetHeight\n\t\t\t) return\n\t\t\tstate.lastWidth = state.canvas.offsetWidth\n\t\t\tstate.lastHeight = state.canvas.offsetHeight\n\t\t\tstate.events.onOnce(\"input\", () => {\n\t\t\t\tstate.events.trigger(\"resize\")\n\t\t\t})\n\t\t}\n\t})\n\n\tresizeObserver.observe(state.canvas)\n\n\treturn {\n\t\tdt,\n\t\ttime,\n\t\trun,\n\t\tcanvas,\n\t\tfps,\n\t\tnumFrames,\n\t\tquit,\n\t\tsetFullscreen,\n\t\tisFullscreen,\n\t\tsetCursor,\n\t\tscreenshot,\n\t\tgetGamepads,\n\t\tgetCursor,\n\t\tsetCursorLocked,\n\t\tisCursorLocked,\n\t\tisTouchscreen,\n\t\tmousePos,\n\t\tmouseDeltaPos,\n\t\tisKeyDown,\n\t\tisKeyPressed,\n\t\tisKeyPressedRepeat,\n\t\tisKeyReleased,\n\t\tisMouseDown,\n\t\tisMousePressed,\n\t\tisMouseReleased,\n\t\tisMouseMoved,\n\t\tisGamepadButtonPressed,\n\t\tisGamepadButtonDown,\n\t\tisGamepadButtonReleased,\n\t\tgetGamepadStick,\n\t\tcharInputted,\n\t\tonResize,\n\t\tonKeyDown,\n\t\tonKeyPress,\n\t\tonKeyPressRepeat,\n\t\tonKeyRelease,\n\t\tonMouseDown,\n\t\tonMousePress,\n\t\tonMouseRelease,\n\t\tonMouseMove,\n\t\tonCharInput,\n\t\tonTouchStart,\n\t\tonTouchMove,\n\t\tonTouchEnd,\n\t\tonScroll,\n\t\tonHide,\n\t\tonShow,\n\t\tonGamepadButtonDown,\n\t\tonGamepadButtonPress,\n\t\tonGamepadButtonRelease,\n\t\tonGamepadStick,\n\t\tonGamepadConnect,\n\t\tonGamepadDisconnect,\n\t\tevents: state.events,\n\t\tget paused() {\n\t\t\treturn state.paused\n\t\t},\n\t\tset paused(p: boolean) {\n\t\t\tstate.paused = p\n\t\t},\n\t}\n\n}\n", "// https://easings.net/\nconst c1 = 1.70158\nconst c2 = c1 * 1.525\nconst c3 = c1 + 1\nconst c4 = (2 * Math.PI) / 3\nconst c5 = (2 * Math.PI) / 4.5\n\nconst easings = {\n\tlinear: (x) => x,\n\teaseInSine: (x) => 1 - Math.cos((x * Math.PI) / 2),\n\teaseOutSine: (x) => Math.sin((x * Math.PI) / 2),\n\teaseInOutSine: (x) => -(Math.cos(Math.PI * x) - 1) / 2,\n\teaseInQuad: (x) => x * x,\n\teaseOutQuad: (x) => 1 - (1 - x) * (1 - x),\n\teaseInOutQuad: (x) => x < 0.5 ? 2 * x * x : 1 - Math.pow(-2 * x + 2, 2) / 2,\n\teaseInCubic: (x) => x * x * x,\n\teaseOutCubic: (x) => 1 - Math.pow(1 - x, 3),\n\teaseInOutCubic: (x) => x < 0.5 ? 4 * x * x * x : 1 - Math.pow(-2 * x + 2, 3) / 2,\n\teaseInQuart: (x) => x * x * x * x,\n\teaseOutQuart: (x) => 1 - Math.pow(1 - x, 4),\n\teaseInOutQuart: (x) => x < 0.5 ? 8 * x * x * x * x : 1 - Math.pow(-2 * x + 2, 4) / 2,\n\teaseInQuint: (x) => x * x * x * x * x,\n\teaseOutQuint: (x) => 1 - Math.pow(1 - x, 5),\n\teaseInOutQuint: (x) => x < 0.5 ? 16 * x * x * x * x * x : 1 - Math.pow(-2 * x + 2, 5) / 2,\n\teaseInExpo: (x) => x === 0 ? 0 : Math.pow(2, 10 * x - 10),\n\teaseOutExpo: (x) => x === 1 ? 1 : 1 - Math.pow(2, -10 * x),\n\teaseInOutExpo: (x) => {\n\t\treturn x === 0\n\t\t\t? 0\n\t\t\t: x === 1\n\t\t\t\t? 1\n\t\t\t\t: x < 0.5\n\t\t\t\t\t? Math.pow(2, 20 * x - 10) / 2\n\t\t\t\t\t: (2 - Math.pow(2, -20 * x + 10)) / 2\n\t},\n\teaseInCirc: (x) => 1 - Math.sqrt(1 - Math.pow(x, 2)),\n\teaseOutCirc: (x) => Math.sqrt(1 - Math.pow(x - 1, 2)),\n\teaseInOutCirc: (x) => {\n\t\treturn x < 0.5\n\t\t\t? (1 - Math.sqrt(1 - Math.pow(2 * x, 2))) / 2\n\t\t\t: (Math.sqrt(1 - Math.pow(-2 * x + 2, 2)) + 1) / 2\n\t},\n\teaseInBack: (x) => c3 * x * x * x - c1 * x * x,\n\teaseOutBack: (x) => 1 + c3 * Math.pow(x - 1, 3) + c1 * Math.pow(x - 1, 2),\n\teaseInOutBack: (x) => {\n\t\treturn x < 0.5\n\t\t\t? (Math.pow(2 * x, 2) * ((c2 + 1) * 2 * x - c2)) / 2\n\t\t\t: (Math.pow(2 * x - 2, 2) * ((c2 + 1) * (x * 2 - 2) + c2) + 2) / 2\n\t},\n\teaseInElastic: (x) => {\n\t\treturn x === 0\n\t\t\t? 0\n\t\t\t: x === 1\n\t\t\t\t? 1\n\t\t\t\t: -Math.pow(2, 10 * x - 10) * Math.sin((x * 10 - 10.75) * c4)\n\t},\n\teaseOutElastic: (x) => {\n\t\treturn x === 0\n\t\t\t? 0\n\t\t\t: x === 1\n\t\t\t\t? 1\n\t\t\t\t: Math.pow(2, -10 * x) * Math.sin((x * 10 - 0.75) * c4) + 1\n\t},\n\teaseInOutElastic: (x) => {\n\t\treturn x === 0\n\t\t\t? 0\n\t\t\t: x === 1\n\t\t\t\t? 1\n\t\t\t\t: x < 0.5\n\t\t\t\t\t? -(Math.pow(2, 20 * x - 10) * Math.sin((20 * x - 11.125) * c5)) / 2\n\t\t\t\t\t: (Math.pow(2, -20 * x + 10) * Math.sin((20 * x - 11.125) * c5)) / 2 + 1\n\t},\n\teaseInBounce: (x) => 1 - easings.easeOutBounce(1 - x),\n\teaseOutBounce: (x) => {\n\t\tconst n1 = 7.5625\n\t\tconst d1 = 2.75\n\t\tif (x < 1 / d1) {\n\t\t\treturn n1 * x * x\n\t\t} else if (x < 2 / d1) {\n\t\t\treturn n1 * (x -= 1.5 / d1) * x + 0.75\n\t\t} else if (x < 2.5 / d1) {\n\t\t\treturn n1 * (x -= 2.25 / d1) * x + 0.9375\n\t\t} else {\n\t\t\treturn n1 * (x -= 2.625 / d1) * x + 0.984375\n\t\t}\n\t},\n\teaseInOutBounce: (x) => {\n\t\treturn x < 0.5\n\t\t\t? (1 - easings.easeOutBounce(1 - 2 * x)) / 2\n\t\t\t: (1 + easings.easeOutBounce(2 * x - 1)) / 2\n\t},\n}\n\nexport default easings\n", "export default class Timer {\n\n\ttime: number\n\taction: () => void\n\tfinished: boolean = false\n\tpaused: boolean = false\n\n\tconstructor(time: number, action: () => void) {\n\t\tthis.time = time\n\t\tthis.action = action\n\t}\n\n\ttick(dt: number): boolean {\n\t\tif (this.finished || this.paused) return false\n\t\tthis.time -= dt\n\t\tif (this.time <= 0) {\n\t\t\tthis.action()\n\t\t\tthis.finished = true\n\t\t\tthis.time = 0\n\t\t\treturn true\n\t\t}\n\t\treturn false\n\t}\n\n\treset(time) {\n\t\tthis.time = time\n\t\tthis.finished = false\n\t}\n\n}\n", "const VERSION = \"3000.1.0\"\n\nimport initApp from \"./app\"\n\nimport {\n\tsat,\n\tvec2,\n\tRect,\n\tPolygon,\n\tLine,\n\tCircle,\n\tColor,\n\tVec2,\n\tMat4,\n\tQuad,\n\tRNG,\n\tquad,\n\trgb,\n\thsl2rgb,\n\trand,\n\trandi,\n\trandSeed,\n\tchance,\n\tchoose,\n\tclamp,\n\tlerp,\n\tmap,\n\tmapc,\n\twave,\n\ttestLinePoint,\n\ttestLineLine,\n\ttestLineCircle,\n\ttestRectRect,\n\ttestRectLine,\n\ttestRectPoint,\n\ttestPolygonPoint,\n\ttestCirclePolygon,\n\tdeg2rad,\n\trad2deg,\n} from \"./math\"\n\nimport easings from \"./easings\"\n\nimport {\n\tIDList,\n\tEvent,\n\tEventHandler,\n\tdownload,\n\tdownloadText,\n\tdownloadJSON,\n\tdownloadBlob,\n\tuid,\n\tisDataURL,\n\tgetExt,\n\tdeepEq,\n\tdataURLToArrayBuffer,\n\tEventController,\n\t// eslint-disable-next-line\n\twarn,\n\t// eslint-disable-next-line\n\tbenchmark,\n\t// eslint-disable-next-line\n\tcomparePerf,\n\tBinaryHeap,\n} from \"./utils\"\n\nimport type {\n\tGfxShader,\n\tGfxFont,\n\tRenderProps,\n\tCharTransform,\n\tTextureOpt,\n\tImageSource,\n\tFormattedText,\n\tFormattedChar,\n\tDrawRectOpt,\n\tDrawLineOpt,\n\tDrawLinesOpt,\n\tDrawTriangleOpt,\n\tDrawPolygonOpt,\n\tDrawCircleOpt,\n\tDrawEllipseOpt,\n\tDrawUVQuadOpt,\n\tVertex,\n\tBitmapFontData,\n\tShaderData,\n\tLoadSpriteSrc,\n\tLoadSpriteOpt,\n\tSpriteAtlasData,\n\tLoadBitmapFontOpt,\n\tKaboomCtx,\n\tKaboomOpt,\n\tAudioPlay,\n\tAudioPlayOpt,\n\tDrawSpriteOpt,\n\tDrawTextOpt,\n\tTextAlign,\n\tGameObj,\n\tSceneName,\n\tSceneDef,\n\tCompList,\n\tComp,\n\tTag,\n\tKey,\n\tMouseButton,\n\tPosComp,\n\tScaleComp,\n\tRotateComp,\n\tColorComp,\n\tOpacityComp,\n\tAnchor,\n\tAnchorComp,\n\tZComp,\n\tFollowComp,\n\tOffScreenCompOpt,\n\tOffScreenComp,\n\tAreaCompOpt,\n\tAreaComp,\n\tSpriteComp,\n\tSpriteCompOpt,\n\tSpriteAnimPlayOpt,\n\tSpriteAnims,\n\tTextComp,\n\tTextCompOpt,\n\tRectComp,\n\tRectCompOpt,\n\tUVQuadComp,\n\tCircleComp,\n\tOutlineComp,\n\tTimerComp,\n\tBodyComp,\n\tBodyCompOpt,\n\tUniform,\n\tShaderComp,\n\tFixedComp,\n\tStayComp,\n\tHealthComp,\n\tLifespanCompOpt,\n\tStateComp,\n\tDebug,\n\tKaboomPlugin,\n\tEmptyComp,\n\tLevelComp,\n\tEdge,\n\tTileComp,\n\tTileCompOpt,\n\tLevelOpt,\n\tRecording,\n\tBoomOpt,\n\tPeditFile,\n\tShape,\n\tDoubleJumpComp,\n\tTimerController,\n\tTweenController,\n\tLoadFontOpt,\n\tAgentComp,\n\tAgentCompOpt,\n\tPathFindOpt,\n\tGetOpt,\n\tVec2Args,\n\tNineSlice,\n\tLerpValue,\n\tTexFilter,\n} from \"./types\"\n\nimport Timer from \"./timer\"\n\n// @ts-ignore\nimport beanSpriteSrc from \"./assets/bean.png\"\n// @ts-ignore\nimport burpSoundSrc from \"./assets/burp.mp3\"\n// @ts-ignore\nimport kaSpriteSrc from \"./assets/ka.png\"\n// @ts-ignore\nimport boomSpriteSrc from \"./assets/boom.png\"\n\ntype EventList<M> = {\n\t[event in keyof M]?: (event: M[event]) => void\n}\n\ninterface SpriteCurAnim {\n\tname: string,\n\ttimer: number,\n\tloop: boolean,\n\tspeed: number,\n\tpingpong: boolean,\n\tonEnd: () => void,\n}\n\n// some default charsets for loading bitmap fonts\nconst ASCII_CHARS = \" !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\"\n\nconst DEF_ANCHOR = \"topleft\"\nconst BG_GRID_SIZE = 64\n\nconst DEF_FONT = \"monospace\"\nconst DBG_FONT = \"monospace\"\nconst DEF_TEXT_SIZE = 36\nconst DEF_TEXT_CACHE_SIZE = 64\nconst MAX_TEXT_CACHE_SIZE = 256\nconst FONT_ATLAS_WIDTH = 2048\nconst FONT_ATLAS_HEIGHT = 2048\nconst SPRITE_ATLAS_WIDTH = 2048\nconst SPRITE_ATLAS_HEIGHT = 2048\n// 0.1 pixel padding to texture coordinates to prevent artifact\nconst UV_PAD = 0.1\nconst DEF_HASH_GRID_SIZE = 64\nconst DEF_FONT_FILTER = \"nearest\"\n\nconst LOG_MAX = 8\nconst LOG_TIME = 4\n\nconst VERTEX_FORMAT = [\n\t{ name: \"a_pos\", size: 2 },\n\t{ name: \"a_uv\", size: 2 },\n\t{ name: \"a_color\", size: 4 },\n]\n\nconst STRIDE = VERTEX_FORMAT.reduce((sum, f) => sum + f.size, 0)\n\nconst MAX_BATCHED_QUAD = 2048\nconst MAX_BATCHED_VERTS = MAX_BATCHED_QUAD * 4 * STRIDE\nconst MAX_BATCHED_INDICES = MAX_BATCHED_QUAD * 6\n\n// vertex shader template, replace {{user}} with user vertex shader code\nconst VERT_TEMPLATE = `\nattribute vec2 a_pos;\nattribute vec2 a_uv;\nattribute vec4 a_color;\n\nvarying vec2 v_pos;\nvarying vec2 v_uv;\nvarying vec4 v_color;\n\nvec4 def_vert() {\n\treturn vec4(a_pos, 0.0, 1.0);\n}\n\n{{user}}\n\nvoid main() {\n\tvec4 pos = vert(a_pos, a_uv, a_color);\n\tv_pos = a_pos;\n\tv_uv = a_uv;\n\tv_color = a_color;\n\tgl_Position = pos;\n}\n`\n\n// fragment shader template, replace {{user}} with user fragment shader code\nconst FRAG_TEMPLATE = `\nprecision mediump float;\n\nvarying vec2 v_pos;\nvarying vec2 v_uv;\nvarying vec4 v_color;\n\nuniform sampler2D u_tex;\n\nvec4 def_frag() {\n\treturn v_color * texture2D(u_tex, v_uv);\n}\n\n{{user}}\n\nvoid main() {\n\tgl_FragColor = frag(v_pos, v_uv, v_color, u_tex);\n\tif (gl_FragColor.a == 0.0) {\n\t\tdiscard;\n\t}\n}\n`\n\n// default {{user}} vertex shader code\nconst DEF_VERT = `\nvec4 vert(vec2 pos, vec2 uv, vec4 color) {\n\treturn def_vert();\n}\n`\n\n// default {{user}} fragment shader code\nconst DEF_FRAG = `\nvec4 frag(vec2 pos, vec2 uv, vec4 color, sampler2D tex) {\n\treturn def_frag();\n}\n`\n\nconst COMP_DESC = new Set([\n\t\"id\",\n\t\"require\",\n])\n\nconst COMP_EVENTS = new Set([\n\t\"add\",\n\t\"update\",\n\t\"draw\",\n\t\"destroy\",\n\t\"inspect\",\n\t\"drawInspect\",\n])\n\n// convert anchor string to a vec2 offset\nfunction anchorPt(orig: Anchor | Vec2): Vec2 {\n\tswitch (orig) {\n\t\tcase \"topleft\": return new Vec2(-1, -1)\n\t\tcase \"top\": return new Vec2(0, -1)\n\t\tcase \"topright\": return new Vec2(1, -1)\n\t\tcase \"left\": return new Vec2(-1, 0)\n\t\tcase \"center\": return new Vec2(0, 0)\n\t\tcase \"right\": return new Vec2(1, 0)\n\t\tcase \"botleft\": return new Vec2(-1, 1)\n\t\tcase \"bot\": return new Vec2(0, 1)\n\t\tcase \"botright\": return new Vec2(1, 1)\n\t\tdefault: return orig\n\t}\n}\n\nfunction alignPt(align: TextAlign): number {\n\tswitch (align) {\n\t\tcase \"left\": return 0\n\t\tcase \"center\": return 0.5\n\t\tcase \"right\": return 1\n\t\tdefault: return 0\n\t}\n}\n\nfunction createEmptyAudioBuffer(ctx: AudioContext) {\n\treturn ctx.createBuffer(1, 1, 44100)\n}\n\n// only exports one kaboom() which contains all the state\nexport default (gopt: KaboomOpt = {}): KaboomCtx => {\n\n\tconst root = gopt.root ?? document.body\n\n\t// if root is not defined (which falls back to <body>) we assume user is using kaboom on a clean page, and modify <body> to better fit a full screen canvas\n\tif (root === document.body) {\n\t\tdocument.body.style[\"width\"] = \"100%\"\n\t\tdocument.body.style[\"height\"] = \"100%\"\n\t\tdocument.body.style[\"margin\"] = \"0px\"\n\t\tdocument.documentElement.style[\"width\"] = \"100%\"\n\t\tdocument.documentElement.style[\"height\"] = \"100%\"\n\t}\n\n\t// create a <canvas> if user didn't provide one\n\tconst canvas = gopt.canvas ?? (() => {\n\t\tconst canvas = document.createElement(\"canvas\")\n\t\troot.appendChild(canvas)\n\t\treturn canvas\n\t})()\n\n\t// global pixel scale\n\tconst gscale = gopt.scale ?? 1\n\tconst fixedSize = gopt.width && gopt.height && !gopt.stretch && !gopt.letterbox\n\n\t// adjust canvas size according to user size / viewport settings\n\tif (fixedSize) {\n\t\tcanvas.width = gopt.width * gscale\n\t\tcanvas.height = gopt.height * gscale\n\t} else {\n\t\tcanvas.width = canvas.parentElement.offsetWidth\n\t\tcanvas.height = canvas.parentElement.offsetHeight\n\t}\n\n\tconst cw = canvas.width\n\tconst ch = canvas.height\n\tconst pixelDensity = gopt.pixelDensity || window.devicePixelRatio\n\n\tcanvas.width *= pixelDensity\n\tcanvas.height *= pixelDensity\n\n\t// canvas css styles\n\tconst styles = [\n\t\t\"outline: none\",\n\t\t\"cursor: default\",\n\t]\n\n\tif (fixedSize) {\n\t\tstyles.push(`width: ${cw}px`)\n\t\tstyles.push(`height: ${ch}px`)\n\t} else {\n\t\tstyles.push(\"width: 100%\")\n\t\tstyles.push(\"height: 100%\")\n\t}\n\n\tif (gopt.crisp) {\n\t\t// chrome only supports pixelated and firefox only supports crisp-edges\n\t\tstyles.push(\"image-rendering: pixelated\")\n\t\tstyles.push(\"image-rendering: crisp-edges\")\n\t}\n\n\tcanvas.style.cssText = styles.join(\";\")\n\t// make canvas focusable\n\tcanvas.tabIndex = 0\n\n\tconst fontCacheCanvas = document.createElement(\"canvas\")\n\tfontCacheCanvas.width = MAX_TEXT_CACHE_SIZE\n\tfontCacheCanvas.height = MAX_TEXT_CACHE_SIZE\n\tconst fontCacheCtx = fontCacheCanvas.getContext(\"2d\", {\n\t\twillReadFrequently: true,\n\t})\n\n\tconst app = initApp({\n\t\tcanvas: canvas,\n\t\ttouchToMouse: gopt.touchToMouse,\n\t\tgamepads: gopt.gamepads,\n\t\tpixelDensity: gopt.pixelDensity,\n\t\tmaxFPS: gopt.maxFPS,\n\t})\n\n\tconst gc: Array<() => void> = []\n\n\tconst gl = app.canvas()\n\t\t.getContext(\"webgl\", {\n\t\t\tantialias: true,\n\t\t\tdepth: true,\n\t\t\tstencil: true,\n\t\t\talpha: true,\n\t\t\tpreserveDrawingBuffer: true,\n\t\t})\n\n\tclass Texture {\n\n\t\tsrc: null | ImageSource = null\n\t\tglTex: WebGLTexture\n\t\twidth: number\n\t\theight: number\n\n\t\tconstructor(w: number, h: number, opt: TextureOpt = {}) {\n\n\t\t\tthis.glTex = gl.createTexture()\n\t\t\tgc.push(() => this.free())\n\t\t\tthis.bind()\n\n\t\t\tif (w && h) {\n\t\t\t\tgl.texImage2D(\n\t\t\t\t\tgl.TEXTURE_2D,\n\t\t\t\t\t0, gl.RGBA,\n\t\t\t\t\tw,\n\t\t\t\t\th,\n\t\t\t\t\t0,\n\t\t\t\t\tgl.RGBA,\n\t\t\t\t\tgl.UNSIGNED_BYTE,\n\t\t\t\t\tnull,\n\t\t\t\t)\n\t\t\t}\n\n\t\t\tthis.width = w\n\t\t\tthis.height = h\n\n\t\t\tconst filter = (() => {\n\t\t\t\tswitch (opt.filter ?? gopt.texFilter) {\n\t\t\t\t\tcase \"linear\": return gl.LINEAR\n\t\t\t\t\tcase \"nearest\": return gl.NEAREST\n\t\t\t\t\tdefault: return gl.NEAREST\n\t\t\t\t}\n\t\t\t})()\n\n\t\t\tconst wrap = (() => {\n\t\t\t\tswitch (opt.wrap) {\n\t\t\t\t\tcase \"repeat\": return gl.REPEAT\n\t\t\t\t\tcase \"clampToEdge\": return gl.CLAMP_TO_EDGE\n\t\t\t\t\tdefault: return gl.CLAMP_TO_EDGE\n\t\t\t\t}\n\t\t\t})()\n\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, filter)\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, filter)\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, wrap)\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, wrap)\n\t\t\tthis.unbind()\n\n\t\t}\n\n\t\tstatic fromImage(img: ImageSource, opt: TextureOpt = {}): Texture {\n\t\t\tconst tex = new Texture(0, 0, opt)\n\t\t\ttex.bind()\n\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, img)\n\t\t\ttex.width = img.width\n\t\t\ttex.height = img.height\n\t\t\ttex.unbind()\n\t\t\ttex.src = img\n\t\t\treturn tex\n\t\t}\n\n\t\tupdate(img: ImageSource, x = 0, y = 0) {\n\t\t\tthis.bind()\n\t\t\tgl.texSubImage2D(gl.TEXTURE_2D, 0, x, y, gl.RGBA, gl.UNSIGNED_BYTE, img)\n\t\t\tthis.unbind()\n\t\t}\n\n\t\tbind() {\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, this.glTex)\n\t\t}\n\n\t\tunbind() {\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, null)\n\t\t}\n\n\t\tfree() {\n\t\t\tgl.deleteTexture(this.glTex)\n\t\t}\n\n\t}\n\n\tclass TexPacker {\n\t\tprivate tex: Texture\n\t\tprivate canvas: HTMLCanvasElement\n\t\tprivate ctx: CanvasRenderingContext2D\n\t\tprivate x: number = 0\n\t\tprivate y: number = 0\n\t\tprivate curHeight: number = 0\n\t\tconstructor(w: number, h: number) {\n\t\t\tthis.canvas = document.createElement(\"canvas\")\n\t\t\tthis.canvas.width = w\n\t\t\tthis.canvas.height = h\n\t\t\tthis.tex = Texture.fromImage(this.canvas)\n\t\t\tthis.ctx = this.canvas.getContext(\"2d\")\n\t\t}\n\t\tadd(img: ImageSource): [Texture, Quad] {\n\t\t\tif (img.width > this.canvas.width || img.height > this.canvas.height) {\n\t\t\t\tthrow new Error(`Texture size (${img.width} x ${img.height}) exceeds limit (${this.canvas.width} x ${this.canvas.height})`)\n\t\t\t}\n\t\t\tif (this.x + img.width > this.canvas.width) {\n\t\t\t\tthis.x = 0\n\t\t\t\tthis.y += this.curHeight\n\t\t\t\tthis.curHeight = 0\n\t\t\t}\n\t\t\tif (this.y + img.height > this.canvas.height) {\n\t\t\t\tthis.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height)\n\t\t\t\tthis.tex = Texture.fromImage(this.canvas)\n\t\t\t\tthis.x = 0\n\t\t\t\tthis.y = 0\n\t\t\t\tthis.curHeight = 0\n\t\t\t}\n\t\t\tconst pos = new Vec2(this.x, this.y)\n\t\t\tthis.x += img.width\n\t\t\tif (img.height > this.curHeight) {\n\t\t\t\tthis.curHeight = img.height\n\t\t\t}\n\t\t\tif (img instanceof ImageData) {\n\t\t\t\tthis.ctx.putImageData(img, pos.x, pos.y)\n\t\t\t} else {\n\t\t\t\tthis.ctx.drawImage(img, pos.x, pos.y)\n\t\t\t}\n\t\t\tthis.tex.update(this.canvas)\n\t\t\treturn [this.tex, new Quad(\n\t\t\t\tpos.x / this.canvas.width,\n\t\t\t\tpos.y / this.canvas.height,\n\t\t\t\timg.width / this.canvas.width,\n\t\t\t\timg.height / this.canvas.height,\n\t\t\t)]\n\t\t}\n\t}\n\n\tclass FrameBuffer {\n\n\t\ttex: Texture\n\t\tglFrameBuffer: WebGLFramebuffer\n\t\tglRenderBuffer: WebGLRenderbuffer\n\n\t\tconstructor(w: number, h: number, opt: TextureOpt = {}) {\n\t\t\tthis.tex = new Texture(w, h, opt)\n\t\t\tthis.glFrameBuffer = gl.createFramebuffer()\n\t\t\tthis.glRenderBuffer = gl.createRenderbuffer()\n\t\t\tgc.push(() => this.free())\n\t\t\tthis.bind()\n\t\t\tgl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_STENCIL, w, h)\n\t\t\tgl.framebufferTexture2D(\n\t\t\t\tgl.FRAMEBUFFER,\n\t\t\t\tgl.COLOR_ATTACHMENT0,\n\t\t\t\tgl.TEXTURE_2D,\n\t\t\t\tthis.tex.glTex,\n\t\t\t\t0,\n\t\t\t)\n\t\t\tgl.framebufferRenderbuffer(\n\t\t\t\tgl.FRAMEBUFFER,\n\t\t\t\tgl.DEPTH_STENCIL_ATTACHMENT,\n\t\t\t\tgl.RENDERBUFFER,\n\t\t\t\tthis.glRenderBuffer,\n\t\t\t)\n\t\t\tthis.unbind()\n\t\t}\n\n\t\tget width() {\n\t\t\treturn this.tex.width\n\t\t}\n\n\t\tget height() {\n\t\t\treturn this.tex.height\n\t\t}\n\n\t\tbind() {\n\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, this.glFrameBuffer)\n\t\t\tgl.bindRenderbuffer(gl.RENDERBUFFER, this.glRenderBuffer)\n\t\t}\n\n\t\tunbind() {\n\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null)\n\t\t\tgl.bindRenderbuffer(gl.RENDERBUFFER, null)\n\t\t}\n\n\t\tfree() {\n\t\t\tgl.deleteFramebuffer(this.glFrameBuffer)\n\t\t\tgl.deleteRenderbuffer(this.glRenderBuffer)\n\t\t\tthis.tex.free()\n\t\t}\n\n\t}\n\n\tconst gfx = (() => {\n\n\t\tconst defShader = makeShader(DEF_VERT, DEF_FRAG)\n\n\t\t// a 1x1 white texture to draw raw shapes like rectangles and polygons\n\t\t// we use a texture for those so we can use only 1 pipeline for drawing sprites + shapes\n\t\tconst emptyTex = Texture.fromImage(\n\t\t\tnew ImageData(new Uint8ClampedArray([ 255, 255, 255, 255 ]), 1, 1),\n\t\t)\n\n\t\tconst frameBuffer = (gopt.width && gopt.height)\n\t\t\t? new FrameBuffer(gopt.width * pixelDensity, gopt.height * pixelDensity)\n\t\t\t: new FrameBuffer(gl.drawingBufferWidth, gl.drawingBufferHeight)\n\n\t\tlet bgColor: null | Color = null\n\t\tlet bgAlpha = 1\n\n\t\tif (gopt.background) {\n\t\t\tbgColor = Color.fromArray(gopt.background)\n\t\t\tbgAlpha = gopt.background[3] ?? 1\n\t\t\tgl.clearColor(\n\t\t\t\tbgColor.r / 255,\n\t\t\t\tbgColor.g / 255,\n\t\t\t\tbgColor.b / 255,\n\t\t\t\tbgAlpha,\n\t\t\t)\n\t\t}\n\n\t\tgl.enable(gl.BLEND)\n\t\tgl.enable(gl.SCISSOR_TEST)\n\t\tgl.blendFuncSeparate(\n\t\t\tgl.SRC_ALPHA,\n\t\t\tgl.ONE_MINUS_SRC_ALPHA,\n\t\t\tgl.ONE,\n\t\t\tgl.ONE_MINUS_SRC_ALPHA,\n\t\t)\n\n\t\t// we only use one vertex and index buffer that batches all draw calls\n\t\tconst vbuf = gl.createBuffer()\n\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, vbuf)\n\t\tgl.bufferData(gl.ARRAY_BUFFER, MAX_BATCHED_VERTS * 4, gl.DYNAMIC_DRAW)\n\n\t\tVERTEX_FORMAT.reduce((offset, f, i) => {\n\t\t\tgl.vertexAttribPointer(i, f.size, gl.FLOAT, false, STRIDE * 4, offset)\n\t\t\tgl.enableVertexAttribArray(i)\n\t\t\treturn offset + f.size * 4\n\t\t}, 0)\n\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, null)\n\n\t\tconst ibuf = gl.createBuffer()\n\n\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, ibuf)\n\t\tgl.bufferData(gl.ELEMENT_ARRAY_BUFFER, MAX_BATCHED_INDICES * 4, gl.DYNAMIC_DRAW)\n\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null)\n\n\t\t// a checkerboard texture used for the default background\n\t\tconst bgTex = Texture.fromImage(\n\t\t\tnew ImageData(new Uint8ClampedArray([\n\t\t\t\t128, 128, 128, 255,\n\t\t\t\t190, 190, 190, 255,\n\t\t\t\t190, 190, 190, 255,\n\t\t\t\t128, 128, 128, 255,\n\t\t\t]), 2, 2), {\n\t\t\t\twrap: \"repeat\",\n\t\t\t\tfilter: \"nearest\",\n\t\t\t},\n\t\t)\n\n\t\treturn {\n\n\t\t\t// keep track of how many draw calls we're doing this frame\n\t\t\tdrawCalls: 0,\n\t\t\t// how many draw calls we're doing last frame, this is the number we give to users\n\t\t\tlastDrawCalls: 0,\n\n\t\t\t// gfx states\n\t\t\tdefShader: defShader,\n\t\t\tcurShader: defShader,\n\t\t\tframeBuffer: frameBuffer,\n\t\t\tpostShader: null,\n\t\t\tpostShaderUniform: null,\n\t\t\tdefTex: emptyTex,\n\t\t\tcurTex: emptyTex,\n\t\t\tcurUniform: {},\n\t\t\tvbuf: vbuf,\n\t\t\tibuf: ibuf,\n\n\t\t\t// local vertex / index buffer queue\n\t\t\tvqueue: [],\n\t\t\tiqueue: [],\n\n\t\t\ttransform: new Mat4(),\n\t\t\ttransformStack: [],\n\n\t\t\tbgTex: bgTex,\n\t\t\tbgColor: bgColor,\n\t\t\tbgAlpha: bgAlpha,\n\n\t\t\twidth: gopt.width ?? gl.drawingBufferWidth / pixelDensity / gscale,\n\t\t\theight: gopt.height ?? gl.drawingBufferHeight / pixelDensity / gscale,\n\n\t\t\tviewport: {\n\t\t\t\tx: 0,\n\t\t\t\ty: 0,\n\t\t\t\twidth: gl.drawingBufferWidth,\n\t\t\t\theight: gl.drawingBufferHeight,\n\t\t\t},\n\n\t\t\tfixed: false,\n\n\t\t}\n\n\t})()\n\n\tclass SpriteData {\n\n\t\ttex: Texture\n\t\tframes: Quad[] = [ new Quad(0, 0, 1, 1) ]\n\t\tanims: SpriteAnims = {}\n\t\tslice9: NineSlice | null = null\n\n\t\tconstructor(\n\t\t\ttex: Texture,\n\t\t\tframes?: Quad[],\n\t\t\tanims: SpriteAnims = {},\n\t\t\tslice9: NineSlice = null,\n\t\t) {\n\t\t\tthis.tex = tex\n\t\t\tif (frames) this.frames = frames\n\t\t\tthis.anims = anims\n\t\t\tthis.slice9 = slice9\n\t\t}\n\n\t\tstatic from(src: LoadSpriteSrc, opt: LoadSpriteOpt = {}): Promise<SpriteData> {\n\t\t\treturn typeof src === \"string\"\n\t\t\t\t? SpriteData.fromURL(src, opt)\n\t\t\t\t: Promise.resolve(SpriteData.fromImage(src, opt))\n\t\t}\n\n\t\tstatic fromImage(data: ImageSource, opt: LoadSpriteOpt = {}): SpriteData {\n\t\t\tconst [tex, quad] = assets.packer.add(data)\n\t\t\tconst frames = opt.frames ? opt.frames.map((f) => new Quad(\n\t\t\t\tquad.x + f.x * quad.w,\n\t\t\t\tquad.y + f.y * quad.h,\n\t\t\t\tf.w * quad.w,\n\t\t\t\tf.h * quad.h,\n\t\t\t)) : slice(opt.sliceX || 1, opt.sliceY || 1, quad.x, quad.y, quad.w, quad.h)\n\t\t\treturn new SpriteData(tex, frames, opt.anims, opt.slice9)\n\t\t}\n\n\t\tstatic fromURL(url: string, opt: LoadSpriteOpt = {}): Promise<SpriteData> {\n\t\t\treturn loadImg(url).then((img) => SpriteData.fromImage(img, opt))\n\t\t}\n\n\t}\n\n\tclass SoundData {\n\n\t\tbuf: AudioBuffer\n\n\t\tconstructor(buf: AudioBuffer) {\n\t\t\tthis.buf = buf\n\t\t}\n\n\t\tstatic fromArrayBuffer(buf: ArrayBuffer): Promise<SoundData> {\n\t\t\treturn new Promise((resolve, reject) =>\n\t\t\t\taudio.ctx.decodeAudioData(buf, resolve, reject),\n\t\t\t).then((buf: AudioBuffer) => new SoundData(buf))\n\t\t}\n\n\t\tstatic fromURL(url: string): Promise<SoundData> {\n\t\t\tif (isDataURL(url)) {\n\t\t\t\treturn SoundData.fromArrayBuffer(dataURLToArrayBuffer(url))\n\t\t\t} else {\n\t\t\t\treturn fetchArrayBuffer(url).then((buf) => SoundData.fromArrayBuffer(buf))\n\t\t\t}\n\t\t}\n\n\t}\n\n\tconst audio = (() => {\n\n\t\t// TODO: handle when audio context is unavailable\n\t\tconst ctx = new (\n\t\t\twindow.AudioContext || (window as any).webkitAudioContext\n\t\t)() as AudioContext\n\t\tconst masterNode = ctx.createGain()\n\t\tmasterNode.connect(ctx.destination)\n\n\t\t// by default browsers can only load audio async, we don't deal with that and just start with an empty audio buffer\n\t\tconst burpSnd = new SoundData(createEmptyAudioBuffer(ctx))\n\n\t\t// load that burp sound\n\t\tctx.decodeAudioData(burpSoundSrc.buffer.slice(0)).then((buf) => {\n\t\t\tburpSnd.buf = buf\n\t\t}).catch((err) => {\n\t\t\tconsole.error(\"Failed to load burp: \", err)\n\t\t})\n\n\t\treturn {\n\t\t\tctx,\n\t\t\tmasterNode,\n\t\t\tburpSnd,\n\t\t}\n\n\t})()\n\n\tclass Asset<D> {\n\t\tloaded: boolean = false\n\t\tdata: D | null = null\n\t\terror: Error | null = null\n\t\tprivate onLoadEvents: Event<[D]> = new Event()\n\t\tprivate onErrorEvents: Event<[Error]> = new Event()\n\t\tprivate onFinishEvents: Event<[]> = new Event()\n\t\tconstructor(loader: Promise<D>) {\n\t\t\tloader.then((data) => {\n\t\t\t\tthis.data = data\n\t\t\t\tthis.onLoadEvents.trigger(data)\n\t\t\t}).catch((err) => {\n\t\t\t\tthis.error = err\n\t\t\t\tif (this.onErrorEvents.numListeners() > 0) {\n\t\t\t\t\tthis.onErrorEvents.trigger(err)\n\t\t\t\t} else {\n\t\t\t\t\tthrow err\n\t\t\t\t}\n\t\t\t}).finally(() => {\n\t\t\t\tthis.onFinishEvents.trigger()\n\t\t\t\tthis.loaded = true\n\t\t\t})\n\t\t}\n\t\tstatic loaded<D>(data: D): Asset<D> {\n\t\t\tconst asset = new Asset(Promise.resolve(data)) as Asset<D>\n\t\t\tasset.data = data\n\t\t\tasset.loaded = true\n\t\t\treturn asset\n\t\t}\n\t\tonLoad(action: (data: D) => void) {\n\t\t\tif (this.loaded && this.data) {\n\t\t\t\taction(this.data)\n\t\t\t} else {\n\t\t\t\tthis.onLoadEvents.add(action)\n\t\t\t}\n\t\t\treturn this\n\t\t}\n\t\tonError(action: (err: Error) => void) {\n\t\t\tif (this.loaded && this.error) {\n\t\t\t\taction(this.error)\n\t\t\t} else {\n\t\t\t\tthis.onErrorEvents.add(action)\n\t\t\t}\n\t\t\treturn this\n\t\t}\n\t\tonFinish(action: () => void) {\n\t\t\tif (this.loaded) {\n\t\t\t\taction()\n\t\t\t} else {\n\t\t\t\tthis.onFinishEvents.add(action)\n\t\t\t}\n\t\t\treturn this\n\t\t}\n\t\tthen(action: (data: D) => void): Asset<D> {\n\t\t\treturn this.onLoad(action)\n\t\t}\n\t\tcatch(action: (err: Error) => void): Asset<D> {\n\t\t\treturn this.onError(action)\n\t\t}\n\t\tfinally(action: () => void): Asset<D> {\n\t\t\treturn this.onFinish(action)\n\t\t}\n\t}\n\n\tclass AssetBucket<D> {\n\t\tassets: Map<string, Asset<D>> = new Map()\n\t\tlastUID: number = 0\n\t\tadd(name: string | null, loader: Promise<D>): Asset<D> {\n\t\t\t// if user don't provide a name we use a generated one\n\t\t\tconst id = name ?? (this.lastUID++ + \"\")\n\t\t\tconst asset = new Asset(loader)\n\t\t\tthis.assets.set(id, asset)\n\t\t\treturn asset\n\t\t}\n\t\taddLoaded(name: string | null, data: D): Asset<D> {\n\t\t\tconst id = name ?? (this.lastUID++ + \"\")\n\t\t\tconst asset = Asset.loaded(data)\n\t\t\tthis.assets.set(id, asset)\n\t\t\treturn asset\n\t\t}\n\t\tget(handle: string): Asset<D> | void {\n\t\t\treturn this.assets.get(handle)\n\t\t}\n\t\tprogress(): number {\n\t\t\tif (this.assets.size === 0) {\n\t\t\t\treturn 1\n\t\t\t}\n\t\t\tlet loaded = 0\n\t\t\tthis.assets.forEach((asset) => {\n\t\t\t\tif (asset.loaded) {\n\t\t\t\t\tloaded++\n\t\t\t\t}\n\t\t\t})\n\t\t\treturn loaded / this.assets.size\n\t\t}\n\t}\n\n\tconst assets = {\n\t\t// prefix for when loading from a url\n\t\turlPrefix: \"\",\n\t\t// asset holders\n\t\tsprites: new AssetBucket<SpriteData>(),\n\t\tfonts: new AssetBucket<FontData>(),\n\t\tbitmapFonts: new AssetBucket<BitmapFontData>(),\n\t\tsounds: new AssetBucket<SoundData>(),\n\t\tshaders: new AssetBucket<ShaderData>(),\n\t\tcustom: new AssetBucket<any>(),\n\t\tpacker: new TexPacker(SPRITE_ATLAS_WIDTH, SPRITE_ATLAS_HEIGHT),\n\t\t// if we finished initially loading all assets\n\t\tloaded: false,\n\t}\n\n\tconst game = {\n\n\t\t// general events\n\t\tevents: new EventHandler<{\n\t\t\tmouseMove: [],\n\t\t\tmouseDown: [MouseButton],\n\t\t\tmousePress: [MouseButton],\n\t\t\tmouseRelease: [MouseButton],\n\t\t\tcharInput: [string],\n\t\t\tkeyPress: [Key],\n\t\t\tkeyDown: [Key],\n\t\t\tkeyPressRepeat: [Key],\n\t\t\tkeyRelease: [Key],\n\t\t\ttouchStart: [Vec2, Touch],\n\t\t\ttouchMove: [Vec2, Touch],\n\t\t\ttouchEnd: [Vec2, Touch],\n\t\t\tgamepadButtonDown: [string],\n\t\t\tgamepadButtonPress: [string],\n\t\t\tgamepadButtonRelease: [string],\n\t\t\tgamepadStick: [string, Vec2],\n\t\t\tgamepadConnect: [Gamepad],\n\t\t\tgamepadDisconnect: [Gamepad],\n\t\t\tscroll: [Vec2],\n\t\t\tadd: [GameObj],\n\t\t\tdestroy: [GameObj],\n\t\t\tload: [],\n\t\t\tloading: [number],\n\t\t\terror: [Error],\n\t\t\tinput: [],\n\t\t\tframeEnd: [],\n\t\t\tresize: [],\n\t\t\tsceneLeave: [string],\n\t\t}>(),\n\n\t\t// object events\n\t\tobjEvents: new EventHandler(),\n\n\t\t// root game object\n\t\troot: make([]),\n\n\t\t// misc\n\t\tgravity: 0,\n\t\tscenes: {},\n\n\t\t// on screen log\n\t\tlogs: [],\n\n\t\t// camera\n\t\tcam: {\n\t\t\tpos: null,\n\t\t\tscale: new Vec2(1),\n\t\t\tangle: 0,\n\t\t\tshake: 0,\n\t\t\ttransform: new Mat4(),\n\t\t},\n\n\t}\n\n\t// TODO: accept Asset<T>?\n\t// wrap individual loaders with global loader counter, for stuff like progress bar\n\tfunction load<T>(prom: Promise<T>): Asset<T> {\n\t\treturn assets.custom.add(null, prom)\n\t}\n\n\t// get current load progress\n\tfunction loadProgress(): number {\n\t\tconst buckets = [\n\t\t\tassets.sprites,\n\t\t\tassets.sounds,\n\t\t\tassets.shaders,\n\t\t\tassets.fonts,\n\t\t\tassets.bitmapFonts,\n\t\t\tassets.custom,\n\t\t]\n\t\treturn buckets.reduce((n, bucket) => n + bucket.progress(), 0) / buckets.length\n\t}\n\n\t// global load path prefix\n\tfunction loadRoot(path?: string): string {\n\t\tif (path !== undefined) {\n\t\t\tassets.urlPrefix = path\n\t\t}\n\t\treturn assets.urlPrefix\n\t}\n\n\t// wrapper around fetch() that applies urlPrefix and basic error handling\n\tfunction fetchURL(path: string) {\n\t\tconst url = assets.urlPrefix + path\n\t\treturn fetch(url)\n\t\t\t.then((res) => {\n\t\t\t\tif (!res.ok) throw new Error(`Failed to fetch ${url}`)\n\t\t\t\treturn res\n\t\t\t})\n\t}\n\n\tfunction fetchJSON(path: string) {\n\t\treturn fetchURL(path).then((res) => res.json())\n\t}\n\n\tfunction fetchText(path: string) {\n\t\treturn fetchURL(path).then((res) => res.text())\n\t}\n\n\tfunction fetchArrayBuffer(path: string) {\n\t\treturn fetchURL(path).then((res) => res.arrayBuffer())\n\t}\n\n\t// wrapper around image loader to get a Promise\n\tfunction loadImg(src: string): Promise<HTMLImageElement> {\n\t\tconst img = new Image()\n\t\timg.crossOrigin = \"anonymous\"\n\t\timg.src = isDataURL(src) ? src : assets.urlPrefix + src\n\t\treturn new Promise<HTMLImageElement>((resolve, reject) => {\n\t\t\timg.onload = () => resolve(img)\n\t\t\timg.onerror = () => reject(new Error(`Failed to load image from \"${src}\"`))\n\t\t})\n\t}\n\n\tfunction loadJSON(name, url) {\n\t\treturn assets.custom.add(name, fetchJSON(url))\n\t}\n\n\tclass FontData {\n\t\tfontface: FontFace\n\t\toutline: number\n\t\tfilter: TexFilter\n\t\tconstructor(face: FontFace, opt: LoadFontOpt = {}) {\n\t\t\tthis.fontface = face\n\t\t\tthis.outline = opt.outline ?? 0\n\t\t\tthis.filter = opt.filter ?? DEF_FONT_FILTER\n\t\t}\n\t}\n\n\t// TODO: pass in null src to store opt for default fonts like \"monospace\"\n\tfunction loadFont(\n\t\tname: string,\n\t\tsrc: string | ArrayBuffer,\n\t\topt: LoadFontOpt = {},\n\t): Asset<FontData> {\n\t\tconst font = new FontFace(name, typeof src === \"string\" ? `url(${src})` : src)\n\t\tdocument.fonts.add(font)\n\t\treturn assets.fonts.add(name, font.load().catch((err) => {\n\t\t\tthrow new Error(`Failed to load font from \"${src}\": ${err}`)\n\t\t}).then((face) => new FontData(face, opt)))\n\t}\n\n\t// TODO: support outline\n\t// TODO: support LoadSpriteSrc\n\tfunction loadBitmapFont(\n\t\tname: string | null,\n\t\tsrc: string,\n\t\tgw: number,\n\t\tgh: number,\n\t\topt: LoadBitmapFontOpt = {},\n\t): Asset<BitmapFontData> {\n\t\treturn assets.bitmapFonts.add(name, loadImg(src)\n\t\t\t.then((img) => {\n\t\t\t\treturn makeFont(\n\t\t\t\t\tTexture.fromImage(img, opt),\n\t\t\t\t\tgw,\n\t\t\t\t\tgh,\n\t\t\t\t\topt.chars ?? ASCII_CHARS,\n\t\t\t\t)\n\t\t\t}),\n\t\t)\n\t}\n\n\t// get an array of frames based on configuration on how to slice the image\n\tfunction slice(x = 1, y = 1, dx = 0, dy = 0, w = 1, h = 1): Quad[] {\n\t\tconst frames = []\n\t\tconst qw = w / x\n\t\tconst qh = h / y\n\t\tfor (let j = 0; j < y; j++) {\n\t\t\tfor (let i = 0; i < x; i++) {\n\t\t\t\tframes.push(new Quad(\n\t\t\t\t\tdx + i * qw,\n\t\t\t\t\tdy + j * qh,\n\t\t\t\t\tqw,\n\t\t\t\t\tqh,\n\t\t\t\t))\n\t\t\t}\n\t\t}\n\t\treturn frames\n\t}\n\n\t// TODO: load synchronously if passed ImageSource\n\tfunction loadSpriteAtlas(\n\t\tsrc: LoadSpriteSrc,\n\t\tdata: SpriteAtlasData | string,\n\t): Asset<Record<string, SpriteData>> {\n\t\tif (typeof data === \"string\") {\n\t\t\treturn load(new Promise((res, rej) => {\n\t\t\t\tfetchJSON(data).then((json) => {\n\t\t\t\t\tloadSpriteAtlas(src, json).then(res).catch(rej)\n\t\t\t\t})\n\t\t\t}))\n\t\t}\n\t\treturn load(SpriteData.from(src).then((atlas) => {\n\t\t\tconst map = {}\n\t\t\tfor (const name in data) {\n\t\t\t\tconst info = data[name]\n\t\t\t\tconst quad = atlas.frames[0]\n\t\t\t\tconst w = SPRITE_ATLAS_WIDTH * quad.w\n\t\t\t\tconst h = SPRITE_ATLAS_HEIGHT * quad.h\n\t\t\t\tconst frames = info.frames ? info.frames.map((f) => new Quad(\n\t\t\t\t\tquad.x + (info.x + f.x) / w * quad.w,\n\t\t\t\t\tquad.y + (info.y + f.y) / h * quad.h,\n\t\t\t\t\tf.w / w * quad.w,\n\t\t\t\t\tf.h / h * quad.h,\n\t\t\t\t)) : slice(\n\t\t\t\t\tinfo.sliceX || 1,\n\t\t\t\t\tinfo.sliceY || 1,\n\t\t\t\t\tquad.x + info.x / w * quad.w,\n\t\t\t\t\tquad.y + info.y / h * quad.h,\n\t\t\t\t\tinfo.width / w * quad.w,\n\t\t\t\t\tinfo.height / h * quad.h,\n\t\t\t\t)\n\t\t\t\tconst spr = new SpriteData(atlas.tex, frames, info.anims)\n\t\t\t\tassets.sprites.addLoaded(name, spr)\n\t\t\t\tmap[name] = spr\n\t\t\t}\n\t\t\treturn map\n\t\t}))\n\t}\n\n\tfunction createSpriteSheet(\n\t\timages: ImageSource[],\n\t\topt: LoadSpriteOpt = {},\n\t): SpriteData {\n\t\tconst canvas = document.createElement(\"canvas\")\n\t\tconst width = images[0].width\n\t\tconst height = images[0].height\n\t\tcanvas.width = width * images.length\n\t\tcanvas.height = height\n\t\tconst ctx = canvas.getContext(\"2d\")\n\t\timages.forEach((img, i) => {\n\t\t\tif (img instanceof ImageData) {\n\t\t\t\tctx.putImageData(img, i * width, 0)\n\t\t\t} else {\n\t\t\t\tctx.drawImage(img, i * width, 0)\n\t\t\t}\n\t\t})\n\t\tconst merged = ctx.getImageData(0, 0, images.length * width, height)\n\t\treturn SpriteData.fromImage(merged, {\n\t\t\t...opt,\n\t\t\tsliceX: images.length,\n\t\t\tsliceY: 1,\n\t\t})\n\t}\n\n\t// load a sprite to asset manager\n\tfunction loadSprite(\n\t\tname: string | null,\n\t\tsrc: LoadSpriteSrc | LoadSpriteSrc[],\n\t\topt: LoadSpriteOpt = {\n\t\t\tsliceX: 1,\n\t\t\tsliceY: 1,\n\t\t\tanims: {},\n\t\t},\n\t): Asset<SpriteData> {\n\t\tif (Array.isArray(src)) {\n\t\t\tif (src.some((s) => typeof s === \"string\")) {\n\t\t\t\treturn assets.sprites.add(\n\t\t\t\t\tname,\n\t\t\t\t\tPromise.all(src.map((s) => {\n\t\t\t\t\t\treturn typeof s === \"string\" ? loadImg(s) : Promise.resolve(s)\n\t\t\t\t\t})).then((images) => createSpriteSheet(images, opt)),\n\t\t\t\t)\n\t\t\t} else {\n\t\t\t\treturn assets.sprites.addLoaded(name, createSpriteSheet(src as ImageSource[], opt))\n\t\t\t}\n\t\t} else {\n\t\t\tif (typeof src === \"string\") {\n\t\t\t\treturn assets.sprites.add(name, SpriteData.from(src, opt))\n\t\t\t} else {\n\t\t\t\treturn assets.sprites.addLoaded(name, SpriteData.fromImage(src, opt))\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction loadPedit(name: string | null, src: string | PeditFile): Asset<SpriteData> {\n\n\t\t// eslint-disable-next-line\n\t\treturn assets.sprites.add(name, new Promise(async (resolve) => {\n\n\t\t\tconst data = typeof src === \"string\" ? await fetchJSON(src) : src\n\t\t\tconst images = await Promise.all(data.frames.map(loadImg))\n\t\t\tconst canvas = document.createElement(\"canvas\")\n\t\t\tcanvas.width = data.width\n\t\t\tcanvas.height = data.height * data.frames.length\n\n\t\t\tconst ctx = canvas.getContext(\"2d\")\n\n\t\t\timages.forEach((img: HTMLImageElement, i) => {\n\t\t\t\tctx.drawImage(img, 0, i * data.height)\n\t\t\t})\n\n\t\t\tconst spr = await loadSprite(null, canvas, {\n\t\t\t\tsliceY: data.frames.length,\n\t\t\t\tanims: data.anims,\n\t\t\t})\n\n\t\t\tresolve(spr)\n\n\t\t}))\n\n\t}\n\n\tfunction loadAseprite(\n\t\tname: string | null,\n\t\timgSrc: LoadSpriteSrc,\n\t\tjsonSrc: string,\n\t): Asset<SpriteData> {\n\t\tif (typeof imgSrc === \"string\" && !jsonSrc) {\n\t\t\tjsonSrc = imgSrc.replace(new RegExp(`${getExt(imgSrc)}$`), \"json\")\n\t\t}\n\t\tconst resolveJSON = typeof jsonSrc === \"string\"\n\t\t\t? fetchJSON(jsonSrc)\n\t\t\t: Promise.resolve(jsonSrc)\n\t\treturn assets.sprites.add(name, resolveJSON.then((data) => {\n\t\t\tconst size = data.meta.size\n\t\t\tconst frames = data.frames.map((f: any) => {\n\t\t\t\treturn new Quad(\n\t\t\t\t\tf.frame.x / size.w,\n\t\t\t\t\tf.frame.y / size.h,\n\t\t\t\t\tf.frame.w / size.w,\n\t\t\t\t\tf.frame.h / size.h,\n\t\t\t\t)\n\t\t\t})\n\t\t\tconst anims = {}\n\t\t\tfor (const anim of data.meta.frameTags) {\n\t\t\t\tif (anim.from === anim.to) {\n\t\t\t\t\tanims[anim.name] = anim.from\n\t\t\t\t} else {\n\t\t\t\t\tanims[anim.name] = {\n\t\t\t\t\t\tfrom: anim.from,\n\t\t\t\t\t\tto: anim.to,\n\t\t\t\t\t\tspeed: 10,\n\t\t\t\t\t\tloop: true,\n\t\t\t\t\t\tpingpong: anim.direction === \"pingpong\",\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn SpriteData.from(imgSrc, {\n\t\t\t\tframes: frames,\n\t\t\t\tanims: anims,\n\t\t\t})\n\t\t}))\n\t}\n\n\tfunction loadShader(\n\t\tname: string | null,\n\t\tvert?: string,\n\t\tfrag?: string,\n\t) {\n\t\treturn assets.shaders.addLoaded(name, makeShader(vert, frag))\n\t}\n\n\tfunction loadShaderURL(\n\t\tname: string | null,\n\t\tvert?: string,\n\t\tfrag?: string,\n\t): Asset<ShaderData> {\n\t\tconst resolveUrl = (url?: string) =>\n\t\t\turl\n\t\t\t\t? fetchText(url)\n\t\t\t\t: Promise.resolve(null)\n\t\tconst load = Promise.all([resolveUrl(vert), resolveUrl(frag)])\n\t\t\t.then(([vcode, fcode]: [string | null, string | null]) => {\n\t\t\t\treturn makeShader(vcode, fcode)\n\t\t\t})\n\t\treturn assets.shaders.add(name, load)\n\t}\n\n\t// TODO: allow stream big audio\n\t// load a sound to asset manager\n\tfunction loadSound(\n\t\tname: string | null,\n\t\tsrc: string | ArrayBuffer,\n\t): Asset<SoundData> {\n\t\treturn assets.sounds.add(\n\t\t\tname,\n\t\t\ttypeof src === \"string\"\n\t\t\t\t? SoundData.fromURL(src)\n\t\t\t\t: SoundData.fromArrayBuffer(src),\n\t\t)\n\t}\n\n\tfunction loadBean(name: string = \"bean\"): Asset<SpriteData> {\n\t\treturn loadSprite(name, beanSpriteSrc)\n\t}\n\n\tfunction getSprite(handle: string): Asset<SpriteData> | void {\n\t\treturn assets.sprites.get(handle)\n\t}\n\n\tfunction getSound(handle: string): Asset<SoundData> | void {\n\t\treturn assets.sounds.get(handle)\n\t}\n\n\tfunction getFont(handle: string): Asset<FontData> | void {\n\t\treturn assets.fonts.get(handle)\n\t}\n\n\tfunction getBitmapFont(handle: string): Asset<BitmapFontData> | void {\n\t\treturn assets.bitmapFonts.get(handle)\n\t}\n\n\tfunction getShader(handle: string): Asset<ShaderData> | void {\n\t\treturn assets.shaders.get(handle)\n\t}\n\n\tfunction getAsset(handle: string): Asset<any> | void {\n\t\treturn assets.custom.get(handle)\n\t}\n\n\tfunction resolveSprite(\n\t\tsrc: DrawSpriteOpt[\"sprite\"],\n\t): Asset<SpriteData> | null {\n\t\tif (typeof src === \"string\") {\n\t\t\tconst spr = getSprite(src)\n\t\t\tif (spr) {\n\t\t\t\t// if it's already loaded or being loading, return it\n\t\t\t\treturn spr\n\t\t\t} else if (loadProgress() < 1) {\n\t\t\t\t// if there's any other ongoing loading task we return empty and don't error yet\n\t\t\t\treturn null\n\t\t\t} else {\n\t\t\t\t// if all other assets are loaded and we still haven't found this sprite, throw\n\t\t\t\tthrow new Error(`Sprite not found: ${src}`)\n\t\t\t}\n\t\t} else if (src instanceof SpriteData) {\n\t\t\treturn Asset.loaded(src)\n\t\t} else if (src instanceof Asset) {\n\t\t\treturn src\n\t\t} else {\n\t\t\tthrow new Error(`Invalid sprite: ${src}`)\n\t\t}\n\t}\n\n\tfunction resolveSound(\n\t\tsrc: Parameters<typeof play>[0],\n\t): Asset<SoundData> | null {\n\t\tif (typeof src === \"string\") {\n\t\t\tconst snd = getSound(src)\n\t\t\tif (snd) {\n\t\t\t\treturn snd\n\t\t\t} else if (loadProgress() < 1) {\n\t\t\t\treturn null\n\t\t\t} else {\n\t\t\t\tthrow new Error(`Sound not found: ${src}`)\n\t\t\t}\n\t\t} else if (src instanceof SoundData) {\n\t\t\treturn Asset.loaded(src)\n\t\t} else if (src instanceof Asset) {\n\t\t\treturn src\n\t\t} else {\n\t\t\tthrow new Error(`Invalid sound: ${src}`)\n\t\t}\n\t}\n\n\tfunction resolveShader(\n\t\tsrc: RenderProps[\"shader\"],\n\t): ShaderData | Asset<ShaderData> | null {\n\t\tif (!src) {\n\t\t\treturn gfx.defShader\n\t\t}\n\t\tif (typeof src === \"string\") {\n\t\t\tconst shader = getShader(src)\n\t\t\tif (shader) {\n\t\t\t\treturn shader.data ?? shader\n\t\t\t} else if (loadProgress() < 1) {\n\t\t\t\treturn null\n\t\t\t} else {\n\t\t\t\tthrow new Error(`Shader not found: ${src}`)\n\t\t\t}\n\t\t} else if (src instanceof Asset) {\n\t\t\treturn src.data ? src.data : src\n\t\t}\n\t\t// TODO: check type\n\t\t// @ts-ignore\n\t\treturn src\n\t}\n\n\tfunction resolveFont(\n\t\tsrc: DrawTextOpt[\"font\"],\n\t):\n\t\t| FontData\n\t\t| Asset<FontData>\n\t\t| BitmapFontData\n\t\t| Asset<BitmapFontData>\n\t\t| string\n\t\t| void\n\t{\n\t\tif (!src) {\n\t\t\treturn resolveFont(gopt.font ?? DEF_FONT)\n\t\t}\n\t\tif (typeof src === \"string\") {\n\t\t\tconst bfont = getBitmapFont(src)\n\t\t\tconst font = getFont(src)\n\t\t\tif (bfont) {\n\t\t\t\treturn bfont.data ?? bfont\n\t\t\t} else if (font) {\n\t\t\t\treturn font.data ?? font\n\t\t\t} else if (document.fonts.check(`${DEF_TEXT_CACHE_SIZE}px ${src}`)) {\n\t\t\t\treturn src\n\t\t\t} else if (loadProgress() < 1) {\n\t\t\t\treturn null\n\t\t\t} else {\n\t\t\t\tthrow new Error(`Font not found: ${src}`)\n\t\t\t}\n\t\t} else if (src instanceof Asset) {\n\t\t\treturn src.data ? src.data : src\n\t\t}\n\t\t// TODO: check type\n\t\t// @ts-ignore\n\t\treturn src\n\t}\n\n\t// get / set master volume\n\tfunction volume(v?: number): number {\n\t\tif (v !== undefined) {\n\t\t\taudio.masterNode.gain.value = v\n\t\t}\n\t\treturn audio.masterNode.gain.value\n\t}\n\n\t// TODO: time() not correct when looped over or ended\n\t// TODO: onEnd() not working\n\t// plays a sound, returns a control handle\n\tfunction play(\n\t\tsrc: string | SoundData | Asset<SoundData>,\n\t\topt: AudioPlayOpt = {},\n\t): AudioPlay {\n\n\t\tconst ctx = audio.ctx\n\t\tlet paused = opt.paused ?? false\n\t\tlet srcNode = ctx.createBufferSource()\n\t\tconst onEndEvents = new Event()\n\t\tconst gainNode = ctx.createGain()\n\t\tconst pos = opt.seek ?? 0\n\t\tlet startTime = 0\n\t\tlet stopTime = 0\n\t\tlet started = false\n\n\t\tsrcNode.loop = Boolean(opt.loop)\n\t\tsrcNode.detune.value = opt.detune ?? 0\n\t\tsrcNode.playbackRate.value = opt.speed ?? 1\n\t\tsrcNode.connect(gainNode)\n\t\tsrcNode.onended = () => {\n\t\t\tif (getTime() >= srcNode.buffer?.duration ?? Number.POSITIVE_INFINITY) {\n\t\t\t\tonEndEvents.trigger()\n\t\t\t}\n\t\t}\n\t\tgainNode.connect(audio.masterNode)\n\t\tgainNode.gain.value = opt.volume ?? 1\n\n\t\tconst start = (data: SoundData) => {\n\t\t\tsrcNode.buffer = data.buf\n\t\t\tif (!paused) {\n\t\t\t\tstartTime = ctx.currentTime\n\t\t\t\tsrcNode.start(0, pos)\n\t\t\t\tstarted = true\n\t\t\t}\n\t\t}\n\n\t\tconst snd = resolveSound(src)\n\n\t\tif (snd instanceof Asset) {\n\t\t\tsnd.onLoad(start)\n\t\t}\n\n\t\tconst getTime = () => {\n\t\t\tif (!srcNode.buffer) return 0\n\t\t\tconst t = paused\n\t\t\t\t? stopTime - startTime\n\t\t\t\t: ctx.currentTime - startTime\n\t\t\tconst d = srcNode.buffer.duration\n\t\t\treturn srcNode.loop ? t % d : Math.min(t, d)\n\t\t}\n\n\t\tconst cloneNode = (oldNode: AudioBufferSourceNode) => {\n\t\t\tconst newNode = ctx.createBufferSource()\n\t\t\tnewNode.buffer = oldNode.buffer\n\t\t\tnewNode.loop = oldNode.loop\n\t\t\tnewNode.playbackRate.value = oldNode.playbackRate.value\n\t\t\tnewNode.detune.value = oldNode.detune.value\n\t\t\tnewNode.onended = oldNode.onended\n\t\t\tnewNode.connect(gainNode)\n\t\t\treturn newNode\n\t\t}\n\n\t\treturn {\n\n\t\t\tset paused(p: boolean) {\n\t\t\t\tif (paused === p) return\n\t\t\t\tpaused = p\n\t\t\t\tif (p) {\n\t\t\t\t\tif (started) {\n\t\t\t\t\t\tsrcNode.stop()\n\t\t\t\t\t\tstarted = false\n\t\t\t\t\t}\n\t\t\t\t\tstopTime = ctx.currentTime\n\t\t\t\t} else {\n\t\t\t\t\tsrcNode = cloneNode(srcNode)\n\t\t\t\t\tconst pos = stopTime - startTime\n\t\t\t\t\tsrcNode.start(0, pos)\n\t\t\t\t\tstarted = true\n\t\t\t\t\tstartTime = ctx.currentTime - pos\n\t\t\t\t\tstopTime = 0\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tget paused() {\n\t\t\t\treturn paused\n\t\t\t},\n\n\t\t\tplay(time: number = 0) {\n\t\t\t\tthis.seek(time)\n\t\t\t\tthis.paused = false\n\t\t\t},\n\n\t\t\tseek(time: number) {\n\t\t\t\tif (!srcNode.buffer?.duration) return\n\t\t\t\tif (time > srcNode.buffer.duration) return\n\t\t\t\tif (paused) {\n\t\t\t\t\tsrcNode = cloneNode(srcNode)\n\t\t\t\t\tstartTime = stopTime - time\n\t\t\t\t} else {\n\t\t\t\t\tsrcNode.stop()\n\t\t\t\t\tsrcNode = cloneNode(srcNode)\n\t\t\t\t\tstartTime = ctx.currentTime - time\n\t\t\t\t\tsrcNode.start(0, time)\n\t\t\t\t\tstarted = true\n\t\t\t\t\tstopTime = 0\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// TODO: affect time()\n\t\t\tset speed(val: number) {\n\t\t\t\tsrcNode.playbackRate.value = val\n\t\t\t},\n\n\t\t\tget speed() {\n\t\t\t\treturn srcNode.playbackRate.value\n\t\t\t},\n\n\t\t\tset detune(val: number) {\n\t\t\t\tsrcNode.detune.value = val\n\t\t\t},\n\n\t\t\tget detune() {\n\t\t\t\treturn srcNode.detune.value\n\t\t\t},\n\n\t\t\tset volume(val: number) {\n\t\t\t\tgainNode.gain.value = Math.max(val, 0)\n\t\t\t},\n\n\t\t\tget volume() {\n\t\t\t\treturn gainNode.gain.value\n\t\t\t},\n\n\t\t\tset loop(l: boolean) {\n\t\t\t\tsrcNode.loop = l\n\t\t\t},\n\n\t\t\tget loop() {\n\t\t\t\treturn srcNode.loop\n\t\t\t},\n\n\t\t\tduration(): number {\n\t\t\t\treturn srcNode.buffer?.duration ?? 0\n\t\t\t},\n\n\t\t\ttime(): number {\n\t\t\t\treturn getTime() % this.duration()\n\t\t\t},\n\n\t\t\tonEnd(action: () => void) {\n\t\t\t\treturn onEndEvents.add(action)\n\t\t\t},\n\n\t\t\tthen(action: () => void) {\n\t\t\t\treturn this.onEnd(action)\n\t\t\t},\n\n\t\t}\n\n\t}\n\n\t// core kaboom logic\n\tfunction burp(opt?: AudioPlayOpt): AudioPlay {\n\t\treturn play(audio.burpSnd, opt)\n\t}\n\n\ttype DrawTextureOpt = RenderProps & {\n\t\ttex: Texture,\n\t\twidth?: number,\n\t\theight?: number,\n\t\ttiled?: boolean,\n\t\tflipX?: boolean,\n\t\tflipY?: boolean,\n\t\tquad?: Quad,\n\t\tanchor?: Anchor | Vec2,\n\t}\n\n\tfunction makeShader(\n\t\tvertSrc: string | null = DEF_VERT,\n\t\tfragSrc: string | null = DEF_FRAG,\n\t): GfxShader {\n\n\t\tconst vcode = VERT_TEMPLATE.replace(\"{{user}}\", vertSrc ?? DEF_VERT)\n\t\tconst fcode = FRAG_TEMPLATE.replace(\"{{user}}\", fragSrc ?? DEF_FRAG)\n\t\tconst vertShader = gl.createShader(gl.VERTEX_SHADER)\n\t\tconst fragShader = gl.createShader(gl.FRAGMENT_SHADER)\n\n\t\tgl.shaderSource(vertShader, vcode)\n\t\tgl.shaderSource(fragShader, fcode)\n\t\tgl.compileShader(vertShader)\n\t\tgl.compileShader(fragShader)\n\n\t\tconst prog = gl.createProgram()\n\n\t\tgc.push(() => gl.deleteProgram(prog))\n\t\tgl.attachShader(prog, vertShader)\n\t\tgl.attachShader(prog, fragShader)\n\n\t\tgl.bindAttribLocation(prog, 0, \"a_pos\")\n\t\tgl.bindAttribLocation(prog, 1, \"a_uv\")\n\t\tgl.bindAttribLocation(prog, 2, \"a_color\")\n\n\t\tgl.linkProgram(prog)\n\n\t\tif (!gl.getProgramParameter(prog, gl.LINK_STATUS)) {\n\n\t\t\tconst formatShaderError = (msg: string) => {\n\t\t\t\tconst FMT = /^ERROR:\\s0:(?<line>\\d+):\\s(?<msg>.+)/\n\t\t\t\tconst match = msg.match(FMT)\n\t\t\t\treturn {\n\t\t\t\t\tline: Number(match.groups.line),\n\t\t\t\t\t// seem to be a \\n\\0 at the end of error messages, causing unwanted line break\n\t\t\t\t\tmsg: match.groups.msg.replace(/\\n\\0$/, \"\"),\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst vertError = gl.getShaderInfoLog(vertShader)\n\t\t\tconst fragError = gl.getShaderInfoLog(fragShader)\n\t\t\tlet msg = \"\"\n\n\t\t\tif (vertError) {\n\t\t\t\tconst err = formatShaderError(vertError)\n\t\t\t\tmsg += `Vertex shader line ${err.line - 14}: ${err.msg}`\n\t\t\t}\n\n\t\t\tif (fragError) {\n\t\t\t\tconst err = formatShaderError(fragError)\n\t\t\t\tmsg += `Fragment shader line ${err.line - 14}: ${err.msg}`\n\t\t\t}\n\n\t\t\tthrow new Error(msg)\n\n\t\t}\n\n\t\tgl.deleteShader(vertShader)\n\t\tgl.deleteShader(fragShader)\n\n\t\treturn {\n\n\t\t\tbind() {\n\t\t\t\tgl.useProgram(prog)\n\t\t\t},\n\n\t\t\tunbind() {\n\t\t\t\tgl.useProgram(null)\n\t\t\t},\n\n\t\t\tfree() {\n\t\t\t\tgl.deleteProgram(prog)\n\t\t\t},\n\n\t\t\t// TODO: support vec3 and vec4\n\t\t\tsend(uniform: Uniform) {\n\t\t\t\tfor (const name in uniform) {\n\t\t\t\t\tconst val = uniform[name]\n\t\t\t\t\tconst loc = gl.getUniformLocation(prog, name)\n\t\t\t\t\tif (typeof val === \"number\") {\n\t\t\t\t\t\tgl.uniform1f(loc, val)\n\t\t\t\t\t} else if (val instanceof Mat4) {\n\t\t\t\t\t\tgl.uniformMatrix4fv(loc, false, new Float32Array(val.m))\n\t\t\t\t\t} else if (val instanceof Color) {\n\t\t\t\t\t\t// TODO: opacity?\n\t\t\t\t\t\tgl.uniform3f(loc, val.r, val.g, val.b)\n\t\t\t\t\t} else if (val instanceof Vec2) {\n\t\t\t\t\t\tgl.uniform2f(loc, val.x, val.y)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t}\n\n\t}\n\n\tfunction makeFont(\n\t\ttex: Texture,\n\t\tgw: number,\n\t\tgh: number,\n\t\tchars: string,\n\t): GfxFont {\n\n\t\tconst cols = tex.width / gw\n\t\tconst map: Record<string, Quad> = {}\n\t\tconst charMap = chars.split(\"\").entries()\n\n\t\tfor (const [i, ch] of charMap) {\n\t\t\tmap[ch] = new Quad(\n\t\t\t\t(i % cols) * gw,\n\t\t\t\tMath.floor(i / cols) * gh,\n\t\t\t\tgw,\n\t\t\t\tgh,\n\t\t\t)\n\t\t}\n\n\t\treturn {\n\t\t\ttex: tex,\n\t\t\tmap: map,\n\t\t\tsize: gh,\n\t\t}\n\n\t}\n\n\t// TODO: expose\n\tfunction drawRaw(\n\t\tverts: Vertex[],\n\t\tindices: number[],\n\t\tfixed: boolean,\n\t\ttex: Texture = gfx.defTex,\n\t\tshaderSrc: RenderProps[\"shader\"] = gfx.defShader,\n\t\tuniform: Uniform = {},\n\t) {\n\n\t\tconst shader = resolveShader(shaderSrc)\n\n\t\tif (!shader || shader instanceof Asset) {\n\t\t\treturn\n\t\t}\n\n\t\t// flush on texture / shader change and overflow\n\t\tif (\n\t\t\ttex !== gfx.curTex\n\t\t\t|| shader !== gfx.curShader\n\t\t\t|| !deepEq(gfx.curUniform, uniform)\n\t\t\t|| gfx.vqueue.length + verts.length * STRIDE > MAX_BATCHED_VERTS\n\t\t\t|| gfx.iqueue.length + indices.length > MAX_BATCHED_INDICES\n\t\t) {\n\t\t\tflush()\n\t\t}\n\n\t\tconst transform = (gfx.fixed || fixed)\n\t\t\t? gfx.transform\n\t\t\t: game.cam.transform.mult(gfx.transform)\n\n\t\tfor (const v of verts) {\n\t\t\t// normalized world space coordinate [-1.0 ~ 1.0]\n\t\t\tconst pt = screen2ndc(transform.multVec2(v.pos))\n\t\t\tgfx.vqueue.push(\n\t\t\t\tpt.x, pt.y,\n\t\t\t\tv.uv.x, v.uv.y,\n\t\t\t\tv.color.r / 255, v.color.g / 255, v.color.b / 255, v.opacity,\n\t\t\t)\n\t\t}\n\n\t\tfor (const i of indices) {\n\t\t\tgfx.iqueue.push(i + gfx.vqueue.length / STRIDE - verts.length)\n\t\t}\n\n\t\tgfx.curTex = tex\n\t\tgfx.curShader = shader\n\t\tgfx.curUniform = uniform\n\n\t}\n\n\t// draw all batched shapes\n\tfunction flush() {\n\n\t\tif (\n\t\t\t!gfx.curTex\n\t\t\t|| !gfx.curShader\n\t\t\t|| gfx.vqueue.length === 0\n\t\t\t|| gfx.iqueue.length === 0\n\t\t) {\n\t\t\treturn\n\t\t}\n\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, gfx.vbuf)\n\t\tgl.bufferSubData(gl.ARRAY_BUFFER, 0, new Float32Array(gfx.vqueue))\n\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, gfx.ibuf)\n\t\tgl.bufferSubData(gl.ELEMENT_ARRAY_BUFFER, 0, new Uint16Array(gfx.iqueue))\n\t\tgfx.curShader.bind()\n\t\tgfx.curShader.send(gfx.curUniform)\n\t\tgfx.curTex.bind()\n\t\tgl.drawElements(gl.TRIANGLES, gfx.iqueue.length, gl.UNSIGNED_SHORT, 0)\n\t\tgfx.curTex.unbind()\n\t\tgfx.curShader.unbind()\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, null)\n\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null)\n\n\t\tgfx.vqueue.length = 0\n\t\tgfx.iqueue.length = 0\n\n\t\tgfx.drawCalls++\n\n\t}\n\n\t// start a rendering frame, reset some states\n\tfunction frameStart() {\n\n\t\t// clear backbuffer\n\t\tgl.clear(gl.COLOR_BUFFER_BIT)\n\t\tgfx.frameBuffer.bind()\n\t\tgl.viewport(0, 0, gfx.frameBuffer.width, gfx.frameBuffer.height)\n\t\t// clear framebuffer\n\t\tgl.clear(gl.COLOR_BUFFER_BIT)\n\n\t\tif (!gfx.bgColor) {\n\t\t\tdrawUnscaled(() => {\n\t\t\t\tdrawUVQuad({\n\t\t\t\t\twidth: width(),\n\t\t\t\t\theight: height(),\n\t\t\t\t\tquad: new Quad(\n\t\t\t\t\t\t0,\n\t\t\t\t\t\t0,\n\t\t\t\t\t\twidth() / BG_GRID_SIZE,\n\t\t\t\t\t\theight() / BG_GRID_SIZE,\n\t\t\t\t\t),\n\t\t\t\t\ttex: gfx.bgTex,\n\t\t\t\t\tfixed: true,\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\n\t\tgfx.drawCalls = 0\n\t\tgfx.fixed = false\n\t\tgfx.transformStack.length = 0\n\t\tgfx.transform = new Mat4()\n\n\t}\n\n\tfunction usePostEffect(name: string, uniform?: Uniform | (() => Uniform)) {\n\t\tgfx.postShader = name\n\t\tgfx.postShaderUniform = uniform ?? null\n\t}\n\n\tfunction frameEnd() {\n\t\t// TODO: don't render debug UI with framebuffer\n\t\t// TODO: polish framebuffer rendering / sizing issues\n\t\tflush()\n\t\tgfx.frameBuffer.unbind()\n\t\tgl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight)\n\n\t\tflush()\n\t\tconst ow = gfx.width\n\t\tconst oh = gfx.height\n\t\tgfx.width = gl.drawingBufferWidth / pixelDensity\n\t\tgfx.height = gl.drawingBufferHeight / pixelDensity\n\n\t\tdrawTexture({\n\t\t\tflipY: true,\n\t\t\ttex: gfx.frameBuffer.tex,\n\t\t\tpos: new Vec2(gfx.viewport.x, gfx.viewport.y),\n\t\t\twidth: gfx.viewport.width,\n\t\t\theight: gfx.viewport.height,\n\t\t\tshader: gfx.postShader,\n\t\t\tuniform: typeof gfx.postShaderUniform === \"function\"\n\t\t\t\t? gfx.postShaderUniform()\n\t\t\t\t: gfx.postShaderUniform,\n\t\t\tfixed: true,\n\t\t})\n\n\t\tflush()\n\t\tgfx.width = ow\n\t\tgfx.height = oh\n\t\tgfx.lastDrawCalls = gfx.drawCalls\n\t}\n\n\t// convert a screen space coordinate to webgl normalized device coordinate\n\tfunction screen2ndc(pt: Vec2): Vec2 {\n\t\treturn new Vec2(\n\t\t\tpt.x / width() * 2 - 1,\n\t\t\t-pt.y / height() * 2 + 1,\n\t\t)\n\t}\n\n\tfunction pushMatrix(m: Mat4) {\n\t\tgfx.transform = m.clone()\n\t}\n\n\tfunction pushTranslate(...args: Vec2Args) {\n\t\tif (args[0] === undefined) return\n\t\tconst p = vec2(...args)\n\t\tif (p.x === 0 && p.y === 0) return\n\t\tgfx.transform.translate(p)\n\t}\n\n\tfunction pushScale(...args: Vec2Args) {\n\t\tif (args[0] === undefined) return\n\t\tconst p = vec2(...args)\n\t\tif (p.x === 1 && p.y === 1) return\n\t\tgfx.transform.scale(p)\n\t}\n\n\tfunction pushRotate(a: number) {\n\t\tif (!a) return\n\t\tgfx.transform.rotate(a)\n\t}\n\n\tfunction pushTransform() {\n\t\tgfx.transformStack.push(gfx.transform.clone())\n\t}\n\n\tfunction popTransform() {\n\t\tif (gfx.transformStack.length > 0) {\n\t\t\tgfx.transform = gfx.transformStack.pop()\n\t\t}\n\t}\n\n\t// draw a uv textured quad\n\tfunction drawUVQuad(opt: DrawUVQuadOpt) {\n\n\t\tif (opt.width === undefined || opt.height === undefined) {\n\t\t\tthrow new Error(\"drawUVQuad() requires property \\\"width\\\" and \\\"height\\\".\")\n\t\t}\n\n\t\tif (opt.width <= 0 || opt.height <= 0) {\n\t\t\treturn\n\t\t}\n\n\t\tconst w = opt.width\n\t\tconst h = opt.height\n\t\tconst anchor = anchorPt(opt.anchor || DEF_ANCHOR)\n\t\tconst offset = anchor.scale(new Vec2(w, h).scale(-0.5))\n\t\tconst q = opt.quad || new Quad(0, 0, 1, 1)\n\t\tconst color = opt.color || rgb(255, 255, 255)\n\t\tconst opacity = opt.opacity ?? 1\n\n\t\t// apply uv padding to avoid artifacts\n\t\tconst uvPadX = opt.tex ? UV_PAD / opt.tex.width : 0\n\t\tconst uvPadY = opt.tex ? UV_PAD / opt.tex.height : 0\n\t\tconst qx = q.x + uvPadX\n\t\tconst qy = q.y + uvPadY\n\t\tconst qw = q.w - uvPadX * 2\n\t\tconst qh = q.h - uvPadY * 2\n\n\t\tpushTransform()\n\t\tpushTranslate(opt.pos)\n\t\tpushRotate(opt.angle)\n\t\tpushScale(opt.scale)\n\t\tpushTranslate(offset)\n\n\t\tdrawRaw([\n\t\t\t{\n\t\t\t\tpos: new Vec2(-w / 2, h / 2),\n\t\t\t\tuv: new Vec2(opt.flipX ? qx + qw : qx, opt.flipY ? qy : qy + qh),\n\t\t\t\tcolor: color,\n\t\t\t\topacity: opacity,\n\t\t\t},\n\t\t\t{\n\t\t\t\tpos: new Vec2(-w / 2, -h / 2),\n\t\t\t\tuv: new Vec2(opt.flipX ? qx + qw : qx, opt.flipY ? qy + qh : qy),\n\t\t\t\tcolor: color,\n\t\t\t\topacity: opacity,\n\t\t\t},\n\t\t\t{\n\t\t\t\tpos: new Vec2(w / 2, -h / 2),\n\t\t\t\tuv: new Vec2(opt.flipX ? qx : qx + qw, opt.flipY ? qy + qh : qy),\n\t\t\t\tcolor: color,\n\t\t\t\topacity: opacity,\n\t\t\t},\n\t\t\t{\n\t\t\t\tpos: new Vec2(w / 2, h / 2),\n\t\t\t\tuv: new Vec2(opt.flipX ? qx : qx + qw, opt.flipY ? qy : qy + qh),\n\t\t\t\tcolor: color,\n\t\t\t\topacity: opacity,\n\t\t\t},\n\t\t], [0, 1, 3, 1, 2, 3], opt.fixed, opt.tex, opt.shader, opt.uniform)\n\n\t\tpopTransform()\n\n\t}\n\n\t// TODO: clean\n\tfunction drawTexture(opt: DrawTextureOpt) {\n\n\t\tif (!opt.tex) {\n\t\t\tthrow new Error(\"drawTexture() requires property \\\"tex\\\".\")\n\t\t}\n\n\t\tconst q = opt.quad ?? new Quad(0, 0, 1, 1)\n\t\tconst w = opt.tex.width * q.w\n\t\tconst h = opt.tex.height * q.h\n\t\tconst scale = new Vec2(1)\n\n\t\tif (opt.tiled) {\n\n\t\t\t// TODO: draw fract\n\t\t\tconst repX = Math.ceil((opt.width || w) / w)\n\t\t\tconst repY = Math.ceil((opt.height || h) / h)\n\t\t\tconst anchor = anchorPt(opt.anchor || DEF_ANCHOR).add(new Vec2(1, 1)).scale(0.5)\n\t\t\tconst offset = anchor.scale(repX * w, repY * h)\n\n\t\t\t// TODO: rotation\n\t\t\tfor (let i = 0; i < repX; i++) {\n\t\t\t\tfor (let j = 0; j < repY; j++) {\n\t\t\t\t\tdrawUVQuad(Object.assign({}, opt, {\n\t\t\t\t\t\tpos: (opt.pos || new Vec2(0)).add(new Vec2(w * i, h * j)).sub(offset),\n\t\t\t\t\t\tscale: scale.scale(opt.scale || new Vec2(1)),\n\t\t\t\t\t\ttex: opt.tex,\n\t\t\t\t\t\tquad: q,\n\t\t\t\t\t\twidth: w,\n\t\t\t\t\t\theight: h,\n\t\t\t\t\t\tanchor: \"topleft\",\n\t\t\t\t\t}))\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\n\t\t\t// TODO: should this ignore scale?\n\t\t\tif (opt.width && opt.height) {\n\t\t\t\tscale.x = opt.width / w\n\t\t\t\tscale.y = opt.height / h\n\t\t\t} else if (opt.width) {\n\t\t\t\tscale.x = opt.width / w\n\t\t\t\tscale.y = scale.x\n\t\t\t} else if (opt.height) {\n\t\t\t\tscale.y = opt.height / h\n\t\t\t\tscale.x = scale.y\n\t\t\t}\n\n\t\t\tdrawUVQuad(Object.assign({}, opt, {\n\t\t\t\tscale: scale.scale(opt.scale || new Vec2(1)),\n\t\t\t\ttex: opt.tex,\n\t\t\t\tquad: q,\n\t\t\t\twidth: w,\n\t\t\t\theight: h,\n\t\t\t}))\n\n\t\t}\n\n\t}\n\n\tfunction drawSprite(opt: DrawSpriteOpt) {\n\n\t\tif (!opt.sprite) {\n\t\t\tthrow new Error(\"drawSprite() requires property \\\"sprite\\\"\")\n\t\t}\n\n\t\t// TODO: slow\n\t\tconst spr = resolveSprite(opt.sprite)\n\n\t\tif (!spr || !spr.data) {\n\t\t\treturn\n\t\t}\n\n\t\tconst q = spr.data.frames[opt.frame ?? 0]\n\n\t\tif (!q) {\n\t\t\tthrow new Error(`Frame not found: ${opt.frame ?? 0}`)\n\t\t}\n\n\t\tdrawTexture(Object.assign({}, opt, {\n\t\t\ttex: spr.data.tex,\n\t\t\tquad: q.scale(opt.quad ?? new Quad(0, 0, 1, 1)),\n\t\t}))\n\n\t}\n\n\t// generate vertices to form an arc\n\tfunction getArcPts(\n\t\tpos: Vec2,\n\t\tradiusX: number,\n\t\tradiusY: number,\n\t\tstart: number,\n\t\tend: number,\n\t\tres: number = 1,\n\t): Vec2[] {\n\n\t\t// normalize and turn start and end angles to radians\n\t\tstart = deg2rad(start % 360)\n\t\tend = deg2rad(end % 360)\n\t\tif (end <= start) end += Math.PI * 2\n\n\t\tconst pts = []\n\t\tconst nverts = Math.ceil((end - start) / deg2rad(8) * res)\n\t\tconst step = (end - start) / nverts\n\n\t\t// calculate vertices\n\t\tfor (let a = start; a < end; a += step) {\n\t\t\tpts.push(pos.add(radiusX * Math.cos(a), radiusY * Math.sin(a)))\n\t\t}\n\n\t\tpts.push(pos.add(radiusX * Math.cos(end), radiusY * Math.sin(end)))\n\n\t\treturn pts\n\n\t}\n\n\tfunction drawRect(opt: DrawRectOpt) {\n\n\t\tif (opt.width === undefined || opt.height === undefined) {\n\t\t\tthrow new Error(\"drawRect() requires property \\\"width\\\" and \\\"height\\\".\")\n\t\t}\n\n\t\tif (opt.width <= 0 || opt.height <= 0) {\n\t\t\treturn\n\t\t}\n\n\t\tconst w = opt.width\n\t\tconst h = opt.height\n\t\tconst anchor = anchorPt(opt.anchor || DEF_ANCHOR).add(1, 1)\n\t\tconst offset = anchor.scale(new Vec2(w, h).scale(-0.5))\n\n\t\tlet pts = [\n\t\t\tnew Vec2(0, 0),\n\t\t\tnew Vec2(w, 0),\n\t\t\tnew Vec2(w, h),\n\t\t\tnew Vec2(0, h),\n\t\t]\n\n\t\t// TODO: gradient for rounded rect\n\t\t// TODO: drawPolygon should handle generic rounded corners\n\t\tif (opt.radius) {\n\n\t\t\t// maxium radius is half the shortest side\n\t\t\tconst r = Math.min(Math.min(w, h) / 2, opt.radius)\n\n\t\t\tpts = [\n\t\t\t\tnew Vec2(r, 0),\n\t\t\t\tnew Vec2(w - r, 0),\n\t\t\t\t...getArcPts(new Vec2(w - r, r), r, r, 270, 360),\n\t\t\t\tnew Vec2(w, r),\n\t\t\t\tnew Vec2(w, h - r),\n\t\t\t\t...getArcPts(new Vec2(w - r, h - r), r, r, 0, 90),\n\t\t\t\tnew Vec2(w - r, h),\n\t\t\t\tnew Vec2(r, h),\n\t\t\t\t...getArcPts(new Vec2(r, h - r), r, r, 90, 180),\n\t\t\t\tnew Vec2(0, h - r),\n\t\t\t\tnew Vec2(0, r),\n\t\t\t\t...getArcPts(new Vec2(r, r), r, r, 180, 270),\n\t\t\t]\n\n\t\t}\n\n\t\tdrawPolygon(Object.assign({}, opt, {\n\t\t\toffset,\n\t\t\tpts,\n\t\t\t...(opt.gradient ? {\n\t\t\t\tcolors: opt.horizontal ? [\n\t\t\t\t\topt.gradient[0],\n\t\t\t\t\topt.gradient[1],\n\t\t\t\t\topt.gradient[1],\n\t\t\t\t\topt.gradient[0],\n\t\t\t\t] : [\n\t\t\t\t\topt.gradient[0],\n\t\t\t\t\topt.gradient[0],\n\t\t\t\t\topt.gradient[1],\n\t\t\t\t\topt.gradient[1],\n\t\t\t\t],\n\t\t\t} : {}),\n\t\t}))\n\n\t}\n\n\tfunction drawLine(opt: DrawLineOpt) {\n\n\t\tconst { p1, p2 } = opt\n\n\t\tif (!p1 || !p2) {\n\t\t\tthrow new Error(\"drawLine() requires properties \\\"p1\\\" and \\\"p2\\\".\")\n\t\t}\n\n\t\tconst w = opt.width || 1\n\n\t\t// the displacement from the line end point to the corner point\n\t\tconst dis = p2.sub(p1).unit().normal().scale(w * 0.5)\n\n\t\t// calculate the 4 corner points of the line polygon\n\t\tconst verts = [\n\t\t\tp1.sub(dis),\n\t\t\tp1.add(dis),\n\t\t\tp2.add(dis),\n\t\t\tp2.sub(dis),\n\t\t].map((p) => ({\n\t\t\tpos: new Vec2(p.x, p.y),\n\t\t\tuv: new Vec2(0),\n\t\t\tcolor: opt.color ?? Color.WHITE,\n\t\t\topacity: opt.opacity ?? 1,\n\t\t}))\n\n\t\tdrawRaw(verts, [0, 1, 3, 1, 2, 3], opt.fixed, gfx.defTex, opt.shader, opt.uniform)\n\n\t}\n\n\tfunction drawLines(opt: DrawLinesOpt) {\n\n\t\tconst pts = opt.pts\n\n\t\tif (!pts) {\n\t\t\tthrow new Error(\"drawLines() requires property \\\"pts\\\".\")\n\t\t}\n\n\t\tif (pts.length < 2) {\n\t\t\treturn\n\t\t}\n\n\t\tif (opt.radius && pts.length >= 3) {\n\n\t\t\t// TODO: line joines\n\t\t\t// TODO: rounded vertices for arbitury polygonic shape\n\t\t\tlet minSLen = pts[0].sdist(pts[1])\n\n\t\t\tfor (let i = 1; i < pts.length - 1; i++) {\n\t\t\t\tminSLen = Math.min(pts[i].sdist(pts[i + 1]), minSLen)\n\t\t\t}\n\n\t\t\t// eslint-disable-next-line\n\t\t\tconst radius = Math.min(opt.radius, Math.sqrt(minSLen) / 2)\n\n\t\t\tdrawLine(Object.assign({}, opt, { p1: pts[0], p2: pts[1] }))\n\n\t\t\tfor (let i = 1; i < pts.length - 2; i++) {\n\t\t\t\tconst p1 = pts[i]\n\t\t\t\tconst p2 = pts[i + 1]\n\t\t\t\tdrawLine(Object.assign({}, opt, {\n\t\t\t\t\tp1: p1,\n\t\t\t\t\tp2: p2,\n\t\t\t\t}))\n\t\t\t}\n\n\t\t\tdrawLine(Object.assign({}, opt, {\n\t\t\t\tp1: pts[pts.length - 2],\n\t\t\t\tp2: pts[pts.length - 1],\n\t\t\t}))\n\n\t\t} else {\n\n\t\t\tfor (let i = 0; i < pts.length - 1; i++) {\n\t\t\t\tdrawLine(Object.assign({}, opt, {\n\t\t\t\t\tp1: pts[i],\n\t\t\t\t\tp2: pts[i + 1],\n\t\t\t\t}))\n\t\t\t\t// TODO: other line join types\n\t\t\t\tif (opt.join !== \"none\") {\n\t\t\t\t\tdrawCircle(Object.assign({}, opt, {\n\t\t\t\t\t\tpos: pts[i],\n\t\t\t\t\t\tradius: opt.width / 2,\n\t\t\t\t\t}))\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction drawTriangle(opt: DrawTriangleOpt) {\n\t\tif (!opt.p1 || !opt.p2 || !opt.p3) {\n\t\t\tthrow new Error(\"drawPolygon() requires properties \\\"p1\\\", \\\"p2\\\" and \\\"p3\\\".\")\n\t\t}\n\t\treturn drawPolygon(Object.assign({}, opt, {\n\t\t\tpts: [opt.p1, opt.p2, opt.p3],\n\t\t}))\n\t}\n\n\tfunction drawCircle(opt: DrawCircleOpt) {\n\n\t\tif (typeof opt.radius !== \"number\") {\n\t\t\tthrow new Error(\"drawCircle() requires property \\\"radius\\\".\")\n\t\t}\n\n\t\tif (opt.radius === 0) {\n\t\t\treturn\n\t\t}\n\n\t\tdrawEllipse(Object.assign({}, opt, {\n\t\t\tradiusX: opt.radius,\n\t\t\tradiusY: opt.radius,\n\t\t\tangle: 0,\n\t\t}))\n\n\t}\n\n\tfunction drawEllipse(opt: DrawEllipseOpt) {\n\n\t\tif (opt.radiusX === undefined || opt.radiusY === undefined) {\n\t\t\tthrow new Error(\"drawEllipse() requires properties \\\"radiusX\\\" and \\\"radiusY\\\".\")\n\t\t}\n\n\t\tif (opt.radiusX === 0 || opt.radiusY === 0) {\n\t\t\treturn\n\t\t}\n\n\t\tconst start = opt.start ?? 0\n\t\tconst end = opt.end ?? 360\n\t\tconst offset = anchorPt(opt.anchor ?? \"center\").scale(new Vec2(-opt.radiusX, -opt.radiusY))\n\n\t\tconst pts = getArcPts(\n\t\t\toffset,\n\t\t\topt.radiusX,\n\t\t\topt.radiusY,\n\t\t\tstart,\n\t\t\tend,\n\t\t\topt.resolution,\n\t\t)\n\n\t\t// center\n\t\tpts.unshift(offset)\n\n\t\tconst polyOpt = Object.assign({}, opt, {\n\t\t\tpts,\n\t\t\tradius: 0,\n\t\t\t...(opt.gradient ? {\n\t\t\t\tcolors: [\n\t\t\t\t\topt.gradient[0],\n\t\t\t\t\t...Array(pts.length - 1).fill(opt.gradient[1]),\n\t\t\t\t],\n\t\t\t} : {}),\n\t\t})\n\n\t\t// full circle with outline shouldn't have the center point\n\t\tif (end - start >= 360 && opt.outline) {\n\t\t\tif (opt.fill !== false) {\n\t\t\t\tdrawPolygon(Object.assign(polyOpt, {\n\t\t\t\t\toutline: null,\n\t\t\t\t}))\n\t\t\t}\n\t\t\tdrawPolygon(Object.assign(polyOpt, {\n\t\t\t\tpts: pts.slice(1),\n\t\t\t\tfill: false,\n\t\t\t}))\n\t\t\treturn\n\t\t}\n\n\t\tdrawPolygon(polyOpt)\n\n\t}\n\n\tfunction drawPolygon(opt: DrawPolygonOpt) {\n\n\t\tif (!opt.pts) {\n\t\t\tthrow new Error(\"drawPolygon() requires property \\\"pts\\\".\")\n\t\t}\n\n\t\tconst npts = opt.pts.length\n\n\t\tif (npts < 3) {\n\t\t\treturn\n\t\t}\n\n\t\tpushTransform()\n\t\tpushTranslate(opt.pos)\n\t\tpushScale(opt.scale)\n\t\tpushRotate(opt.angle)\n\t\tpushTranslate(opt.offset)\n\n\t\tif (opt.fill !== false) {\n\n\t\t\tconst color = opt.color ?? Color.WHITE\n\n\t\t\tconst verts = opt.pts.map((pt, i) => ({\n\t\t\t\tpos: new Vec2(pt.x, pt.y),\n\t\t\t\tuv: new Vec2(0, 0),\n\t\t\t\tcolor: opt.colors ? (opt.colors[i] ?? color) : color,\n\t\t\t\topacity: opt.opacity ?? 1,\n\t\t\t}))\n\n\t\t\t// TODO: better triangulation\n\t\t\tconst indices = [...Array(npts - 2).keys()]\n\t\t\t\t.map((n) => [0, n + 1, n + 2])\n\t\t\t\t.flat()\n\n\t\t\tdrawRaw(verts, opt.indices ?? indices, opt.fixed, gfx.defTex, opt.shader, opt.uniform)\n\n\t\t}\n\n\t\tif (opt.outline) {\n\t\t\tdrawLines({\n\t\t\t\tpts: [ ...opt.pts, opt.pts[0] ],\n\t\t\t\tradius: opt.radius,\n\t\t\t\twidth: opt.outline.width,\n\t\t\t\tcolor: opt.outline.color,\n\t\t\t\tjoin: opt.outline.join,\n\t\t\t\tuniform: opt.uniform,\n\t\t\t\tfixed: opt.fixed,\n\t\t\t\topacity: opt.opacity,\n\t\t\t})\n\t\t}\n\n\t\tpopTransform()\n\n\t}\n\n\tfunction drawStenciled(content: () => void, mask: () => void, test: number) {\n\n\t\tflush()\n\t\tgl.clear(gl.STENCIL_BUFFER_BIT)\n\t\tgl.enable(gl.STENCIL_TEST)\n\n\t\t// don't perform test, pure write\n\t\tgl.stencilFunc(\n\t\t\tgl.NEVER,\n\t\t\t1,\n\t\t\t0xFF,\n\t\t)\n\n\t\t// always replace since we're writing to the buffer\n\t\tgl.stencilOp(\n\t\t\tgl.REPLACE,\n\t\t\tgl.REPLACE,\n\t\t\tgl.REPLACE,\n\t\t)\n\n\t\tmask()\n\t\tflush()\n\n\t\t// perform test\n\t\tgl.stencilFunc(\n\t\t\ttest,\n\t\t\t1,\n\t\t\t0xFF,\n\t\t)\n\n\t\t// don't write since we're only testing\n\t\tgl.stencilOp(\n\t\t\tgl.KEEP,\n\t\t\tgl.KEEP,\n\t\t\tgl.KEEP,\n\t\t)\n\n\t\tcontent()\n\t\tflush()\n\t\tgl.disable(gl.STENCIL_TEST)\n\n\t}\n\n\tfunction drawMasked(content: () => void, mask: () => void) {\n\t\tdrawStenciled(content, mask, gl.EQUAL)\n\t}\n\n\tfunction drawSubtracted(content: () => void, mask: () => void) {\n\t\tdrawStenciled(content, mask, gl.NOTEQUAL)\n\t}\n\n\tfunction getViewportScale() {\n\t\treturn (gfx.viewport.width + gfx.viewport.height) / (gfx.width + gfx.height)\n\t}\n\n\tfunction drawUnscaled(content: () => void) {\n\t\tflush()\n\t\tconst ow = gfx.width\n\t\tconst oh = gfx.height\n\t\tgfx.width = gfx.viewport.width\n\t\tgfx.height = gfx.viewport.height\n\t\tcontent()\n\t\tflush()\n\t\tgfx.width = ow\n\t\tgfx.height = oh\n\t}\n\n\tfunction applyCharTransform(fchar: FormattedChar, tr: CharTransform) {\n\t\tif (tr.pos) fchar.pos = fchar.pos.add(tr.pos)\n\t\tif (tr.scale) fchar.scale = fchar.scale.scale(vec2(tr.scale))\n\t\tif (tr.angle) fchar.angle += tr.angle\n\t\tif (tr.color) fchar.color = fchar.color.mult(tr.color)\n\t\tif (tr.opacity) fchar.opacity *= tr.opacity\n\t}\n\n\t// TODO: escape\n\t// eslint-disable-next-line\n\tconst TEXT_STYLE_RE = /\\[(?<style>\\w+)\\](?<text>.*?)\\[\\/\\k<style>\\]/g\n\n\t// TODO: handle nested\n\tfunction compileStyledText(text: string): {\n\t\tcharStyleMap: Record<number, string[]>,\n\t\ttext: string,\n\t} {\n\n\t\tconst charStyleMap = {}\n\t\t// get the text without the styling syntax\n\t\tconst renderText = text.replace(TEXT_STYLE_RE, \"$2\")\n\t\tlet idxOffset = 0\n\n\t\t// put each styled char index into a map for easy access when iterating each char\n\t\tfor (const match of text.matchAll(TEXT_STYLE_RE)) {\n\t\t\tconst origIdx = match.index - idxOffset\n\t\t\tfor (let i = 0; i < match.groups.text.length; i++) {\n\t\t\t\tcharStyleMap[i + origIdx] = [match.groups.style]\n\t\t\t}\n\t\t\t// omit the style syntax in format string when calculating index\n\t\t\tidxOffset += match[0].length - match.groups.text.length\n\t\t}\n\n\t\treturn {\n\t\t\tcharStyleMap: charStyleMap,\n\t\t\ttext: renderText,\n\t\t}\n\n\t}\n\n\ttype FontAtlas = {\n\t\tfont: BitmapFontData,\n\t\tcursor: Vec2,\n\t\toutline: number,\n\t}\n\n\tconst fontAtlases: Record<string, FontAtlas> = {}\n\n\t// TODO: cache formatted text\n\t// format text and return a list of chars with their calculated position\n\tfunction formatText(opt: DrawTextOpt): FormattedText {\n\n\t\tif (opt.text === undefined) {\n\t\t\tthrow new Error(\"formatText() requires property \\\"text\\\".\")\n\t\t}\n\n\t\tlet font = resolveFont(opt.font)\n\n\t\t// if it's still loading\n\t\tif (opt.text === \"\" || font instanceof Asset || !font) {\n\t\t\treturn {\n\t\t\t\twidth: 0,\n\t\t\t\theight: 0,\n\t\t\t\tchars: [],\n\t\t\t\topt: opt,\n\t\t\t}\n\t\t}\n\n\t\tconst { charStyleMap, text } = compileStyledText(opt.text + \"\")\n\t\tconst chars = text.split(\"\")\n\n\t\t// if it's not bitmap font, we draw it with 2d canvas or use cached image\n\t\tif (font instanceof FontData || typeof font === \"string\") {\n\n\t\t\tconst fontName = font instanceof FontData ? font.fontface.family : font\n\t\t\tconst opts: LoadFontOpt = font instanceof FontData ? {\n\t\t\t\toutline: font.outline,\n\t\t\t\tfilter: font.filter,\n\t\t\t} : {\n\t\t\t\toutline: 0,\n\t\t\t\tfilter: DEF_FONT_FILTER,\n\t\t\t}\n\n\t\t\t// TODO: customizable font tex filter\n\t\t\tconst atlas: FontAtlas = fontAtlases[fontName] ?? {\n\t\t\t\tfont: {\n\t\t\t\t\ttex: new Texture(FONT_ATLAS_WIDTH, FONT_ATLAS_HEIGHT, {\n\t\t\t\t\t\tfilter: opts.filter,\n\t\t\t\t\t}),\n\t\t\t\t\tmap: {},\n\t\t\t\t\tsize: DEF_TEXT_CACHE_SIZE,\n\t\t\t\t},\n\t\t\t\tcursor: new Vec2(0),\n\t\t\t\toutline: opts.outline,\n\t\t\t}\n\n\t\t\tif (!fontAtlases[fontName]) {\n\t\t\t\tfontAtlases[fontName] = atlas\n\t\t\t}\n\n\t\t\tfont = atlas.font\n\n\t\t\tfor (const ch of chars) {\n\n\t\t\t\tif (!atlas.font.map[ch]) {\n\n\t\t\t\t\t// TODO: use assets.packer to pack font texture\n\t\t\t\t\tconst c2d = fontCacheCtx\n\t\t\t\t\tc2d.clearRect(0, 0, fontCacheCanvas.width, fontCacheCanvas.height)\n\t\t\t\t\tc2d.font = `${font.size}px ${fontName}`\n\t\t\t\t\tc2d.textBaseline = \"top\"\n\t\t\t\t\tc2d.textAlign = \"left\"\n\t\t\t\t\tc2d.fillStyle = \"#ffffff\"\n\t\t\t\t\tconst m = c2d.measureText(ch)\n\t\t\t\t\tlet w = Math.ceil(m.width)\n\t\t\t\t\tlet h = font.size\n\t\t\t\t\tif (atlas.outline) {\n\t\t\t\t\t\tc2d.lineJoin = \"round\"\n\t\t\t\t\t\tc2d.lineWidth = atlas.outline * 2\n\t\t\t\t\t\tc2d.strokeStyle = \"#000000\"\n\t\t\t\t\t\tc2d.strokeText(ch, atlas.outline, atlas.outline)\n\t\t\t\t\t\tw += atlas.outline * 2\n\t\t\t\t\t\th += atlas.outline * 3\n\t\t\t\t\t}\n\t\t\t\t\tc2d.fillText(ch, atlas.outline, atlas.outline)\n\n\t\t\t\t\tconst img = c2d.getImageData(0, 0, w, h)\n\n\t\t\t\t\t// if we are about to exceed the X axis of the texture, go to another line\n\t\t\t\t\tif (atlas.cursor.x + w > FONT_ATLAS_WIDTH) {\n\t\t\t\t\t\tatlas.cursor.x = 0\n\t\t\t\t\t\tatlas.cursor.y += h\n\t\t\t\t\t\tif (atlas.cursor.y > FONT_ATLAS_HEIGHT) {\n\t\t\t\t\t\t\t// TODO: create another atlas\n\t\t\t\t\t\t\tthrow new Error(\"Font atlas exceeds character limit\")\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tfont.tex.update(img, atlas.cursor.x, atlas.cursor.y)\n\t\t\t\t\tfont.map[ch] = new Quad(atlas.cursor.x, atlas.cursor.y, w, h)\n\t\t\t\t\tatlas.cursor.x += w\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst size = opt.size || font.size\n\t\tconst scale = vec2(opt.scale ?? 1).scale(size / font.size)\n\t\tconst lineSpacing = opt.lineSpacing ?? 0\n\t\tconst letterSpacing = opt.letterSpacing ?? 0\n\t\tlet curX = 0\n\t\tlet tw = 0\n\t\tlet th = 0\n\t\tconst lines: Array<{\n\t\t\twidth: number,\n\t\t\tchars: FormattedChar[],\n\t\t}> = []\n\t\tlet curLine: FormattedChar[] = []\n\t\tlet cursor = 0\n\t\tlet lastSpace = null\n\t\tlet lastSpaceWidth = null\n\n\t\t// TODO: word break\n\t\twhile (cursor < chars.length) {\n\n\t\t\tlet ch = chars[cursor]\n\n\t\t\t// always new line on '\\n'\n\t\t\tif (ch === \"\\n\") {\n\n\t\t\t\tth += size + lineSpacing\n\n\t\t\t\tlines.push({\n\t\t\t\t\twidth: curX - letterSpacing,\n\t\t\t\t\tchars: curLine,\n\t\t\t\t})\n\n\t\t\t\tlastSpace = null\n\t\t\t\tlastSpaceWidth = null\n\t\t\t\tcurX = 0\n\t\t\t\tcurLine = []\n\n\t\t\t} else {\n\n\t\t\t\tlet q = font.map[ch]\n\n\t\t\t\t// TODO: leave space if character not found?\n\t\t\t\tif (q) {\n\n\t\t\t\t\tlet gw = q.w * scale.x\n\n\t\t\t\t\tif (opt.width && curX + gw > opt.width) {\n\t\t\t\t\t\t// new line on last word if width exceeds\n\t\t\t\t\t\tth += size + lineSpacing\n\t\t\t\t\t\tif (lastSpace != null) {\n\t\t\t\t\t\t\tcursor -= curLine.length - lastSpace\n\t\t\t\t\t\t\tch = chars[cursor]\n\t\t\t\t\t\t\tq = font.map[ch]\n\t\t\t\t\t\t\tgw = q.w * scale.x\n\t\t\t\t\t\t\t// omit trailing space\n\t\t\t\t\t\t\tcurLine = curLine.slice(0, lastSpace - 1)\n\t\t\t\t\t\t\tcurX = lastSpaceWidth\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlastSpace = null\n\t\t\t\t\t\tlastSpaceWidth = null\n\t\t\t\t\t\tlines.push({\n\t\t\t\t\t\t\twidth: curX - letterSpacing,\n\t\t\t\t\t\t\tchars: curLine,\n\t\t\t\t\t\t})\n\t\t\t\t\t\tcurX = 0\n\t\t\t\t\t\tcurLine = []\n\t\t\t\t\t}\n\n\t\t\t\t\t// push char\n\t\t\t\t\tcurLine.push({\n\t\t\t\t\t\ttex: font.tex,\n\t\t\t\t\t\twidth: q.w,\n\t\t\t\t\t\theight: q.h,\n\t\t\t\t\t\t// without some padding there'll be visual artifacts on edges\n\t\t\t\t\t\tquad: new Quad(\n\t\t\t\t\t\t\tq.x / font.tex.width,\n\t\t\t\t\t\t\tq.y / font.tex.height,\n\t\t\t\t\t\t\tq.w / font.tex.width,\n\t\t\t\t\t\t\tq.h / font.tex.height,\n\t\t\t\t\t\t),\n\t\t\t\t\t\tch: ch,\n\t\t\t\t\t\tpos: new Vec2(curX, th),\n\t\t\t\t\t\topacity: opt.opacity ?? 1,\n\t\t\t\t\t\tcolor: opt.color ?? Color.WHITE,\n\t\t\t\t\t\tscale: vec2(scale),\n\t\t\t\t\t\tangle: 0,\n\t\t\t\t\t})\n\n\t\t\t\t\tif (ch === \" \") {\n\t\t\t\t\t\tlastSpace = curLine.length\n\t\t\t\t\t\tlastSpaceWidth = curX\n\t\t\t\t\t}\n\n\t\t\t\t\tcurX += gw\n\t\t\t\t\ttw = Math.max(tw, curX)\n\t\t\t\t\tcurX += letterSpacing\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tcursor++\n\n\t\t}\n\n\t\tlines.push({\n\t\t\twidth: curX - letterSpacing,\n\t\t\tchars: curLine,\n\t\t})\n\n\t\tth += size\n\n\t\tif (opt.width) {\n\t\t\ttw = opt.width\n\t\t}\n\n\t\tconst fchars: FormattedChar[] = []\n\n\t\tfor (const line of lines) {\n\n\t\t\tconst ox = (tw - line.width) * alignPt(opt.align ?? \"left\")\n\n\t\t\tfor (const fchar of line.chars) {\n\n\t\t\t\tconst q = font.map[fchar.ch]\n\t\t\t\tconst idx = fchars.length\n\n\t\t\t\tfchar.pos = fchar.pos.add(ox, 0).add(\n\t\t\t\t\tq.w * scale.x * 0.5,\n\t\t\t\t\tq.h * scale.y * 0.5,\n\t\t\t\t)\n\n\t\t\t\tif (opt.transform) {\n\t\t\t\t\tconst tr = typeof opt.transform === \"function\"\n\t\t\t\t\t\t? opt.transform(idx, fchar.ch)\n\t\t\t\t\t\t: opt.transform\n\t\t\t\t\tif (tr) {\n\t\t\t\t\t\tapplyCharTransform(fchar, tr)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (charStyleMap[idx]) {\n\t\t\t\t\tconst styles = charStyleMap[idx]\n\t\t\t\t\tfor (const name of styles) {\n\t\t\t\t\t\tconst style = opt.styles[name]\n\t\t\t\t\t\tconst tr = typeof style === \"function\"\n\t\t\t\t\t\t\t? style(idx, fchar.ch)\n\t\t\t\t\t\t\t: style\n\t\t\t\t\t\tif (tr) {\n\t\t\t\t\t\t\tapplyCharTransform(fchar, tr)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfchars.push(fchar)\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\twidth: tw,\n\t\t\theight: th,\n\t\t\tchars: fchars,\n\t\t\topt: opt,\n\t\t}\n\n\t}\n\n\tfunction drawText(opt: DrawTextOpt) {\n\t\tdrawFormattedText(formatText(opt))\n\t}\n\n\tfunction drawFormattedText(ftext: FormattedText) {\n\t\tpushTransform()\n\t\tpushTranslate(ftext.opt.pos)\n\t\tpushRotate(ftext.opt.angle)\n\t\tpushTranslate(anchorPt(ftext.opt.anchor ?? \"topleft\").add(1, 1).scale(ftext.width, ftext.height).scale(-0.5))\n\t\tftext.chars.forEach((ch) => {\n\t\t\tdrawUVQuad({\n\t\t\t\ttex: ch.tex,\n\t\t\t\twidth: ch.width,\n\t\t\t\theight: ch.height,\n\t\t\t\tpos: ch.pos,\n\t\t\t\tscale: ch.scale,\n\t\t\t\tangle: ch.angle,\n\t\t\t\tcolor: ch.color,\n\t\t\t\topacity: ch.opacity,\n\t\t\t\tquad: ch.quad,\n\t\t\t\tanchor: \"center\",\n\t\t\t\tuniform: ftext.opt.uniform,\n\t\t\t\tshader: ftext.opt.shader,\n\t\t\t\tfixed: ftext.opt.fixed,\n\t\t\t})\n\t\t})\n\t\tpopTransform()\n\t}\n\n\t// get game width\n\tfunction width(): number {\n\t\treturn gfx.width\n\t}\n\n\t// get game height\n\tfunction height(): number {\n\t\treturn gfx.height\n\t}\n\n\tconst winEvents: EventList<WindowEventMap> = {}\n\n\t// transform a point from window space to content space\n\tfunction windowToContent(pt: Vec2) {\n\t\treturn new Vec2(\n\t\t\t(pt.x - gfx.viewport.x) * width() / gfx.viewport.width,\n\t\t\t(pt.y - gfx.viewport.y) * height() / gfx.viewport.height,\n\t\t)\n\t}\n\n\t// transform a point from content space to view space\n\tfunction contentToView(pt: Vec2) {\n\t\treturn new Vec2(\n\t\t\tpt.x * gfx.viewport.width / gfx.width,\n\t\t\tpt.y * gfx.viewport.height / gfx.height,\n\t\t)\n\t}\n\n\tfunction mousePos() {\n\t\treturn windowToContent(app.mousePos())\n\t}\n\n\twinEvents.error = (e) => {\n\t\tif (e.error) {\n\t\t\thandleErr(e.error)\n\t\t} else {\n\t\t\t// ignore errors from somewhere else, e.g. iframes\n\t\t\tif (e.message === \"Script error.\") return\n\n\t\t\thandleErr(new Error(e.message))\n\t\t}\n\t}\n\n\twinEvents.unhandledrejection = (e) => handleErr(e.reason)\n\n\tfor (const name in winEvents) {\n\t\twindow.addEventListener(name, winEvents[name])\n\t}\n\n\tconst debug: Debug = {\n\t\tinspect: false,\n\t\ttimeScale: 1,\n\t\tshowLog: true,\n\t\tfps: () => app.fps(),\n\t\tnumFrames: () => app.numFrames(),\n\t\tstepFrame: updateFrame,\n\t\tdrawCalls: () => gfx.drawCalls,\n\t\tclearLog: () => game.logs = [],\n\t\tlog: (msg) => {\n\t\t\tconst max = gopt.logMax ?? LOG_MAX\n\t\t\tgame.logs.unshift({\n\t\t\t\tmsg: msg,\n\t\t\t\ttime: app.time(),\n\t\t\t})\n\t\t\tif (game.logs.length > max) {\n\t\t\t\tgame.logs = game.logs.slice(0, max)\n\t\t\t}\n\t\t},\n\t\terror: (msg) => debug.log(new Error(msg.toString ? msg.toString() : msg as string)),\n\t\tcurRecording: null,\n\t\tget paused() {\n\t\t\treturn app.paused\n\t\t},\n\t\tset paused(v) {\n\t\t\tapp.paused = v\n\t\t\tif (v) {\n\t\t\t\taudio.ctx.suspend()\n\t\t\t} else {\n\t\t\t\taudio.ctx.resume()\n\t\t\t}\n\t\t},\n\t}\n\n\tfunction dt() {\n\t\treturn app.dt()\n\t}\n\n\tfunction camPos(...pos: Vec2Args): Vec2 {\n\t\tif (pos.length > 0) {\n\t\t\tgame.cam.pos = vec2(...pos)\n\t\t}\n\t\treturn game.cam.pos ? game.cam.pos.clone() : center()\n\t}\n\n\tfunction camScale(...scale: Vec2Args): Vec2 {\n\t\tif (scale.length > 0) {\n\t\t\tgame.cam.scale = vec2(...scale)\n\t\t}\n\t\treturn game.cam.scale.clone()\n\t}\n\n\tfunction camRot(angle: number): number {\n\t\tif (angle !== undefined) {\n\t\t\tgame.cam.angle = angle\n\t\t}\n\t\treturn game.cam.angle\n\t}\n\n\tfunction shake(intensity: number = 12) {\n\t\tgame.cam.shake += intensity\n\t}\n\n\tfunction toScreen(p: Vec2): Vec2 {\n\t\treturn game.cam.transform.multVec2(p)\n\t}\n\n\tfunction toWorld(p: Vec2): Vec2 {\n\t\treturn game.cam.transform.invert().multVec2(p)\n\t}\n\n\tfunction calcTransform(obj: GameObj): Mat4 {\n\t\tconst tr = new Mat4()\n\t\tif (obj.pos) tr.translate(obj.pos)\n\t\tif (obj.scale) tr.scale(obj.scale)\n\t\tif (obj.angle) tr.rotate(obj.angle)\n\t\treturn obj.parent ? tr.mult(obj.parent.transform) : tr\n\t}\n\n\tfunction make<T>(comps: CompList<T>): GameObj<T> {\n\n\t\tconst compStates = new Map()\n\t\tconst cleanups = {}\n\t\tconst events = new EventHandler()\n\t\tconst inputEvents: EventController[] = []\n\t\tlet onCurCompCleanup = null\n\t\tlet paused = false\n\n\t\t// TODO\n\t\t// @ts-ignore\n\t\tconst obj: GameObj = {\n\n\t\t\tid: uid(),\n\t\t\t// TODO: a nice way to hide / pause when add()-ing\n\t\t\thidden: false,\n\t\t\ttransform: new Mat4(),\n\t\t\tchildren: [],\n\t\t\tparent: null,\n\n\t\t\tset paused(p) {\n\t\t\t\tif (p === paused) return\n\t\t\t\tpaused = p\n\t\t\t\tfor (const e of inputEvents) {\n\t\t\t\t\te.paused = p\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tget paused() {\n\t\t\t\treturn paused\n\t\t\t},\n\n\t\t\tadd<T2>(a: CompList<T2> | GameObj<T2>): GameObj<T2> {\n\t\t\t\tconst obj = Array.isArray(a) ? make(a) : a\n\t\t\t\tif (obj.parent) {\n\t\t\t\t\tthrow new Error(\"Cannot add a game obj that already has a parent.\")\n\t\t\t\t}\n\t\t\t\tobj.parent = this\n\t\t\t\tobj.transform = calcTransform(obj)\n\t\t\t\tthis.children.push(obj)\n\t\t\t\t// TODO: trigger add for children\n\t\t\t\tobj.trigger(\"add\", obj)\n\t\t\t\tgame.events.trigger(\"add\", obj)\n\t\t\t\treturn obj\n\t\t\t},\n\n\t\t\treadd(obj: GameObj): GameObj {\n\t\t\t\tconst idx = this.children.indexOf(obj)\n\t\t\t\tif (idx !== -1) {\n\t\t\t\t\tthis.children.splice(idx, 1)\n\t\t\t\t\tthis.children.push(obj)\n\t\t\t\t}\n\t\t\t\treturn obj\n\t\t\t},\n\n\t\t\tremove(obj: GameObj): void {\n\t\t\t\tconst idx = this.children.indexOf(obj)\n\t\t\t\tif (idx !== -1) {\n\t\t\t\t\tobj.parent = null\n\t\t\t\t\tthis.children.splice(idx, 1)\n\t\t\t\t\tconst trigger = (o) => {\n\t\t\t\t\t\to.trigger(\"destroy\")\n\t\t\t\t\t\tgame.events.trigger(\"destroy\", o)\n\t\t\t\t\t\to.children.forEach((child) => trigger(child))\n\t\t\t\t\t}\n\t\t\t\t\ttrigger(obj)\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// TODO: recursive\n\t\t\tremoveAll(tag?: Tag) {\n\t\t\t\tif (tag) {\n\t\t\t\t\tthis.get(tag).forEach((obj) => this.remove(obj))\n\t\t\t\t} else {\n\t\t\t\t\tfor (const child of [...this.children]) this.remove(child)\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tupdate() {\n\t\t\t\tif (this.paused) return\n\t\t\t\tthis.children\n\t\t\t\t\t.sort((o1, o2) => (o1.z ?? 0) - (o2.z ?? 0))\n\t\t\t\t\t.forEach((child) => child.update())\n\t\t\t\tthis.trigger(\"update\")\n\t\t\t},\n\n\t\t\tdraw(this: GameObj<PosComp | ScaleComp | RotateComp | FixedComp>) {\n\t\t\t\tif (this.hidden) return\n\t\t\t\tconst f = gfx.fixed\n\t\t\t\tif (this.fixed) gfx.fixed = true\n\t\t\t\tpushTransform()\n\t\t\t\tpushTranslate(this.pos)\n\t\t\t\tpushScale(this.scale)\n\t\t\t\tpushRotate(this.angle)\n\t\t\t\t// TODO: automatically don't draw if offscreen\n\t\t\t\tthis.trigger(\"draw\")\n\t\t\t\tthis.children\n\t\t\t\t\t.sort((o1, o2) => (o1.z ?? 0) - (o2.z ?? 0))\n\t\t\t\t\t.forEach((child) => child.draw())\n\t\t\t\tpopTransform()\n\t\t\t\tgfx.fixed = f\n\t\t\t},\n\n\t\t\tdrawInspect(this: GameObj<PosComp | ScaleComp | RotateComp>) {\n\t\t\t\tif (this.hidden) return\n\t\t\t\tpushTransform()\n\t\t\t\tpushTranslate(this.pos)\n\t\t\t\tpushScale(this.scale)\n\t\t\t\tpushRotate(this.angle)\n\t\t\t\tthis.children\n\t\t\t\t\t.sort((o1, o2) => (o1.z ?? 0) - (o2.z ?? 0))\n\t\t\t\t\t.forEach((child) => child.drawInspect())\n\t\t\t\tthis.trigger(\"drawInspect\")\n\t\t\t\tpopTransform()\n\t\t\t},\n\n\t\t\t// use a comp, or tag\n\t\t\tuse(comp: Comp | Tag) {\n\n\t\t\t\tif (!comp) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\t// tag\n\t\t\t\tif (typeof comp === \"string\") {\n\t\t\t\t\treturn this.use({\n\t\t\t\t\t\tid: comp,\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tlet gc = []\n\n\t\t\t\t// clear if overwrite\n\t\t\t\tif (comp.id) {\n\t\t\t\t\tthis.unuse(comp.id)\n\t\t\t\t\tcleanups[comp.id] = []\n\t\t\t\t\tgc = cleanups[comp.id]\n\t\t\t\t\tcompStates.set(comp.id, comp)\n\t\t\t\t}\n\n\t\t\t\tfor (const k in comp) {\n\n\t\t\t\t\tif (COMP_DESC.has(k)) {\n\t\t\t\t\t\tcontinue\n\t\t\t\t\t}\n\n\t\t\t\t\tconst prop = Object.getOwnPropertyDescriptor(comp, k)\n\n\t\t\t\t\tif (typeof prop.value === \"function\") {\n\t\t\t\t\t\tcomp[k] = comp[k].bind(this)\n\t\t\t\t\t}\n\n\t\t\t\t\tif (prop.set) {\n\t\t\t\t\t\tObject.defineProperty(comp, k, {\n\t\t\t\t\t\t\tset: prop.set.bind(this),\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\n\t\t\t\t\tif (prop.get) {\n\t\t\t\t\t\tObject.defineProperty(comp, k, {\n\t\t\t\t\t\t\tget: prop.get.bind(this),\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\n\t\t\t\t\tif (COMP_EVENTS.has(k)) {\n\t\t\t\t\t\t// automatically clean up events created by components in add() stage\n\t\t\t\t\t\tconst func = k === \"add\" ? () => {\n\t\t\t\t\t\t\tonCurCompCleanup = (c) => gc.push(c)\n\t\t\t\t\t\t\tcomp[k]()\n\t\t\t\t\t\t\tonCurCompCleanup = null\n\t\t\t\t\t\t} : comp[k]\n\t\t\t\t\t\tgc.push(this.on(k, func).cancel)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (this[k] === undefined) {\n\t\t\t\t\t\t\t// assign comp fields to game obj\n\t\t\t\t\t\t\tObject.defineProperty(this, k, {\n\t\t\t\t\t\t\t\tget: () => comp[k],\n\t\t\t\t\t\t\t\tset: (val) => comp[k] = val,\n\t\t\t\t\t\t\t\tconfigurable: true,\n\t\t\t\t\t\t\t\tenumerable: true,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\tgc.push(() => delete this[k])\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthrow new Error(`Duplicate component property: \"${k}\"`)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// check for component dependencies\n\t\t\t\tconst checkDeps = () => {\n\t\t\t\t\tif (!comp.require) return\n\t\t\t\t\tfor (const dep of comp.require) {\n\t\t\t\t\t\tif (!this.c(dep)) {\n\t\t\t\t\t\t\tthrow new Error(`Component \"${comp.id}\" requires component \"${dep}\"`)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (comp.destroy) {\n\t\t\t\t\tgc.push(comp.destroy.bind(this))\n\t\t\t\t}\n\n\t\t\t\t// manually trigger add event if object already exist\n\t\t\t\tif (this.exists()) {\n\t\t\t\t\tcheckDeps()\n\t\t\t\t\tif (comp.add) {\n\t\t\t\t\t\tonCurCompCleanup = (c) => gc.push(c)\n\t\t\t\t\t\tcomp.add.call(this)\n\t\t\t\t\t\tonCurCompCleanup = null\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (comp.require) {\n\t\t\t\t\t\tgc.push(this.on(\"add\", checkDeps).cancel)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tunuse(id: Tag) {\n\t\t\t\tif (cleanups[id]) {\n\t\t\t\t\tcleanups[id].forEach((e) => e())\n\t\t\t\t\tdelete cleanups[id]\n\t\t\t\t}\n\t\t\t\tif (compStates.has(id)) {\n\t\t\t\t\tcompStates.delete(id)\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tc(id: Tag): Comp {\n\t\t\t\treturn compStates.get(id)\n\t\t\t},\n\n\t\t\tget(t: Tag | Tag[], opts: GetOpt = {}): GameObj[] {\n\t\t\t\tlet list: GameObj[] = opts.recursive\n\t\t\t\t\t? this.children.flatMap(function recurse(child) {\n\t\t\t\t\t\treturn [child, ...child.children.flatMap(recurse)]\n\t\t\t\t\t})\n\t\t\t\t\t: this.children\n\t\t\t\tlist = list.filter((child) => t ? child.is(t) : true)\n\t\t\t\tif (opts.liveUpdate) {\n\t\t\t\t\tconst isChild = (obj) => {\n\t\t\t\t\t\treturn opts.recursive\n\t\t\t\t\t\t\t? this.isAncestorOf(obj)\n\t\t\t\t\t\t\t: obj.parent === this\n\t\t\t\t\t}\n\t\t\t\t\t// TODO: handle when object add / remove tags\n\t\t\t\t\t// TODO: a way to cancel the events?\n\t\t\t\t\tonAdd((obj) => {\n\t\t\t\t\t\tif (isChild(obj) && obj.is(t)) {\n\t\t\t\t\t\t\tlist.push(obj)\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\tonDestroy((obj) => {\n\t\t\t\t\t\tif (isChild(obj) && obj.is(t)) {\n\t\t\t\t\t\t\tconst idx = list.findIndex((o) => o.id === obj.id)\n\t\t\t\t\t\t\tif (idx !== -1) {\n\t\t\t\t\t\t\t\tlist.splice(idx, 1)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\treturn list\n\t\t\t},\n\n\t\t\tisAncestorOf(obj: GameObj) {\n\t\t\t\tif (!obj.parent) {\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\treturn obj.parent === this || this.isAncestorOf(obj.parent)\n\t\t\t},\n\n\t\t\texists(): boolean {\n\t\t\t\treturn game.root.isAncestorOf(this)\n\t\t\t},\n\n\t\t\tis(tag: Tag | Tag[]): boolean {\n\t\t\t\tif (tag === \"*\") {\n\t\t\t\t\treturn true\n\t\t\t\t}\n\t\t\t\tif (Array.isArray(tag)) {\n\t\t\t\t\tfor (const t of tag) {\n\t\t\t\t\t\tif (!this.c(t)) {\n\t\t\t\t\t\t\treturn false\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn true\n\t\t\t\t} else {\n\t\t\t\t\treturn this.c(tag) != null\n\t\t\t\t}\n\t\t\t},\n\n\t\t\ton(name: string, action: (...args) => void): EventController {\n\t\t\t\tconst ctrl = events.on(name, action.bind(this))\n\t\t\t\tif (onCurCompCleanup) {\n\t\t\t\t\tonCurCompCleanup(() => ctrl.cancel())\n\t\t\t\t}\n\t\t\t\treturn ctrl\n\t\t\t},\n\n\t\t\ttrigger(name: string, ...args): void {\n\t\t\t\tevents.trigger(name, ...args)\n\t\t\t\tgame.objEvents.trigger(name, this, ...args)\n\t\t\t},\n\n\t\t\tdestroy() {\n\t\t\t\tif (this.parent) {\n\t\t\t\t\tthis.parent.remove(this)\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tinspect() {\n\t\t\t\tconst info = {}\n\t\t\t\tfor (const [tag, comp] of compStates) {\n\t\t\t\t\tinfo[tag] = comp.inspect ? comp.inspect() : null\n\t\t\t\t}\n\t\t\t\treturn info\n\t\t\t},\n\n\t\t\tonAdd(cb: () => void): EventController {\n\t\t\t\treturn this.on(\"add\", cb)\n\t\t\t},\n\n\t\t\tonUpdate(cb: () => void): EventController {\n\t\t\t\treturn this.on(\"update\", cb)\n\t\t\t},\n\n\t\t\tonDraw(cb: () => void): EventController {\n\t\t\t\treturn this.on(\"draw\", cb)\n\t\t\t},\n\n\t\t\tonDestroy(action: () => void): EventController {\n\t\t\t\treturn this.on(\"destroy\", action)\n\t\t\t},\n\n\t\t\tclearEvents() {\n\t\t\t\tevents.clear()\n\t\t\t},\n\n\t\t}\n\n\t\t// TODO: type with as const\n\t\tconst evs = [\n\t\t\t\"onKeyPress\",\n\t\t\t\"onKeyPressRepeat\",\n\t\t\t\"onKeyDown\",\n\t\t\t\"onKeyRelease\",\n\t\t\t\"onMousePress\",\n\t\t\t\"onMouseDown\",\n\t\t\t\"onMouseRelease\",\n\t\t\t\"onMouseMove\",\n\t\t\t\"onCharInput\",\n\t\t\t\"onMouseMove\",\n\t\t\t\"onTouchStart\",\n\t\t\t\"onTouchMove\",\n\t\t\t\"onTouchEnd\",\n\t\t\t\"onScroll\",\n\t\t\t\"onGamepadButtonPress\",\n\t\t\t\"onGamepadButtonDown\",\n\t\t\t\"onGamepadButtonRelease\",\n\t\t\t\"onGamepadStick\",\n\t\t]\n\n\t\tfor (const e of evs) {\n\t\t\tobj[e] = (...args) => {\n\t\t\t\tconst ev = app[e](...args)\n\t\t\t\tinputEvents.push(ev)\n\t\t\t\t// TODO: what if the game object is destroy and re-added\n\t\t\t\tobj.onDestroy(() => ev.cancel())\n\t\t\t\treturn ev\n\t\t\t}\n\t\t}\n\n\t\tfor (const comp of comps) {\n\t\t\tobj.use(comp)\n\t\t}\n\n\t\treturn obj as unknown as GameObj<T>\n\n\t}\n\n\t// add an event to a tag\n\tfunction on(event: string, tag: Tag, cb: (obj: GameObj, ...args) => void): EventController {\n\t\tif (!game.objEvents[event]) {\n\t\t\tgame.objEvents[event] = new IDList()\n\t\t}\n\t\treturn game.objEvents.on(event, (obj, ...args) => {\n\t\t\tif (obj.is(tag)) {\n\t\t\t\tcb(obj, ...args)\n\t\t\t}\n\t\t})\n\t}\n\n\t// add update event to a tag or global update\n\tconst onUpdate = ((tag: Tag | (() => void), action?: (obj: GameObj) => void) => {\n\t\tif (typeof tag === \"function\" && action === undefined) {\n\t\t\tconst obj = add([{ update: tag }])\n\t\t\treturn {\n\t\t\t\tget paused() {\n\t\t\t\t\treturn obj.paused\n\t\t\t\t},\n\t\t\t\tset paused(p) {\n\t\t\t\t\tobj.paused = p\n\t\t\t\t},\n\t\t\t\tcancel: () => obj.destroy(),\n\t\t\t}\n\t\t} else if (typeof tag === \"string\") {\n\t\t\treturn on(\"update\", tag, action)\n\t\t}\n\t}) as KaboomCtx[\"onUpdate\"]\n\n\t// add draw event to a tag or global draw\n\tconst onDraw = ((tag: Tag | (() => void), action?: (obj: GameObj) => void) => {\n\t\tif (typeof tag === \"function\" && action === undefined) {\n\t\t\tconst obj = add([{ draw: tag }])\n\t\t\treturn {\n\t\t\t\tget paused() {\n\t\t\t\t\treturn obj.hidden\n\t\t\t\t},\n\t\t\t\tset paused(p) {\n\t\t\t\t\tobj.hidden = p\n\t\t\t\t},\n\t\t\t\tcancel: () => obj.destroy(),\n\t\t\t}\n\t\t} else if (typeof tag === \"string\") {\n\t\t\treturn on(\"draw\", tag, action)\n\t\t}\n\t}) as KaboomCtx[\"onDraw\"]\n\n\tfunction onAdd(tag: Tag | ((obj: GameObj) => void), action?: (obj: GameObj) => void) {\n\t\tif (typeof tag === \"function\" && action === undefined) {\n\t\t\treturn game.events.on(\"add\", tag)\n\t\t} else if (typeof tag === \"string\") {\n\t\t\treturn on(\"add\", tag, action)\n\t\t}\n\t}\n\n\tfunction onDestroy(tag: Tag | ((obj: GameObj) => void), action?: (obj: GameObj) => void) {\n\t\tif (typeof tag === \"function\" && action === undefined) {\n\t\t\treturn game.events.on(\"destroy\", tag)\n\t\t} else if (typeof tag === \"string\") {\n\t\t\treturn on(\"destroy\", tag, action)\n\t\t}\n\t}\n\n\t// add an event that runs with objs with t1 collides with objs with t2\n\tfunction onCollide(\n\t\tt1: Tag,\n\t\tt2: Tag,\n\t\tf: (a: GameObj, b: GameObj, col?: Collision) => void,\n\t): EventController {\n\t\treturn on(\"collide\", t1, (a, b, col) => b.is(t2) && f(a, b, col))\n\t}\n\n\tfunction onCollideUpdate(\n\t\tt1: Tag,\n\t\tt2: Tag,\n\t\tf: (a: GameObj, b: GameObj, col?: Collision) => void,\n\t): EventController {\n\t\treturn on(\"collideUpdate\", t1, (a, b, col) => b.is(t2) && f(a, b, col))\n\t}\n\n\tfunction onCollideEnd(\n\t\tt1: Tag,\n\t\tt2: Tag,\n\t\tf: (a: GameObj, b: GameObj, col?: Collision) => void,\n\t): EventController {\n\t\treturn on(\"collideEnd\", t1, (a, b, col) => b.is(t2) && f(a, b, col))\n\t}\n\n\tfunction forAllCurrentAndFuture(t: Tag, action: (obj: GameObj) => void) {\n\t\tget(t, { recursive: true }).forEach(action)\n\t\tonAdd(t, action)\n\t}\n\n\t// add an event that runs when objs with tag t is clicked\n\tfunction onClick(tag: Tag | (() => void), action?: (obj: GameObj) => void): EventController {\n\t\tif (typeof tag === \"function\") {\n\t\t\treturn app.onMousePress(tag)\n\t\t} else {\n\t\t\tconst events = []\n\t\t\tforAllCurrentAndFuture(tag, (obj) => {\n\t\t\t\tif (!obj.area)\n\t\t\t\t\tthrow new Error(\"onClick() requires the object to have area() component\")\n\t\t\t\tevents.push(obj.onClick(() => action(obj)))\n\t\t\t})\n\t\t\treturn EventController.join(events)\n\t\t}\n\t}\n\n\t// add an event that runs once when objs with tag t is hovered\n\tfunction onHover(t: Tag, action: (obj: GameObj) => void): EventController {\n\t\tconst events = []\n\t\tforAllCurrentAndFuture(t, (obj) => {\n\t\t\tif (!obj.area)\n\t\t\t\tthrow new Error(\"onHover() requires the object to have area() component\")\n\t\t\tevents.push(obj.onHover(() => action(obj)))\n\t\t})\n\t\treturn EventController.join(events)\n\t}\n\n\t// add an event that runs once when objs with tag t is hovered\n\tfunction onHoverUpdate(t: Tag, action: (obj: GameObj) => void): EventController {\n\t\tconst events = []\n\t\tforAllCurrentAndFuture(t, (obj) => {\n\t\t\tif (!obj.area)\n\t\t\t\tthrow new Error(\"onHoverUpdate() requires the object to have area() component\")\n\t\t\tevents.push(obj.onHoverUpdate(() => action(obj)))\n\t\t})\n\t\treturn EventController.join(events)\n\t}\n\n\t// add an event that runs once when objs with tag t is unhovered\n\tfunction onHoverEnd(t: Tag, action: (obj: GameObj) => void): EventController {\n\t\tconst events = []\n\t\tforAllCurrentAndFuture(t, (obj) => {\n\t\t\tif (!obj.area)\n\t\t\t\tthrow new Error(\"onHoverEnd() requires the object to have area() component\")\n\t\t\tevents.push(obj.onHoverEnd(() => action(obj)))\n\t\t})\n\t\treturn EventController.join(events)\n\t}\n\n\t// TODO: use PromiseLike?\n\t// TODO: use root game object and timer()?\n\t// add an event that'd be run after t\n\tfunction wait(time: number, action?: () => void): TimerController {\n\t\tlet t = 0\n\t\tconst actions = []\n\t\tif (action) actions.push(action)\n\t\tconst ev = onUpdate(() => {\n\t\t\tt += dt()\n\t\t\tif (t >= time) {\n\t\t\t\tev.cancel()\n\t\t\t\tactions.forEach((action) => action())\n\t\t\t}\n\t\t})\n\t\treturn {\n\t\t\tpaused: ev.paused,\n\t\t\tcancel: ev.cancel,\n\t\t\tonEnd(action) {\n\t\t\t\tactions.push(action)\n\t\t\t},\n\t\t\tthen(action) {\n\t\t\t\tthis.onEnd(action)\n\t\t\t\treturn this\n\t\t\t},\n\t\t}\n\t}\n\n\t// add an event that's run every t seconds\n\tfunction loop(t: number, action: () => void): EventController {\n\n\t\tlet curTimer: null | TimerController = null\n\n\t\tconst newAction = () => {\n\t\t\t// TODO: should f be execute right away as loop() is called?\n\t\t\tcurTimer = wait(t, newAction)\n\t\t\taction()\n\t\t}\n\n\t\tcurTimer = wait(0, newAction)\n\n\t\treturn {\n\t\t\tget paused() {\n\t\t\t\treturn curTimer.paused\n\t\t\t},\n\t\t\tset paused(p) {\n\t\t\t\tcurTimer.paused = p\n\t\t\t},\n\t\t\tcancel: () => curTimer.cancel(),\n\t\t}\n\n\t}\n\n\tfunction enterDebugMode() {\n\n\t\tapp.onKeyPress(\"f1\", () => {\n\t\t\tdebug.inspect = !debug.inspect\n\t\t})\n\n\t\tapp.onKeyPress(\"f2\", () => {\n\t\t\tdebug.clearLog()\n\t\t})\n\n\t\tapp.onKeyPress(\"f8\", () => {\n\t\t\tdebug.paused = !debug.paused\n\t\t})\n\n\t\tapp.onKeyPress(\"f7\", () => {\n\t\t\tdebug.timeScale = toFixed(clamp(debug.timeScale - 0.2, 0, 2), 1)\n\t\t})\n\n\t\tapp.onKeyPress(\"f9\", () => {\n\t\t\tdebug.timeScale = toFixed(clamp(debug.timeScale + 0.2, 0, 2), 1)\n\t\t})\n\n\t\tapp.onKeyPress(\"f10\", () => {\n\t\t\tdebug.stepFrame()\n\t\t})\n\n\t}\n\n\tfunction enterBurpMode() {\n\t\tapp.onKeyPress(\"b\", () => burp())\n\t}\n\n\tfunction setGravity(g: number) {\n\t\tgame.gravity = g\n\t}\n\n\tfunction getGravity() {\n\t\treturn game.gravity\n\t}\n\n\tfunction setBackground(...args) {\n\t\tif (args.length === 1 || args.length === 2) {\n\t\t\tgfx.bgColor = rgb(args[0])\n\t\t\tif (args[1]) gfx.bgAlpha = args[1]\n\t\t} else if (args.length === 3 || args.length === 4) {\n\t\t\tgfx.bgColor = rgb(args[0], args[1], args[2])\n\t\t\tif (args[3]) gfx.bgAlpha = args[3]\n\t\t}\n\t\tgl.clearColor(\n\t\t\tgfx.bgColor.r / 255,\n\t\t\tgfx.bgColor.g / 255,\n\t\t\tgfx.bgColor.b / 255,\n\t\t\tgfx.bgAlpha,\n\t\t)\n\t}\n\n\tfunction getBackground() {\n\t\treturn gfx.bgColor.clone()\n\t}\n\n\t// TODO: manage global velocity here?\n\tfunction pos(...args: Vec2Args): PosComp {\n\n\t\treturn {\n\n\t\t\tid: \"pos\",\n\t\t\tpos: vec2(...args),\n\n\t\t\tmoveBy(...args: Vec2Args) {\n\t\t\t\tthis.pos = this.pos.add(vec2(...args))\n\t\t\t},\n\n\t\t\t// move with velocity (pixels per second)\n\t\t\tmove(...args: Vec2Args) {\n\t\t\t\tthis.moveBy(vec2(...args).scale(dt()))\n\t\t\t},\n\n\t\t\t// move to a destination, with optional speed\n\t\t\tmoveTo(...args) {\n\t\t\t\tif (typeof args[0] === \"number\" && typeof args[1] === \"number\") {\n\t\t\t\t\treturn this.moveTo(vec2(args[0], args[1]), args[2])\n\t\t\t\t}\n\t\t\t\tconst dest = args[0]\n\t\t\t\tconst speed = args[1]\n\t\t\t\tif (speed === undefined) {\n\t\t\t\t\tthis.pos = vec2(dest)\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tconst diff = dest.sub(this.pos)\n\t\t\t\tif (diff.len() <= speed * dt()) {\n\t\t\t\t\tthis.pos = vec2(dest)\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tthis.move(diff.unit().scale(speed))\n\t\t\t},\n\n\t\t\tworldPos(this: GameObj<PosComp>): Vec2 {\n\t\t\t\treturn this.parent\n\t\t\t\t\t? this.parent.transform.multVec2(this.pos)\n\t\t\t\t\t: this.pos\n\t\t\t},\n\n\t\t\t// get the screen position (transformed by camera)\n\t\t\tscreenPos(this: GameObj<PosComp | FixedComp>): Vec2 {\n\t\t\t\tconst pos = this.worldPos()\n\t\t\t\treturn isFixed(this)\n\t\t\t\t\t? pos\n\t\t\t\t\t: toScreen(pos)\n\t\t\t},\n\n\t\t\tinspect() {\n\t\t\t\treturn `(${Math.round(this.pos.x)}, ${Math.round(this.pos.y)})`\n\t\t\t},\n\n\t\t\tdrawInspect() {\n\t\t\t\tdrawCircle({\n\t\t\t\t\tcolor: rgb(255, 0, 0),\n\t\t\t\t\tradius: 4 / getViewportScale(),\n\t\t\t\t})\n\t\t\t},\n\n\t\t}\n\n\t}\n\n\t// TODO: allow single number assignment\n\tfunction scale(...args: Vec2Args): ScaleComp {\n\t\tif (args.length === 0) {\n\t\t\treturn scale(1)\n\t\t}\n\t\treturn {\n\t\t\tid: \"scale\",\n\t\t\tscale: vec2(...args),\n\t\t\tscaleTo(...args: Vec2Args) {\n\t\t\t\tthis.scale = vec2(...args)\n\t\t\t},\n\t\t\tscaleBy(...args: Vec2Args) {\n\t\t\t\tthis.scale.scale(vec2(...args))\n\t\t\t},\n\t\t\tinspect() {\n\t\t\t\treturn `(${toFixed(this.scale.x, 2)}, ${toFixed(this.scale.y, 2)})`\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction rotate(r: number): RotateComp {\n\t\treturn {\n\t\t\tid: \"rotate\",\n\t\t\tangle: r ?? 0,\n\t\t\trotateBy(angle: number) {\n\t\t\t\tthis.angle += angle\n\t\t\t},\n\t\t\trotateTo(angle: number) {\n\t\t\t\tthis.angle = angle\n\t\t\t},\n\t\t\tinspect() {\n\t\t\t\treturn `${Math.round(this.angle)}`\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction color(...args): ColorComp {\n\t\treturn {\n\t\t\tid: \"color\",\n\t\t\tcolor: rgb(...args),\n\t\t\tinspect() {\n\t\t\t\treturn this.color.toString()\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction toFixed(n: number, f: number) {\n\t\treturn Number(n.toFixed(f))\n\t}\n\n\t// TODO: fadeIn here?\n\tfunction opacity(a: number): OpacityComp {\n\t\treturn {\n\t\t\tid: \"opacity\",\n\t\t\topacity: a ?? 1,\n\t\t\tinspect() {\n\t\t\t\treturn `${toFixed(this.opacity, 1)}`\n\t\t\t},\n\t\t\tfadeOut(time = 1, easeFunc = easings.linear): TweenController {\n\t\t\t\treturn tween(this.opacity, 0, time, (a) => this.opacity = a, easeFunc)\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction anchor(o: Anchor | Vec2): AnchorComp {\n\t\tif (!o) {\n\t\t\tthrow new Error(\"Please define an anchor\")\n\t\t}\n\t\treturn {\n\t\t\tid: \"anchor\",\n\t\t\tanchor: o,\n\t\t\tinspect() {\n\t\t\t\tif (typeof this.anchor === \"string\") {\n\t\t\t\t\treturn this.anchor\n\t\t\t\t} else {\n\t\t\t\t\treturn this.anchor.toString()\n\t\t\t\t}\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction z(z: number): ZComp {\n\t\treturn {\n\t\t\tid: \"z\",\n\t\t\tz: z,\n\t\t\tinspect() {\n\t\t\t\treturn `${this.z}`\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction follow(obj: GameObj, offset?: Vec2): FollowComp {\n\t\treturn {\n\t\t\tid: \"follow\",\n\t\t\trequire: [ \"pos\" ],\n\t\t\tfollow: {\n\t\t\t\tobj: obj,\n\t\t\t\toffset: offset ?? vec2(0),\n\t\t\t},\n\t\t\tadd(this: GameObj<FollowComp | PosComp>) {\n\t\t\t\tif (obj.exists()) {\n\t\t\t\t\tthis.pos = this.follow.obj.pos.add(this.follow.offset)\n\t\t\t\t}\n\t\t\t},\n\t\t\tupdate(this: GameObj<FollowComp | PosComp>) {\n\t\t\t\tif (obj.exists()) {\n\t\t\t\t\tthis.pos = this.follow.obj.pos.add(this.follow.offset)\n\t\t\t\t}\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction move(dir: number | Vec2, speed: number): EmptyComp {\n\t\tconst d = typeof dir === \"number\" ? Vec2.fromAngle(dir) : dir.unit()\n\t\treturn {\n\t\t\tid: \"move\",\n\t\t\trequire: [ \"pos\" ],\n\t\t\tupdate(this: GameObj<PosComp>) {\n\t\t\t\tthis.move(d.scale(speed))\n\t\t\t},\n\t\t}\n\t}\n\n\tconst DEF_OFFSCREEN_DIS = 200\n\n\tfunction offscreen(opt: OffScreenCompOpt = {}): OffScreenComp {\n\t\tconst distance = opt.distance ?? DEF_OFFSCREEN_DIS\n\t\tlet isOut = false\n\t\treturn {\n\t\t\tid: \"offscreen\",\n\t\t\trequire: [ \"pos\" ],\n\t\t\tisOffScreen(this: GameObj<PosComp>): boolean {\n\t\t\t\tconst pos = this.screenPos()\n\t\t\t\tconst screenRect = new Rect(vec2(0), width(), height())\n\t\t\t\treturn !testRectPoint(screenRect, pos)\n\t\t\t\t\t&& screenRect.sdistToPoint(pos) > distance * distance\n\t\t\t},\n\t\t\tonExitScreen(this: GameObj, action: () => void): EventController {\n\t\t\t\treturn this.on(\"exitView\", action)\n\t\t\t},\n\t\t\tonEnterScreen(this: GameObj, action: () => void): EventController {\n\t\t\t\treturn this.on(\"enterView\", action)\n\t\t\t},\n\t\t\tupdate(this: GameObj) {\n\t\t\t\tif (this.isOffScreen()) {\n\t\t\t\t\tif (!isOut) {\n\t\t\t\t\t\tthis.trigger(\"exitView\")\n\t\t\t\t\t\tisOut = true\n\t\t\t\t\t}\n\t\t\t\t\tif (opt.hide) this.hidden = true\n\t\t\t\t\tif (opt.pause) this.paused = true\n\t\t\t\t\tif (opt.destroy) this.destroy()\n\t\t\t\t} else {\n\t\t\t\t\tif (isOut) {\n\t\t\t\t\t\tthis.trigger(\"enterView\")\n\t\t\t\t\t\tisOut = false\n\t\t\t\t\t}\n\t\t\t\t\tif (opt.hide) this.hidden = false\n\t\t\t\t\tif (opt.pause) this.paused = false\n\t\t\t\t}\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction isFixed(obj: GameObj) {\n\t\tif (obj.fixed) return true\n\t\treturn obj.parent ? isFixed(obj.parent) : false\n\t}\n\n\tfunction area(opt: AreaCompOpt = {}): AreaComp {\n\n\t\tconst colliding = {}\n\t\tconst collidingThisFrame = new Set()\n\n\t\treturn {\n\n\t\t\tid: \"area\",\n\t\t\tcollisionIgnore: opt.collisionIgnore ?? [],\n\n\t\t\tadd(this: GameObj<AreaComp>) {\n\n\t\t\t\tif (this.area.cursor) {\n\t\t\t\t\tthis.onHover(() => app.setCursor(this.area.cursor))\n\t\t\t\t}\n\n\t\t\t\tthis.onCollideUpdate((obj, col) => {\n\t\t\t\t\tif (!colliding[obj.id]) {\n\t\t\t\t\t\tthis.trigger(\"collide\", obj, col)\n\t\t\t\t\t}\n\t\t\t\t\tcolliding[obj.id] = col\n\t\t\t\t\tcollidingThisFrame.add(obj.id)\n\t\t\t\t})\n\n\t\t\t},\n\n\t\t\tupdate(this: GameObj<AreaComp>) {\n\t\t\t\tfor (const id in colliding) {\n\t\t\t\t\tif (!collidingThisFrame.has(Number(id))) {\n\t\t\t\t\t\tthis.trigger(\"collideEnd\", colliding[id].target)\n\t\t\t\t\t\tdelete colliding[id]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcollidingThisFrame.clear()\n\t\t\t},\n\n\t\t\tdrawInspect(this: GameObj<AreaComp | AnchorComp | FixedComp>) {\n\n\t\t\t\tconst a = this.localArea()\n\n\t\t\t\tpushTransform()\n\t\t\t\tpushScale(this.area.scale)\n\t\t\t\tpushTranslate(this.area.offset)\n\n\t\t\t\tconst opts = {\n\t\t\t\t\toutline: {\n\t\t\t\t\t\twidth: 4 / getViewportScale(),\n\t\t\t\t\t\tcolor: rgb(0, 0, 255),\n\t\t\t\t\t},\n\t\t\t\t\tanchor: this.anchor,\n\t\t\t\t\tfill: false,\n\t\t\t\t\tfixed: isFixed(this),\n\t\t\t\t}\n\n\t\t\t\tif (a instanceof Rect) {\n\t\t\t\t\tdrawRect({\n\t\t\t\t\t\t...opts,\n\t\t\t\t\t\tpos: a.pos,\n\t\t\t\t\t\twidth: a.width,\n\t\t\t\t\t\theight: a.height,\n\t\t\t\t\t})\n\t\t\t\t} else if (a instanceof Polygon) {\n\t\t\t\t\tdrawPolygon({\n\t\t\t\t\t\t...opts,\n\t\t\t\t\t\tpts: a.pts,\n\t\t\t\t\t})\n\t\t\t\t} else if (a instanceof Circle) {\n\t\t\t\t\tdrawCircle({\n\t\t\t\t\t\t...opts,\n\t\t\t\t\t\tpos: a.center,\n\t\t\t\t\t\tradius: a.radius,\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tpopTransform()\n\n\t\t\t},\n\n\t\t\tarea: {\n\t\t\t\tshape: opt.shape ?? null,\n\t\t\t\tscale: opt.scale ? vec2(opt.scale) : vec2(1),\n\t\t\t\toffset: opt.offset ?? vec2(0),\n\t\t\t\tcursor: opt.cursor ?? null,\n\t\t\t},\n\n\t\t\tisClicked(): boolean {\n\t\t\t\treturn app.isMousePressed() && this.isHovering()\n\t\t\t},\n\n\t\t\tisHovering(this: GameObj) {\n\t\t\t\tconst mpos = isFixed(this) ? mousePos() : toWorld(mousePos())\n\t\t\t\treturn this.hasPoint(mpos)\n\t\t\t},\n\n\t\t\tcheckCollision(this: GameObj, other: GameObj<AreaComp>) {\n\t\t\t\treturn colliding[other.id] ?? null\n\t\t\t},\n\n\t\t\tgetCollisions() {\n\t\t\t\treturn Object.values(colliding)\n\t\t\t},\n\n\t\t\tisColliding(other: GameObj<AreaComp>) {\n\t\t\t\treturn Boolean(colliding[other.id])\n\t\t\t},\n\n\t\t\tisOverlapping(other) {\n\t\t\t\tconst col = colliding[other.id]\n\t\t\t\treturn col && col.hasOverlap()\n\t\t\t},\n\n\t\t\tonClick(this: GameObj<AreaComp>, f: () => void): EventController {\n\t\t\t\tconst e = app.onMousePress(\"left\", () => {\n\t\t\t\t\tif (this.isHovering()) {\n\t\t\t\t\t\tf()\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tthis.onDestroy(() => e.cancel())\n\t\t\t\treturn e\n\t\t\t},\n\n\t\t\tonHover(this: GameObj, action: () => void): EventController {\n\t\t\t\tlet hovering = false\n\t\t\t\treturn this.onUpdate(() => {\n\t\t\t\t\tif (!hovering) {\n\t\t\t\t\t\tif (this.isHovering()) {\n\t\t\t\t\t\t\thovering = true\n\t\t\t\t\t\t\taction()\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\thovering = this.isHovering()\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t},\n\n\t\t\tonHoverUpdate(this: GameObj, onHover: () => void): EventController {\n\t\t\t\treturn this.onUpdate(() => {\n\t\t\t\t\tif (this.isHovering()) {\n\t\t\t\t\t\tonHover()\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t},\n\n\t\t\tonHoverEnd(this: GameObj, action: () => void): EventController {\n\t\t\t\tlet hovering = false\n\t\t\t\treturn this.onUpdate(() => {\n\t\t\t\t\tif (hovering) {\n\t\t\t\t\t\tif (!this.isHovering()) {\n\t\t\t\t\t\t\thovering = false\n\t\t\t\t\t\t\taction()\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\thovering = this.isHovering()\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t},\n\n\t\t\tonCollide(\n\t\t\t\tthis: GameObj,\n\t\t\t\ttag: Tag | ((obj: GameObj, col?: Collision) => void),\n\t\t\t\tcb?: (obj: GameObj, col?: Collision) => void,\n\t\t\t): EventController {\n\t\t\t\tif (typeof tag === \"function\" && cb === undefined) {\n\t\t\t\t\treturn this.on(\"collide\", tag)\n\t\t\t\t} else if (typeof tag === \"string\") {\n\t\t\t\t\treturn this.onCollide((obj, col) => {\n\t\t\t\t\t\tif (obj.is(tag)) {\n\t\t\t\t\t\t\tcb(obj, col)\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonCollideUpdate(\n\t\t\t\tthis: GameObj<AreaComp>,\n\t\t\t\ttag: Tag | ((obj: GameObj, col?: Collision) => void),\n\t\t\t\tcb?: (obj: GameObj, col?: Collision) => void,\n\t\t\t): EventController {\n\t\t\t\tif (typeof tag === \"function\" && cb === undefined) {\n\t\t\t\t\treturn this.on(\"collideUpdate\", tag)\n\t\t\t\t} else if (typeof tag === \"string\") {\n\t\t\t\t\treturn this.on(\"collideUpdate\", (obj, col) => obj.is(tag) && cb(obj, col))\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonCollideEnd(\n\t\t\t\tthis: GameObj<AreaComp>,\n\t\t\t\ttag: Tag | ((obj: GameObj) => void),\n\t\t\t\tcb?: (obj: GameObj) => void,\n\t\t\t): EventController {\n\t\t\t\tif (typeof tag === \"function\" && cb === undefined) {\n\t\t\t\t\treturn this.on(\"collideEnd\", tag)\n\t\t\t\t} else if (typeof tag === \"string\") {\n\t\t\t\t\treturn this.on(\"collideEnd\", (obj) => obj.is(tag) && cb(obj))\n\t\t\t\t}\n\t\t\t},\n\n\t\t\thasPoint(pt: Vec2): boolean {\n\t\t\t\t// TODO: convert to pt to local space instead\n\t\t\t\treturn testPolygonPoint(this.worldArea(), pt)\n\t\t\t},\n\n\t\t\t// push an obj out of another if they're overlapped\n\t\t\tresolveCollision(this: GameObj<AreaComp | PosComp>, obj: GameObj<AreaComp>) {\n\t\t\t\tconst col = this.checkCollision(obj)\n\t\t\t\tif (col && !col.resolved) {\n\t\t\t\t\tthis.pos = this.pos.add(col.displacement)\n\t\t\t\t\tcol.resolved = true\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tlocalArea(this: GameObj<AreaComp | { renderArea(): Shape }>): Shape {\n\t\t\t\treturn this.area.shape\n\t\t\t\t\t? this.area.shape\n\t\t\t\t\t: this.renderArea()\n\t\t\t},\n\n\t\t\t// TODO: cache\n\t\t\tworldArea(this: GameObj<AreaComp | AnchorComp>): Polygon {\n\n\t\t\t\tconst localArea = this.localArea()\n\n\t\t\t\tif (!(localArea instanceof Polygon || localArea instanceof Rect)) {\n\t\t\t\t\tthrow new Error(\"Only support polygon and rect shapes for now\")\n\t\t\t\t}\n\n\t\t\t\tconst transform = this.transform\n\t\t\t\t\t.clone()\n\t\t\t\t\t.scale(vec2(this.area.scale ?? 1))\n\t\t\t\t\t.translate(this.area.offset)\n\n\t\t\t\tif (localArea instanceof Rect) {\n\t\t\t\t\tconst offset = anchorPt(this.anchor || DEF_ANCHOR)\n\t\t\t\t\t\t.add(1, 1)\n\t\t\t\t\t\t.scale(-0.5)\n\t\t\t\t\t\t.scale(localArea.width, localArea.height)\n\t\t\t\t\ttransform.translate(offset)\n\t\t\t\t}\n\n\t\t\t\treturn localArea.transform(transform) as Polygon\n\n\t\t\t},\n\n\t\t\tscreenArea(this: GameObj<AreaComp | FixedComp>): Polygon {\n\t\t\t\tconst area = this.worldArea()\n\t\t\t\tif (isFixed(this)) {\n\t\t\t\t\treturn area\n\t\t\t\t} else {\n\t\t\t\t\treturn area.transform(game.cam.transform)\n\t\t\t\t}\n\t\t\t},\n\n\t\t}\n\n\t}\n\n\tfunction getRenderProps(obj: GameObj<any>) {\n\t\treturn {\n\t\t\tcolor: obj.color,\n\t\t\topacity: obj.opacity,\n\t\t\tanchor: obj.anchor,\n\t\t\toutline: obj.outline,\n\t\t\tshader: obj.shader,\n\t\t\tuniform: obj.uniform,\n\t\t}\n\t}\n\n\t// TODO: clean\n\tfunction sprite(\n\t\tsrc: string | SpriteData | Asset<SpriteData>,\n\t\topt: SpriteCompOpt = {},\n\t): SpriteComp {\n\n\t\tlet spriteData: SpriteData | null = null\n\t\tlet curAnim: SpriteCurAnim | null = null\n\t\t// 1  - from small index to large index\n\t\t// -1 - reverse\n\t\tlet curAnimDir: -1 | 1 | null = null\n\t\tconst spriteLoadedEvent = new Event<[SpriteData]>()\n\n\t\tif (!src) {\n\t\t\tthrow new Error(\"Please pass the resource name or data to sprite()\")\n\t\t}\n\n\t\tconst calcTexScale = (tex: Texture, q: Quad, w?: number, h?: number): Vec2 => {\n\t\t\tconst scale = vec2(1, 1)\n\t\t\tif (w && h) {\n\t\t\t\tscale.x = w / (tex.width * q.w)\n\t\t\t\tscale.y = h / (tex.height * q.h)\n\t\t\t} else if (w) {\n\t\t\t\tscale.x = w / (tex.width * q.w)\n\t\t\t\tscale.y = scale.x\n\t\t\t} else if (h) {\n\t\t\t\tscale.y = h / (tex.height * q.h)\n\t\t\t\tscale.x = scale.y\n\t\t\t}\n\t\t\treturn scale\n\t\t}\n\n\t\treturn {\n\n\t\t\tid: \"sprite\",\n\t\t\t// TODO: allow update\n\t\t\twidth: 0,\n\t\t\theight: 0,\n\t\t\tframe: opt.frame || 0,\n\t\t\tquad: opt.quad || new Quad(0, 0, 1, 1),\n\t\t\tanimSpeed: opt.animSpeed ?? 1,\n\t\t\tflipX: opt.flipX ?? false,\n\t\t\tflipY: opt.flipY ?? false,\n\n\t\t\tdraw(this: GameObj<SpriteComp>) {\n\n\t\t\t\tif (!spriteData) return\n\n\t\t\t\tconst q = spriteData.frames[this.frame ?? 0]\n\n\t\t\t\tif (!q) {\n\t\t\t\t\tthrow new Error(`Frame not found: ${this.frame ?? 0}`)\n\t\t\t\t}\n\n\t\t\t\tif (spriteData.slice9) {\n\t\t\t\t\t// TODO: tile\n\t\t\t\t\t// TODO: use scale or width / height, or both?\n\t\t\t\t\tconst { left, right, top, bottom } = spriteData.slice9\n\t\t\t\t\tconst tw = spriteData.tex.width * q.w\n\t\t\t\t\tconst th = spriteData.tex.height * q.h\n\t\t\t\t\tconst iw = this.width - left - right\n\t\t\t\t\tconst ih = this.height - top - bottom\n\t\t\t\t\tconst w1 = left / tw\n\t\t\t\t\tconst w3 = right / tw\n\t\t\t\t\tconst w2 = 1 - w1 - w3\n\t\t\t\t\tconst h1 = top / th\n\t\t\t\t\tconst h3 = bottom / th\n\t\t\t\t\tconst h2 = 1 - h1 - h3\n\t\t\t\t\tconst quads = [\n\t\t\t\t\t\t// uv\n\t\t\t\t\t\tquad(0,       0,       w1, h1),\n\t\t\t\t\t\tquad(w1,      0,       w2, h1),\n\t\t\t\t\t\tquad(w1 + w2, 0,       w3, h1),\n\t\t\t\t\t\tquad(0,       h1,      w1, h2),\n\t\t\t\t\t\tquad(w1,      h1,      w2, h2),\n\t\t\t\t\t\tquad(w1 + w2, h1,      w3, h2),\n\t\t\t\t\t\tquad(0,       h1 + h2, w1, h3),\n\t\t\t\t\t\tquad(w1,      h1 + h2, w2, h3),\n\t\t\t\t\t\tquad(w1 + w2, h1 + h2, w3, h3),\n\t\t\t\t\t\t// transform\n\t\t\t\t\t\tquad(0,         0,        left,  top),\n\t\t\t\t\t\tquad(left,      0,        iw,    top),\n\t\t\t\t\t\tquad(left + iw, 0,        right, top),\n\t\t\t\t\t\tquad(0,         top,      left,  ih),\n\t\t\t\t\t\tquad(left,      top,      iw,    ih),\n\t\t\t\t\t\tquad(left + iw, top,      right, ih),\n\t\t\t\t\t\tquad(0,         top + ih, left,  bottom),\n\t\t\t\t\t\tquad(left,      top + ih, iw,    bottom),\n\t\t\t\t\t\tquad(left + iw, top + ih, right, bottom),\n\t\t\t\t\t]\n\t\t\t\t\tfor (let i = 0; i < 9; i++) {\n\t\t\t\t\t\tconst uv = quads[i]\n\t\t\t\t\t\tconst transform = quads[i + 9]\n\t\t\t\t\t\tdrawTexture(Object.assign(getRenderProps(this), {\n\t\t\t\t\t\t\tpos: transform.pos(),\n\t\t\t\t\t\t\ttex: spriteData.tex,\n\t\t\t\t\t\t\tquad: q.scale(uv),\n\t\t\t\t\t\t\tflipX: this.flipX,\n\t\t\t\t\t\t\tflipY: this.flipY,\n\t\t\t\t\t\t\ttiled: opt.tiled,\n\t\t\t\t\t\t\twidth: transform.w,\n\t\t\t\t\t\t\theight: transform.h,\n\t\t\t\t\t\t}))\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\t\t\t\t\tdrawTexture(Object.assign(getRenderProps(this), {\n\t\t\t\t\t\ttex: spriteData.tex,\n\t\t\t\t\t\tquad: q,\n\t\t\t\t\t\tflipX: this.flipX,\n\t\t\t\t\t\tflipY: this.flipY,\n\t\t\t\t\t\ttiled: opt.tiled,\n\t\t\t\t\t\twidth: this.width,\n\t\t\t\t\t\theight: this.height,\n\t\t\t\t\t}))\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tadd(this: GameObj<SpriteComp>) {\n\n\t\t\t\tconst setSpriteData = (spr) => {\n\n\t\t\t\t\tlet q = spr.frames[0].clone()\n\n\t\t\t\t\tif (opt.quad) {\n\t\t\t\t\t\tq = q.scale(opt.quad)\n\t\t\t\t\t}\n\n\t\t\t\t\tconst scale = calcTexScale(spr.tex, q, opt.width, opt.height)\n\n\t\t\t\t\tthis.width = spr.tex.width * q.w * scale.x\n\t\t\t\t\tthis.height = spr.tex.height * q.h * scale.y\n\n\t\t\t\t\tif (opt.anim) {\n\t\t\t\t\t\tthis.play(opt.anim)\n\t\t\t\t\t}\n\n\t\t\t\t\tspriteData = spr\n\t\t\t\t\tspriteLoadedEvent.trigger(spriteData)\n\n\t\t\t\t}\n\n\t\t\t\tconst spr = resolveSprite(src)\n\n\t\t\t\tif (spr) {\n\t\t\t\t\tspr.onLoad(setSpriteData)\n\t\t\t\t} else {\n\t\t\t\t\tonLoad(() => setSpriteData(resolveSprite(src).data))\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tupdate(this: GameObj<SpriteComp>) {\n\n\t\t\t\tif (!curAnim) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tconst anim = spriteData.anims[curAnim.name]\n\n\t\t\t\tif (typeof anim === \"number\") {\n\t\t\t\t\tthis.frame = anim\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tif (anim.speed === 0) {\n\t\t\t\t\tthrow new Error(\"Sprite anim speed cannot be 0\")\n\t\t\t\t}\n\n\t\t\t\tcurAnim.timer += dt() * this.animSpeed\n\n\t\t\t\tif (curAnim.timer >= (1 / curAnim.speed)) {\n\n\t\t\t\t\tcurAnim.timer = 0\n\t\t\t\t\tthis.frame += curAnimDir\n\n\t\t\t\t\tif (this.frame < Math.min(anim.from, anim.to) ||\n\t\t\t\t\t\tthis.frame > Math.max(anim.from, anim.to)) {\n\t\t\t\t\t\tif (curAnim.loop) {\n\t\t\t\t\t\t\tif (curAnim.pingpong) {\n\t\t\t\t\t\t\t\tthis.frame -= curAnimDir\n\t\t\t\t\t\t\t\tcurAnimDir *= -1\n\t\t\t\t\t\t\t\tthis.frame += curAnimDir\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.frame = anim.from\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.frame = anim.to\n\t\t\t\t\t\t\tcurAnim.onEnd()\n\t\t\t\t\t\t\tthis.stop()\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tplay(this: GameObj<SpriteComp>, name: string, opt: SpriteAnimPlayOpt = {}) {\n\n\t\t\t\tif (!spriteData) {\n\t\t\t\t\tspriteLoadedEvent.add(() => this.play(name, opt))\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tconst anim = spriteData.anims[name]\n\n\t\t\t\tif (anim === undefined) {\n\t\t\t\t\tthrow new Error(`Anim not found: ${name}`)\n\t\t\t\t}\n\n\t\t\t\tif (curAnim) {\n\t\t\t\t\tthis.stop()\n\t\t\t\t}\n\n\t\t\t\tcurAnim = typeof anim === \"number\"\n\t\t\t\t\t? {\n\t\t\t\t\t\tname: name,\n\t\t\t\t\t\ttimer: 0,\n\t\t\t\t\t\tloop: false,\n\t\t\t\t\t\tpingpong: false,\n\t\t\t\t\t\tspeed: 0,\n\t\t\t\t\t\tonEnd: () => {},\n\t\t\t\t\t}\n\t\t\t\t\t: {\n\t\t\t\t\t\tname: name,\n\t\t\t\t\t\ttimer: 0,\n\t\t\t\t\t\tloop: opt.loop ?? anim.loop ?? false,\n\t\t\t\t\t\tpingpong: opt.pingpong ?? anim.pingpong ?? false,\n\t\t\t\t\t\tspeed: opt.speed ?? anim.speed ?? 10,\n\t\t\t\t\t\tonEnd: opt.onEnd ?? (() => {}),\n\t\t\t\t\t}\n\n\t\t\t\tcurAnimDir = typeof anim === \"number\"\n\t\t\t\t\t? null\n\t\t\t\t\t: anim.from < anim.to ? 1 : -1\n\n\t\t\t\tthis.frame = typeof anim === \"number\"\n\t\t\t\t\t? anim\n\t\t\t\t\t: anim.from\n\n\t\t\t\tthis.trigger(\"animStart\", name)\n\n\t\t\t},\n\n\t\t\tstop(this: GameObj<SpriteComp>) {\n\t\t\t\tif (!curAnim) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tconst prevAnim = curAnim.name\n\t\t\t\tcurAnim = null\n\t\t\t\tthis.trigger(\"animEnd\", prevAnim)\n\t\t\t},\n\n\t\t\tnumFrames() {\n\t\t\t\treturn spriteData?.frames.length ?? 0\n\t\t\t},\n\n\t\t\tcurAnim() {\n\t\t\t\treturn curAnim?.name\n\t\t\t},\n\n\t\t\tonAnimEnd(\n\t\t\t\tthis: GameObj<SpriteComp>,\n\t\t\t\taction: (name: string) => void,\n\t\t\t): EventController {\n\t\t\t\treturn this.on(\"animEnd\", action)\n\t\t\t},\n\n\t\t\tonAnimStart(\n\t\t\t\tthis: GameObj<SpriteComp>,\n\t\t\t\taction: (name: string) => void,\n\t\t\t): EventController {\n\t\t\t\treturn this.on(\"animStart\", action)\n\t\t\t},\n\n\t\t\trenderArea() {\n\t\t\t\treturn new Rect(vec2(0), this.width, this.height)\n\t\t\t},\n\n\t\t\tinspect() {\n\t\t\t\tif (typeof src === \"string\") {\n\t\t\t\t\treturn `\"${src}\"`\n\t\t\t\t}\n\t\t\t},\n\n\t\t}\n\n\t}\n\n\tfunction text(t: string, opt: TextCompOpt = {}): TextComp {\n\n\t\tfunction update(obj: GameObj<TextComp | any>) {\n\n\t\t\tconst ftext = formatText(Object.assign(getRenderProps(obj), {\n\t\t\t\ttext: obj.text + \"\",\n\t\t\t\tsize: obj.textSize,\n\t\t\t\tfont: obj.font,\n\t\t\t\twidth: opt.width && obj.width,\n\t\t\t\talign: obj.align,\n\t\t\t\tletterSpacing: obj.letterSpacing,\n\t\t\t\tlineSpacing: obj.lineSpacing,\n\t\t\t\t// TODO: shouldn't run when object / ancestor is paused\n\t\t\t\ttransform: obj.textTransform,\n\t\t\t\tstyles: obj.textStyles,\n\t\t\t}))\n\n\t\t\tif (!opt.width) {\n\t\t\t\tobj.width = ftext.width / (obj.scale?.x || 1)\n\t\t\t}\n\n\t\t\tobj.height = ftext.height / (obj.scale?.y || 1)\n\n\t\t\treturn ftext\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tid: \"text\",\n\t\t\ttext: t,\n\t\t\ttextSize: opt.size ?? DEF_TEXT_SIZE,\n\t\t\tfont: opt.font,\n\t\t\twidth: opt.width,\n\t\t\theight: 0,\n\t\t\talign: opt.align,\n\t\t\tlineSpacing: opt.lineSpacing,\n\t\t\tletterSpacing: opt.letterSpacing,\n\t\t\ttextTransform: opt.transform,\n\t\t\ttextStyles: opt.styles,\n\n\t\t\tadd(this: GameObj<TextComp>) {\n\t\t\t\tonLoad(() => update(this))\n\t\t\t},\n\n\t\t\tdraw(this: GameObj<TextComp>) {\n\t\t\t\tdrawFormattedText(update(this))\n\t\t\t},\n\n\t\t\trenderArea() {\n\t\t\t\treturn new Rect(vec2(0), this.width, this.height)\n\t\t\t},\n\n\t\t}\n\n\t}\n\n\tfunction rect(w: number, h: number, opt: RectCompOpt = {}): RectComp {\n\t\treturn {\n\t\t\tid: \"rect\",\n\t\t\twidth: w,\n\t\t\theight: h,\n\t\t\tradius: opt.radius || 0,\n\t\t\tdraw(this: GameObj<RectComp>) {\n\t\t\t\tdrawRect(Object.assign(getRenderProps(this), {\n\t\t\t\t\twidth: this.width,\n\t\t\t\t\theight: this.height,\n\t\t\t\t\tradius: this.radius,\n\t\t\t\t}))\n\t\t\t},\n\t\t\trenderArea() {\n\t\t\t\treturn new Rect(vec2(0), this.width, this.height)\n\t\t\t},\n\t\t\tinspect() {\n\t\t\t\treturn `${Math.ceil(this.width)}, ${Math.ceil(this.height)}`\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction uvquad(w: number, h: number): UVQuadComp {\n\t\treturn {\n\t\t\tid: \"rect\",\n\t\t\twidth: w,\n\t\t\theight: h,\n\t\t\tdraw(this: GameObj<UVQuadComp>) {\n\t\t\t\tdrawUVQuad(Object.assign(getRenderProps(this), {\n\t\t\t\t\twidth: this.width,\n\t\t\t\t\theight: this.height,\n\t\t\t\t}))\n\t\t\t},\n\t\t\trenderArea() {\n\t\t\t\treturn new Rect(vec2(0), this.width, this.height)\n\t\t\t},\n\t\t\tinspect() {\n\t\t\t\treturn `${Math.ceil(this.width)}, ${Math.ceil(this.height)}`\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction circle(radius: number): CircleComp {\n\t\treturn {\n\t\t\tid: \"circle\",\n\t\t\tradius: radius,\n\t\t\tdraw(this: GameObj<CircleComp>) {\n\t\t\t\tdrawCircle(Object.assign(getRenderProps(this), {\n\t\t\t\t\tradius: this.radius,\n\t\t\t\t}))\n\t\t\t},\n\t\t\trenderArea(this: GameObj<AnchorComp | CircleComp>) {\n\t\t\t\treturn new Rect(new Vec2(this.anchor ? 0 : -this.radius), this.radius * 2, this.radius * 2)\n\t\t\t},\n\t\t\tinspect() {\n\t\t\t\treturn `${Math.ceil(this.radius)}`\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction outline(width: number = 1, color: Color = rgb(0, 0, 0)): OutlineComp {\n\t\treturn {\n\t\t\tid: \"outline\",\n\t\t\toutline: {\n\t\t\t\twidth,\n\t\t\t\tcolor,\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction timer(): TimerComp {\n\t\treturn {\n\t\t\tid: \"timer\",\n\t\t\twait(this: GameObj<TimerComp>, time: number, action?: () => void): TimerController {\n\t\t\t\tconst actions = []\n\t\t\t\tif (action) actions.push(action)\n\t\t\t\tlet t = 0\n\t\t\t\tconst ev = this.onUpdate(() => {\n\t\t\t\t\tt += dt()\n\t\t\t\t\tif (t >= time) {\n\t\t\t\t\t\tactions.forEach((f) => f())\n\t\t\t\t\t\tev.cancel()\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\treturn {\n\t\t\t\t\tget paused() {\n\t\t\t\t\t\treturn ev.paused\n\t\t\t\t\t},\n\t\t\t\t\tset paused(p) {\n\t\t\t\t\t\tev.paused = p\n\t\t\t\t\t},\n\t\t\t\t\tcancel: ev.cancel,\n\t\t\t\t\tonEnd(action) {\n\t\t\t\t\t\tactions.push(action)\n\t\t\t\t\t},\n\t\t\t\t\tthen(action) {\n\t\t\t\t\t\tthis.onEnd(action)\n\t\t\t\t\t\treturn this\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t},\n\t\t\tloop(t: number, action: () => void): EventController {\n\t\t\t\tlet curTimer: null | TimerController = null\n\t\t\t\tconst newAction = () => {\n\t\t\t\t\t// TODO: should f be execute right away as loop() is called?\n\t\t\t\t\tcurTimer = this.wait(t, newAction)\n\t\t\t\t\taction()\n\t\t\t\t}\n\t\t\t\tcurTimer = this.wait(0, newAction)\n\t\t\t\treturn {\n\t\t\t\t\tget paused() {\n\t\t\t\t\t\treturn curTimer.paused\n\t\t\t\t\t},\n\t\t\t\t\tset paused(p) {\n\t\t\t\t\t\tcurTimer.paused = p\n\t\t\t\t\t},\n\t\t\t\t\tcancel: () => curTimer.cancel(),\n\t\t\t\t}\n\t\t\t},\n\t\t\ttween<V extends LerpValue>(\n\t\t\t\tthis: GameObj<TimerComp>,\n\t\t\t\tfrom: V,\n\t\t\t\tto: V,\n\t\t\t\tduration: number,\n\t\t\t\tsetValue: (value: V) => void,\n\t\t\t\teaseFunc = easings.linear,\n\t\t\t) {\n\t\t\t\tlet curTime = 0\n\t\t\t\tconst onEndEvents: Array<() => void> = []\n\t\t\t\tconst ev = this.onUpdate(() => {\n\t\t\t\t\tcurTime += dt()\n\t\t\t\t\tconst t = Math.min(curTime / duration, 1)\n\t\t\t\t\tsetValue(lerp(from, to, easeFunc(t)))\n\t\t\t\t\tif (t === 1) {\n\t\t\t\t\t\tev.cancel()\n\t\t\t\t\t\tsetValue(to)\n\t\t\t\t\t\tonEndEvents.forEach((action) => action())\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\treturn {\n\t\t\t\t\tget paused() {\n\t\t\t\t\t\treturn ev.paused\n\t\t\t\t\t},\n\t\t\t\t\tset paused(p) {\n\t\t\t\t\t\tev.paused = p\n\t\t\t\t\t},\n\t\t\t\t\tonEnd(action: () => void) {\n\t\t\t\t\t\tonEndEvents.push(action)\n\t\t\t\t\t},\n\t\t\t\t\tthen(action: () => void) {\n\t\t\t\t\t\tthis.onEnd(action)\n\t\t\t\t\t\treturn this\n\t\t\t\t\t},\n\t\t\t\t\tcancel() {\n\t\t\t\t\t\tev.cancel()\n\t\t\t\t\t},\n\t\t\t\t\tfinish() {\n\t\t\t\t\t\tev.cancel()\n\t\t\t\t\t\tsetValue(to)\n\t\t\t\t\t\tonEndEvents.forEach((action) => action())\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t},\n\t\t}\n\t}\n\n\t// maximum y velocity with body()\n\tconst DEF_JUMP_FORCE = 640\n\tconst MAX_VEL = 65536\n\n\t// TODO: land on wall\n\tfunction body(opt: BodyCompOpt = {}): BodyComp {\n\n\t\tconst vel = vec2(0)\n\t\tlet curPlatform: GameObj<PosComp | AreaComp | BodyComp> | null = null\n\t\tlet lastPlatformPos = null\n\t\tlet wantFall = false\n\n\t\treturn {\n\n\t\t\tid: \"body\",\n\t\t\trequire: [ \"pos\", \"area\" ],\n\t\t\tjumpForce: opt.jumpForce ?? DEF_JUMP_FORCE,\n\t\t\tgravityScale: opt.gravityScale ?? 1,\n\t\t\tisStatic: opt.isStatic ?? false,\n\t\t\t// TODO: prefer density * area()\n\t\t\tmass: opt.mass ?? 1,\n\n\t\t\tadd(this: GameObj<PosComp | BodyComp | AreaComp>) {\n\n\t\t\t\tif (this.mass === 0) {\n\t\t\t\t\tthrow new Error(\"Can't set body mass to 0\")\n\t\t\t\t}\n\n\t\t\t\t// static vs static: don't resolve\n\t\t\t\t// static vs non-static: always resolve non-static\n\t\t\t\t// non-static vs non-static: resolve the first one\n\t\t\t\tthis.onCollideUpdate((other: GameObj<PosComp | BodyComp>, col) => {\n\n\t\t\t\t\tif (!other.is(\"body\")) {\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\n\t\t\t\t\tif (col.resolved) {\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.trigger(\"beforePhysicsResolve\", col)\n\t\t\t\t\tother.trigger(\"beforePhysicsResolve\", col.reverse())\n\n\t\t\t\t\t// user can mark 'resolved' in beforePhysicsResolve to stop a resolution\n\t\t\t\t\tif (col.resolved) {\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.isStatic && other.isStatic) {\n\t\t\t\t\t\treturn\n\t\t\t\t\t} else if (!this.isStatic && !other.isStatic) {\n\t\t\t\t\t\t// TODO: update all children transform?\n\t\t\t\t\t\tconst tmass = this.mass + other.mass\n\t\t\t\t\t\tthis.pos = this.pos.add(col.displacement.scale(other.mass / tmass))\n\t\t\t\t\t\tother.pos = other.pos.add(col.displacement.scale(-this.mass / tmass))\n\t\t\t\t\t\tthis.transform = calcTransform(this)\n\t\t\t\t\t\tother.transform = calcTransform(other)\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// if one is static and on is not, resolve the non static one\n\t\t\t\t\t\tconst col2 = (!this.isStatic && other.isStatic) ? col : col.reverse()\n\t\t\t\t\t\tcol2.source.pos = col2.source.pos.add(col2.displacement)\n\t\t\t\t\t\tcol2.source.transform = calcTransform(col2.source)\n\t\t\t\t\t}\n\n\t\t\t\t\tcol.resolved = true\n\t\t\t\t\tthis.trigger(\"physicsResolve\", col)\n\t\t\t\t\tother.trigger(\"physicsResolve\", col.reverse())\n\n\t\t\t\t})\n\n\t\t\t\tthis.onPhysicsResolve((col) => {\n\t\t\t\t\tif (game.gravity) {\n\t\t\t\t\t\tif (col.isBottom() && this.isFalling()) {\n\t\t\t\t\t\t\tvel.y = 0\n\t\t\t\t\t\t\tcurPlatform = col.target as GameObj<PosComp | BodyComp | AreaComp>\n\t\t\t\t\t\t\tlastPlatformPos = col.target.pos\n\t\t\t\t\t\t\tif (wantFall) {\n\t\t\t\t\t\t\t\twantFall = false\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.trigger(\"ground\", curPlatform)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (col.isTop() && this.isJumping()) {\n\t\t\t\t\t\t\tvel.y = 0\n\t\t\t\t\t\t\tthis.trigger(\"headbutt\", col.target)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t},\n\n\t\t\tupdate(this: GameObj<PosComp | BodyComp | AreaComp>) {\n\n\t\t\t\tif (!game.gravity) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tif (this.isStatic) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tif (wantFall) {\n\t\t\t\t\tcurPlatform = null\n\t\t\t\t\tlastPlatformPos = null\n\t\t\t\t\tthis.trigger(\"fallOff\")\n\t\t\t\t\twantFall = false\n\t\t\t\t}\n\n\t\t\t\tif (curPlatform) {\n\t\t\t\t\tif (\n\t\t\t\t\t\t!this.isOverlapping(curPlatform)\n\t\t\t\t\t\t|| !curPlatform.exists()\n\t\t\t\t\t\t|| !curPlatform.is(\"body\")\n\t\t\t\t\t) {\n\t\t\t\t\t\twantFall = true\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t!curPlatform.pos.eq(lastPlatformPos)\n\t\t\t\t\t\t\t&& opt.stickToPlatform !== false\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tthis.moveBy(curPlatform.pos.sub(lastPlatformPos))\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlastPlatformPos = curPlatform.pos\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst prevVelY = vel.y\n\t\t\t\tvel.y += game.gravity * this.gravityScale * dt()\n\t\t\t\tvel.y = Math.min(vel.y, opt.maxVelocity ?? MAX_VEL)\n\t\t\t\tif (prevVelY < 0 && vel.y >= 0) {\n\t\t\t\t\tthis.trigger(\"fall\")\n\t\t\t\t}\n\t\t\t\tthis.move(vel)\n\n\t\t\t},\n\n\t\t\tonPhysicsResolve(this: GameObj, action) {\n\t\t\t\treturn this.on(\"physicsResolve\", action)\n\t\t\t},\n\n\t\t\tonBeforePhysicsResolve(this: GameObj, action) {\n\t\t\t\treturn this.on(\"beforePhysicsResolve\", action)\n\t\t\t},\n\n\t\t\tcurPlatform(): GameObj | null {\n\t\t\t\treturn curPlatform\n\t\t\t},\n\n\t\t\tisGrounded() {\n\t\t\t\treturn curPlatform !== null\n\t\t\t},\n\n\t\t\tisFalling(): boolean {\n\t\t\t\treturn vel.y > 0\n\t\t\t},\n\n\t\t\tisJumping(): boolean {\n\t\t\t\treturn vel.y < 0\n\t\t\t},\n\n\t\t\tjump(force: number) {\n\t\t\t\tcurPlatform = null\n\t\t\t\tlastPlatformPos = null\n\t\t\t\tvel.y = -force || -this.jumpForce\n\t\t\t},\n\n\t\t\tonGround(this: GameObj, action: () => void): EventController {\n\t\t\t\treturn this.on(\"ground\", action)\n\t\t\t},\n\n\t\t\tonFall(this: GameObj, action: () => void): EventController {\n\t\t\t\treturn this.on(\"fall\", action)\n\t\t\t},\n\n\t\t\tonFallOff(this: GameObj, action: () => void): EventController {\n\t\t\t\treturn this.on(\"fallOff\", action)\n\t\t\t},\n\n\t\t\tonHeadbutt(this: GameObj, action: () => void): EventController {\n\t\t\t\treturn this.on(\"headbutt\", action)\n\t\t\t},\n\n\t\t}\n\n\t}\n\n\tfunction doubleJump(numJumps: number = 2): DoubleJumpComp {\n\t\tlet jumpsLeft = numJumps\n\t\treturn {\n\t\t\tid: \"doubleJump\",\n\t\t\trequire: [ \"body\" ],\n\t\t\tnumJumps: numJumps,\n\t\t\tadd(this: GameObj<BodyComp | DoubleJumpComp>) {\n\t\t\t\tthis.onGround(() => {\n\t\t\t\t\tjumpsLeft = this.numJumps\n\t\t\t\t})\n\t\t\t},\n\t\t\tdoubleJump(this: GameObj<BodyComp | DoubleJumpComp>, force?: number) {\n\t\t\t\tif (jumpsLeft <= 0) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tif (jumpsLeft < this.numJumps) {\n\t\t\t\t\tthis.trigger(\"doubleJump\")\n\t\t\t\t}\n\t\t\t\tjumpsLeft--\n\t\t\t\tthis.jump(force)\n\t\t\t},\n\t\t\tonDoubleJump(this: GameObj, action: () => void): EventController {\n\t\t\t\treturn this.on(\"doubleJump\", action)\n\t\t\t},\n\t\t\tinspect(this: GameObj<BodyComp | DoubleJumpComp>) {\n\t\t\t\treturn `${jumpsLeft}`\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction shader(id: string, uniform?: Uniform | (() => Uniform)): ShaderComp {\n\t\treturn {\n\t\t\tid: \"shader\",\n\t\t\tshader: id,\n\t\t\t...(typeof uniform === \"function\" ? {\n\t\t\t\tuniform: uniform(),\n\t\t\t\tupdate() {\n\t\t\t\t\tthis.uniform = uniform()\n\t\t\t\t},\n\t\t\t} : {\n\t\t\t\tuniform: uniform,\n\t\t\t}),\n\t\t}\n\t}\n\n\t// TODO: all children should be fixed\n\tfunction fixed(): FixedComp {\n\t\treturn {\n\t\t\tid: \"fixed\",\n\t\t\tfixed: true,\n\t\t}\n\t}\n\n\tfunction stay(scenesToStay?: string[]): StayComp {\n\t\treturn {\n\t\t\tid: \"stay\",\n\t\t\tstay: true,\n\t\t\tscenesToStay: scenesToStay,\n\t\t}\n\t}\n\n\tfunction health(hp: number): HealthComp {\n\t\tif (hp == null) {\n\t\t\tthrow new Error(\"health() requires the initial amount of hp\")\n\t\t}\n\t\tconst maxHP = hp\n\t\treturn {\n\t\t\tid: \"health\",\n\t\t\thurt(this: GameObj, n: number = 1) {\n\t\t\t\tthis.setHP(hp - n)\n\t\t\t\tthis.trigger(\"hurt\", n)\n\t\t\t},\n\t\t\theal(this: GameObj, n: number = 1) {\n\t\t\t\tthis.setHP(hp + n)\n\t\t\t\tthis.trigger(\"heal\", n)\n\t\t\t},\n\t\t\thp(): number {\n\t\t\t\treturn hp\n\t\t\t},\n\t\t\tmaxHP(): number {\n\t\t\t\treturn maxHP\n\t\t\t},\n\t\t\tsetHP(this: GameObj, n: number) {\n\t\t\t\thp = n\n\t\t\t\tif (hp <= 0) {\n\t\t\t\t\tthis.trigger(\"death\")\n\t\t\t\t}\n\t\t\t},\n\t\t\tonHurt(this: GameObj, action: (amount?: number) => void): EventController {\n\t\t\t\treturn this.on(\"hurt\", action)\n\t\t\t},\n\t\t\tonHeal(this: GameObj, action: (amount?: number) => void): EventController {\n\t\t\t\treturn this.on(\"heal\", action)\n\t\t\t},\n\t\t\tonDeath(this: GameObj, action: () => void): EventController {\n\t\t\t\treturn this.on(\"death\", action)\n\t\t\t},\n\t\t\tinspect() {\n\t\t\t\treturn `${hp}`\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction lifespan(time: number, opt: LifespanCompOpt = {}): EmptyComp {\n\t\tif (time == null) {\n\t\t\tthrow new Error(\"lifespan() requires time\")\n\t\t}\n\t\tconst fade = opt.fade ?? 0\n\t\treturn {\n\t\t\tid: \"lifespan\",\n\t\t\tasync add(this: GameObj<OpacityComp>) {\n\t\t\t\tawait wait(time)\n\t\t\t\t// TODO: this secretively requires opacity comp, make opacity on every game obj?\n\t\t\t\tif (fade > 0 && this.opacity) {\n\t\t\t\t\tawait tween(this.opacity, 0, fade, (a) => this.opacity = a, easings.linear)\n\t\t\t\t}\n\t\t\t\tthis.destroy()\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction state(\n\t\tinitState: string,\n\t\tstateList?: string[],\n\t\ttransitions?: Record<string, string | string[]>,\n\t): StateComp {\n\n\t\tif (!initState) {\n\t\t\tthrow new Error(\"state() requires an initial state\")\n\t\t}\n\n\t\tconst events = {}\n\n\t\tfunction initStateEvents(state: string) {\n\t\t\tif (!events[state]) {\n\t\t\t\tevents[state] = {\n\t\t\t\t\tenter: new Event(),\n\t\t\t\t\tend: new Event(),\n\t\t\t\t\tupdate: new Event(),\n\t\t\t\t\tdraw: new Event(),\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction on(event, state, action) {\n\t\t\tinitStateEvents(state)\n\t\t\treturn events[state][event].add(action)\n\t\t}\n\n\t\tfunction trigger(event, state, ...args) {\n\t\t\tinitStateEvents(state)\n\t\t\tevents[state][event].trigger(...args)\n\t\t}\n\n\t\tlet didFirstEnter = false\n\n\t\treturn {\n\n\t\t\tid: \"state\",\n\t\t\tstate: initState,\n\n\t\t\tenterState(state: string, ...args) {\n\n\t\t\t\tdidFirstEnter = true\n\n\t\t\t\tif (stateList && !stateList.includes(state)) {\n\t\t\t\t\tthrow new Error(`State not found: ${state}`)\n\t\t\t\t}\n\n\t\t\t\tconst oldState = this.state\n\n\t\t\t\tif (transitions) {\n\n\t\t\t\t\t// check if the transition is legal, if transition graph is defined\n\t\t\t\t\tif (!transitions?.[oldState]) {\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\n\t\t\t\t\tconst available = typeof transitions[oldState] === \"string\"\n\t\t\t\t\t\t? [transitions[oldState]]\n\t\t\t\t\t\t: transitions[oldState] as string[]\n\n\t\t\t\t\tif (!available.includes(state)) {\n\t\t\t\t\t\tthrow new Error(`Cannot transition state from \"${oldState}\" to \"${state}\". Available transitions: ${available.map((s) => `\"${s}\"`).join(\", \")}`)\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\ttrigger(\"end\", oldState, ...args)\n\t\t\t\tthis.state = state\n\t\t\t\ttrigger(\"enter\", state, ...args)\n\t\t\t\ttrigger(\"enter\", `${oldState} -> ${state}`, ...args)\n\n\t\t\t},\n\n\t\t\tonStateTransition(from: string, to: string, action: () => void): EventController {\n\t\t\t\treturn on(\"enter\", `${from} -> ${to}`, action)\n\t\t\t},\n\n\t\t\tonStateEnter(state: string, action: () => void): EventController {\n\t\t\t\treturn on(\"enter\", state, action)\n\t\t\t},\n\n\t\t\tonStateUpdate(state: string, action: () => void): EventController {\n\t\t\t\treturn on(\"update\", state, action)\n\t\t\t},\n\n\t\t\tonStateDraw(state: string, action: () => void): EventController {\n\t\t\t\treturn on(\"draw\", state, action)\n\t\t\t},\n\n\t\t\tonStateEnd(state: string, action: () => void): EventController {\n\t\t\t\treturn on(\"end\", state, action)\n\t\t\t},\n\n\t\t\tupdate() {\n\t\t\t\t// execute the enter event for initState\n\t\t\t\tif (!didFirstEnter) {\n\t\t\t\t\ttrigger(\"enter\", initState)\n\t\t\t\t\tdidFirstEnter = true\n\t\t\t\t}\n\t\t\t\ttrigger(\"update\", this.state)\n\t\t\t},\n\n\t\t\tdraw() {\n\t\t\t\ttrigger(\"draw\", this.state)\n\t\t\t},\n\n\t\t\tinspect() {\n\t\t\t\treturn this.state\n\t\t\t},\n\n\t\t}\n\n\t}\n\n\tfunction fadeIn(time: number = 1): Comp {\n\t\tlet t = 0\n\t\tlet done = false\n\t\treturn {\n\t\t\trequire: [ \"opacity\" ],\n\t\t\tadd(this: GameObj<OpacityComp>) {\n\t\t\t\tthis.opacity = 0\n\t\t\t},\n\t\t\tupdate(this: GameObj<OpacityComp>) {\n\t\t\t\tif (done) return\n\t\t\t\tt += dt()\n\t\t\t\tthis.opacity = map(t, 0, time, 0, 1)\n\t\t\t\tif (t >= time) {\n\t\t\t\t\tthis.opacity = 1\n\t\t\t\t\tdone = true\n\t\t\t\t}\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction onLoad(cb: () => void): void {\n\t\tif (assets.loaded) {\n\t\t\tcb()\n\t\t} else {\n\t\t\tgame.events.on(\"load\", cb)\n\t\t}\n\t}\n\n\tfunction scene(id: SceneName, def: SceneDef) {\n\t\tgame.scenes[id] = def\n\t}\n\n\tfunction go(name: SceneName, ...args) {\n\n\t\tif (!game.scenes[name]) {\n\t\t\tthrow new Error(`Scene not found: ${name}`)\n\t\t}\n\n\t\tgame.events.onOnce(\"frameEnd\", () => {\n\n\t\t\tgame.events.trigger(\"sceneLeave\", name)\n\t\t\tapp.events.clear()\n\t\t\tgame.events.clear()\n\t\t\tgame.objEvents.clear()\n\n\t\t\t;[...game.root.children].forEach((obj) => {\n\t\t\t\tif (\n\t\t\t\t\t!obj.stay\n\t\t\t\t\t|| (obj.scenesToStay && !obj.scenesToStay.includes(name))\n\t\t\t\t) {\n\t\t\t\t\tgame.root.remove(obj)\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tgame.root.clearEvents()\n\n\t\t\t// cam\n\t\t\tgame.cam = {\n\t\t\t\tpos: null,\n\t\t\t\tscale: vec2(1),\n\t\t\t\tangle: 0,\n\t\t\t\tshake: 0,\n\t\t\t\ttransform: new Mat4(),\n\t\t\t}\n\n\t\t\tgame.scenes[name](...args)\n\n\t\t\tif (gopt.debug !== false) {\n\t\t\t\tenterDebugMode()\n\t\t\t}\n\n\t\t\tif (gopt.burp) {\n\t\t\t\tenterBurpMode()\n\t\t\t}\n\n\t\t})\n\n\t}\n\n\tfunction onSceneLeave(action: (newScene?: string) => void): EventController {\n\t\treturn game.events.on(\"sceneLeave\", action)\n\t}\n\n\tfunction getData<T>(key: string, def?: T): T {\n\t\ttry {\n\t\t\treturn JSON.parse(window.localStorage[key])\n\t\t} catch {\n\t\t\tif (def) {\n\t\t\t\tsetData(key, def)\n\t\t\t\treturn def\n\t\t\t} else {\n\t\t\t\treturn null\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction setData(key: string, data: any) {\n\t\twindow.localStorage[key] = JSON.stringify(data)\n\t}\n\n\tfunction plug<T extends Record<string, any>>(plugin: KaboomPlugin<T>, ...args: any): KaboomCtx & T {\n\t\tconst funcs = plugin(ctx)\n\t\tlet funcsObj: T\n\t\tif (typeof funcs === \"function\") {\n\t\t\tconst plugWithOptions = funcs(...args)\n\t\t\tfuncsObj = plugWithOptions(ctx)\n\t\t}\n\t\telse {\n\t\t\tfuncsObj = funcs\n\t\t}\n\t\tfor (const k in funcsObj) {\n\t\t\t// @ts-ignore\n\t\t\tctx[k] = funcsObj[k]\n\t\t\tif (gopt.global !== false) {\n\t\t\t\t// @ts-ignore\n\t\t\t\twindow[k] = funcsObj[k]\n\t\t\t}\n\t\t}\n\t\treturn ctx as KaboomCtx & T\n\t}\n\n\tfunction center(): Vec2 {\n\t\treturn vec2(width() / 2, height() / 2)\n\t}\n\n\tenum EdgeMask {\n\t\tNone = 0,\n\t\tLeft = 1,\n\t\tTop = 2,\n\t\tLeftTop = 3,\n\t\tRight = 4,\n\t\tHorizontal = 5,\n\t\tRightTop = 6,\n\t\tHorizontalTop = 7,\n\t\tBottom = 8,\n\t\tLeftBottom = 9,\n\t\tVertical = 10,\n\t\tLeftVertical = 11,\n\t\tRightBottom = 12,\n\t\tHorizontalBottom = 13,\n\t\tRightVertical = 14,\n\t\tAll = 15,\n\t}\n\n\tfunction tile(opts: TileCompOpt = {}): TileComp {\n\n\t\tlet tilePos = vec2(0)\n\t\tlet isObstacle = opts.isObstacle ?? false\n\t\tlet cost = opts.cost ?? 0\n\t\tlet edges = opts.edges ?? []\n\n\t\tconst getEdgeMask = () => {\n\t\t\tconst loopup = {\n\t\t\t\t\"left\": EdgeMask.Left,\n\t\t\t\t\"top\": EdgeMask.Top,\n\t\t\t\t\"right\": EdgeMask.Right,\n\t\t\t\t\"bottom\": EdgeMask.Bottom,\n\t\t\t}\n\t\t\treturn edges.map(s => loopup[s] || 0).reduce((mask, dir) => mask | dir, 0)\n\t\t}\n\n\t\tlet edgeMask = getEdgeMask()\n\n\t\treturn {\n\n\t\t\tid: \"tile\",\n\t\t\ttilePosOffset: opts.offset ?? vec2(0),\n\n\t\t\tset tilePos(p: Vec2) {\n\t\t\t\tconst level = this.getLevel()\n\t\t\t\ttilePos = p.clone()\n\t\t\t\t// @ts-ignore\n\t\t\t\tthis.pos = vec2(\n\t\t\t\t\tthis.tilePos.x * level.tileWidth(),\n\t\t\t\t\tthis.tilePos.y * level.tileHeight(),\n\t\t\t\t).add(this.tilePosOffset)\n\t\t\t},\n\n\t\t\tget tilePos() {\n\t\t\t\treturn tilePos\n\t\t\t},\n\n\t\t\tset isObstacle(is: boolean) {\n\t\t\t\tif (isObstacle === is) return\n\t\t\t\tisObstacle = is\n\t\t\t\tthis.getLevel().invalidateNavigationMap()\n\t\t\t},\n\n\t\t\tget isObstacle() {\n\t\t\t\treturn isObstacle\n\t\t\t},\n\n\t\t\tset cost(n: number) {\n\t\t\t\tif (cost === n) return\n\t\t\t\tcost = n\n\t\t\t\tthis.getLevel().invalidateNavigationMap()\n\t\t\t},\n\n\t\t\tget cost() {\n\t\t\t\treturn cost\n\t\t\t},\n\n\t\t\tset edges(e: Edge[]) {\n\t\t\t\tedges = e\n\t\t\t\tedgeMask = getEdgeMask()\n\t\t\t\tthis.getLevel().invalidateNavigationMap()\n\t\t\t},\n\n\t\t\tget edges() {\n\t\t\t\treturn edges\n\t\t\t},\n\n\t\t\tget edgeMask() {\n\t\t\t\treturn edgeMask\n\t\t\t},\n\n\t\t\tgetLevel(this: GameObj) {\n\t\t\t\treturn this.parent as GameObj<LevelComp>\n\t\t\t},\n\n\t\t\tmoveLeft() {\n\t\t\t\tthis.tilePos = this.tilePos.add(vec2(-1, 0))\n\t\t\t},\n\n\t\t\tmoveRight() {\n\t\t\t\tthis.tilePos = this.tilePos.add(vec2(1, 0))\n\t\t\t},\n\n\t\t\tmoveUp() {\n\t\t\t\tthis.tilePos = this.tilePos.add(vec2(0, -1))\n\t\t\t},\n\n\t\t\tmoveDown() {\n\t\t\t\tthis.tilePos = this.tilePos.add(vec2(0, 1))\n\t\t\t},\n\n\t\t}\n\n\t}\n\n\tfunction addLevel(map: string[], opt: LevelOpt): GameObj<PosComp | LevelComp> {\n\n\t\tif (!opt.tileWidth || !opt.tileHeight) {\n\t\t\tthrow new Error(\"Must provide tileWidth and tileHeight.\")\n\t\t}\n\n\t\tconst level = add([\n\t\t\tpos(opt.pos ?? vec2(0)),\n\t\t]) as GameObj<PosComp | LevelComp>\n\n\t\tconst numRows = map.length\n\t\tlet numColumns = 0\n\n\t\t// The spatial map keeps track of the objects at each location\n\t\tlet spatialMap: GameObj[][] | null = null\n\t\tlet costMap: number[] | null = null\n\t\tlet edgeMap: number[] | null = null\n\t\tlet connectivityMap: number[] | null = null\n\n\t\tconst tile2Hash = (tilePos: Vec2) => tilePos.x + tilePos.y * numColumns\n\t\tconst hash2Tile = (hash: number) => vec2(\n\t\t\tMath.floor(hash % numColumns),\n\t\t\tMath.floor(hash / numColumns),\n\t\t)\n\n\t\tconst createSpatialMap = () => {\n\t\t\tspatialMap = []\n\t\t\tfor (const child of level.children) {\n\t\t\t\tinsertIntoSpatialMap(child)\n\t\t\t}\n\t\t}\n\n\t\tconst insertIntoSpatialMap = (obj: GameObj) => {\n\t\t\tconst i = tile2Hash(obj.tilePos)\n\t\t\tif (spatialMap[i]) {\n\t\t\t\tspatialMap[i].push(obj)\n\t\t\t} else {\n\t\t\t\tspatialMap[i] = [obj]\n\t\t\t}\n\t\t}\n\n\t\tconst removeFromSpatialMap = (obj: GameObj) => {\n\t\t\tconst i = tile2Hash(obj.tilePos)\n\t\t\tif (spatialMap[i]) {\n\t\t\t\tconst index = spatialMap[i].indexOf(obj)\n\t\t\t\tif (index >= 0) {\n\t\t\t\t\tspatialMap[i].splice(index, 1)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst updateSpatialMap = () => {\n\t\t\tlet spatialMapChanged = false\n\t\t\tfor (const child of level.children) {\n\t\t\t\tconst tilePos = level.pos2Tile(child.pos)\n\t\t\t\tif (child.tilePos.x != tilePos.x || child.tilePos.y != tilePos.y) {\n\t\t\t\t\tspatialMapChanged = true\n\t\t\t\t\tremoveFromSpatialMap(child)\n\t\t\t\t\tchild.tilePos.x = tilePos.x\n\t\t\t\t\tchild.tilePos.y = tilePos.y\n\t\t\t\t\tinsertIntoSpatialMap(child)\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (spatialMapChanged) {\n\t\t\t\tlevel.trigger(\"spatial_map_changed\")\n\t\t\t}\n\t\t}\n\n\t\t// The obstacle map tells which tiles are accessible\n\t\t// Cost: accessible with cost\n\t\t// Infinite: inaccessible\n\t\tconst createCostMap = () => {\n\t\t\tconst spatialMap = level.getSpatialMap()\n\t\t\tconst size = level.numRows() * level.numColumns()\n\t\t\tif (!costMap) {\n\t\t\t\tcostMap = new Array<number>(size)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcostMap.length = size\n\t\t\t}\n\t\t\tcostMap.fill(1, 0, size)\n\t\t\tfor (let i = 0; i < spatialMap.length; i++) {\n\t\t\t\tconst objects = spatialMap[i]\n\t\t\t\tif (objects) {\n\t\t\t\t\tlet cost = 0\n\t\t\t\t\tfor (const obj of objects) {\n\t\t\t\t\t\tif (obj.isObstacle) {\n\t\t\t\t\t\t\tcost = Infinity\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcost += obj.cost\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcostMap[i] = cost || 1\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// The edge map tells which edges between nodes are walkable\n\t\tconst createEdgeMap = () => {\n\t\t\tconst spatialMap = level.getSpatialMap()\n\t\t\tconst size = level.numRows() * level.numColumns()\n\t\t\tif (!edgeMap) {\n\t\t\t\tedgeMap = new Array<number>(size)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tedgeMap.length = size\n\t\t\t}\n\t\t\tedgeMap.fill(EdgeMask.All, 0, size)\n\t\t\tfor (let i = 0; i < spatialMap.length; i++) {\n\t\t\t\tconst objects = spatialMap[i]\n\t\t\t\tif (objects) {\n\t\t\t\t\tconst len = objects.length\n\t\t\t\t\tlet mask = EdgeMask.All\n\t\t\t\t\tfor (let j = 0; j < len; j++) {\n\t\t\t\t\t\tmask |= objects[j].edgeMask\n\t\t\t\t\t}\n\t\t\t\t\tedgeMap[i] = mask\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// The connectivity map is used to see whether two locations are connected\n\t\t// -1: inaccesible n: connectivity group\n\t\tconst createConnectivityMap = () => {\n\t\t\tconst size = level.numRows() * level.numColumns()\n\t\t\tconst traverse = (i: number, index: number) => {\n\t\t\t\tconst frontier: number[] = []\n\t\t\t\tfrontier.push(i)\n\t\t\t\twhile (frontier.length > 0) {\n\t\t\t\t\tconst i = frontier.pop()\n\t\t\t\t\tgetNeighbours(i).forEach((i) => {\n\t\t\t\t\t\tif (connectivityMap[i] < 0) {\n\t\t\t\t\t\t\tconnectivityMap[i] = index\n\t\t\t\t\t\t\tfrontier.push(i)\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!connectivityMap) {\n\t\t\t\tconnectivityMap = new Array<number>(size)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconnectivityMap.length = size\n\t\t\t}\n\t\t\tconnectivityMap.fill(-1, 0, size)\n\t\t\tlet index = 0\n\t\t\tfor (let i = 0; i < costMap.length; i++) {\n\t\t\t\tif (connectivityMap[i] >= 0) { index++; continue }\n\t\t\t\ttraverse(i, index)\n\t\t\t\tindex++\n\t\t\t}\n\t\t}\n\n\t\tconst getCost = (node: number, neighbour: number) => {\n\t\t\t// Cost of destination tile\n\t\t\treturn costMap[neighbour]\n\t\t}\n\n\t\tconst getHeuristic = (node: number, goal: number) => {\n\t\t\t// Euclidian distance to target\n\t\t\tconst p1 = hash2Tile(node)\n\t\t\tconst p2 = hash2Tile(goal)\n\t\t\treturn p1.dist(p2)\n\t\t}\n\n\t\tconst getNeighbours = (node: number, diagonals?: boolean) => {\n\t\t\tconst n = []\n\t\t\tconst x = Math.floor(node % numColumns)\n\t\t\tconst left = x > 0 &&\n\t\t\t\t(edgeMap[node] & EdgeMask.Left) &&\n\t\t\t\tcostMap[node - 1] !== Infinity\n\t\t\tconst top = node >= numColumns &&\n\t\t\t\t(edgeMap[node] & EdgeMask.Top) &&\n\t\t\t\tcostMap[node - numColumns] !== Infinity\n\t\t\tconst right = x < numColumns - 1 &&\n\t\t\t\t(edgeMap[node] & EdgeMask.Right) &&\n\t\t\t\tcostMap[node + 1] !== Infinity\n\t\t\tconst bottom = node < numColumns * numRows - numColumns - 1 &&\n\t\t\t\t(edgeMap[node] & EdgeMask.Bottom) &&\n\t\t\t\tcostMap[node + numColumns] !== Infinity\n\t\t\tif (diagonals) {\n\t\t\t\tif (left) {\n\t\t\t\t\tif (top) { n.push(node - numColumns - 1) }\n\t\t\t\t\tn.push(node - 1)\n\t\t\t\t\tif (bottom) { n.push(node + numColumns - 1) }\n\t\t\t\t}\n\t\t\t\tif (top) {\n\t\t\t\t\tn.push(node - numColumns)\n\t\t\t\t}\n\t\t\t\tif (right) {\n\t\t\t\t\tif (top) { n.push(node - numColumns + 1) }\n\t\t\t\t\tn.push(node + 1)\n\t\t\t\t\tif (bottom) { n.push(node + numColumns + 1) }\n\t\t\t\t}\n\t\t\t\tif (bottom) {\n\t\t\t\t\tn.push(node + numColumns)\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (left) {\n\t\t\t\t\tn.push(node - 1)\n\t\t\t\t}\n\t\t\t\tif (top) {\n\t\t\t\t\tn.push(node - numColumns)\n\t\t\t\t}\n\t\t\t\tif (right) {\n\t\t\t\t\tn.push(node + 1)\n\t\t\t\t}\n\t\t\t\tif (bottom) {\n\t\t\t\t\tn.push(node + numColumns)\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn n\n\t\t}\n\n\t\tconst levelComp: LevelComp = {\n\n\t\t\tid: \"level\",\n\n\t\t\ttileWidth() {\n\t\t\t\treturn opt.tileWidth\n\t\t\t},\n\n\t\t\ttileHeight() {\n\t\t\t\treturn opt.tileHeight\n\t\t\t},\n\n\t\t\tspawn(this: GameObj<LevelComp>, key: string | CompList<any>, ...args: Vec2Args): GameObj | null {\n\n\t\t\t\tconst p = vec2(...args)\n\n\t\t\t\tconst comps = (() => {\n\t\t\t\t\tif (typeof key === \"string\") {\n\t\t\t\t\t\tif (opt.tiles[key]) {\n\t\t\t\t\t\t\tif (typeof opt.tiles[key] !== \"function\") {\n\t\t\t\t\t\t\t\tthrow new Error(\"Level symbol def must be a function returning a component list\")\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn opt.tiles[key](p)\n\t\t\t\t\t\t} else if (opt.wildcardTile) {\n\t\t\t\t\t\t\treturn opt.wildcardTile(key, p)\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (Array.isArray(key)) {\n\t\t\t\t\t\treturn key\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error(\"Expected a symbol or a component list\")\n\t\t\t\t\t}\n\t\t\t\t})()\n\n\t\t\t\t// empty tile\n\t\t\t\tif (!comps) {\n\t\t\t\t\treturn null\n\t\t\t\t}\n\n\t\t\t\tlet hasPos = false\n\t\t\t\tlet hasTile = false\n\n\t\t\t\tfor (const comp of comps) {\n\t\t\t\t\tif (comp.id === \"tile\") hasTile = true\n\t\t\t\t\tif (comp.id === \"pos\") hasPos = true\n\t\t\t\t}\n\n\t\t\t\tif (!hasPos) comps.push(pos())\n\t\t\t\tif (!hasTile) comps.push(tile())\n\n\t\t\t\tconst obj = level.add(comps)\n\n\t\t\t\tif (hasPos) {\n\t\t\t\t\tobj.tilePosOffset = obj.pos.clone()\n\t\t\t\t}\n\n\t\t\t\tobj.tilePos = p\n\n\t\t\t\tif (spatialMap) {\n\t\t\t\t\tinsertIntoSpatialMap(obj)\n\t\t\t\t\tthis.trigger(\"spatial_map_changed\")\n\t\t\t\t\tthis.trigger(\"navigation_map_invalid\")\n\t\t\t\t}\n\n\t\t\t\treturn obj\n\n\t\t\t},\n\n\t\t\tnumColumns() {\n\t\t\t\treturn numColumns\n\t\t\t},\n\n\t\t\tnumRows() {\n\t\t\t\treturn numRows\n\t\t\t},\n\n\t\t\tlevelWidth() {\n\t\t\t\treturn numColumns * this.tileWidth()\n\t\t\t},\n\n\t\t\tlevelHeight() {\n\t\t\t\treturn numRows * this.tileHeight()\n\t\t\t},\n\n\t\t\ttile2Pos(...args: Vec2Args) {\n\t\t\t\treturn vec2(...args).scale(this.tileWidth(), this.tileHeight())\n\t\t\t},\n\n\t\t\tpos2Tile(...args: Vec2Args) {\n\t\t\t\tconst p = vec2(...args)\n\t\t\t\treturn vec2(\n\t\t\t\t\tMath.floor(p.x / this.tileWidth()),\n\t\t\t\t\tMath.floor(p.y / this.tileHeight()),\n\t\t\t\t)\n\t\t\t},\n\n\t\t\tgetSpatialMap() {\n\t\t\t\tif (!spatialMap) {\n\t\t\t\t\tcreateSpatialMap()\n\t\t\t\t}\n\t\t\t\treturn spatialMap\n\t\t\t},\n\n\t\t\tonSpatialMapChanged(this: GameObj<LevelComp>, cb: () => void) {\n\t\t\t\treturn this.on(\"spatial_map_changed\", cb)\n\t\t\t},\n\n\t\t\tonNavigationMapInvalid(this: GameObj<LevelComp>, cb: () => void) {\n\t\t\t\treturn this.on(\"navigation_map_invalid\", cb)\n\t\t\t},\n\n\t\t\tgetAt(tilePos: Vec2) {\n\t\t\t\tif (!spatialMap) {\n\t\t\t\t\tcreateSpatialMap()\n\t\t\t\t}\n\t\t\t\tconst hash = tile2Hash(tilePos)\n\t\t\t\treturn spatialMap[hash] || []\n\t\t\t},\n\n\t\t\tupdate() {\n\t\t\t\tif (spatialMap) {\n\t\t\t\t\tupdateSpatialMap()\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tinvalidateNavigationMap() {\n\t\t\t\tcostMap = null\n\t\t\t\tedgeMap = null\n\t\t\t\tconnectivityMap = null\n\t\t\t},\n\n\t\t\tonNavigationMapChanged(this: GameObj<LevelComp>, cb: () => void) {\n\t\t\t\treturn this.on(\"navigation_map_changed\", cb)\n\t\t\t},\n\n\t\t\tgetTilePath(this: GameObj<LevelComp>, from: Vec2, to: Vec2, opts: PathFindOpt = {}) {\n\t\t\t\tif (!costMap) {\n\t\t\t\t\tcreateCostMap()\n\t\t\t\t}\n\t\t\t\tif (!edgeMap) {\n\t\t\t\t\tcreateEdgeMap()\n\t\t\t\t}\n\t\t\t\tif (!connectivityMap) {\n\t\t\t\t\tcreateConnectivityMap()\n\t\t\t\t}\n\n\t\t\t\t// Tiles are outside the grid\n\t\t\t\tif (from.x < 0 || from.x >= numColumns ||\n\t\t\t\t\tfrom.y < 0 || from.y >= numRows) {\n\t\t\t\t\treturn null\n\t\t\t\t}\n\t\t\t\tif (to.x < 0 || to.x >= numColumns ||\n\t\t\t\t\tto.y < 0 || to.y >= numRows) {\n\t\t\t\t\treturn null\n\t\t\t\t}\n\n\t\t\t\tconst start = tile2Hash(from)\n\t\t\t\tconst goal = tile2Hash(to)\n\n\t\t\t\t// Tiles are not accessible\n\t\t\t\t// If we test the start tile, we may get stuck\n\t\t\t\t/*if (costMap[start] === Infinity) {\n\t\t\t\t\treturn null\n\t\t\t\t}*/\n\t\t\t\tif (costMap[goal] === Infinity) {\n\t\t\t\t\treturn null\n\t\t\t\t}\n\n\t\t\t\t// Same Tile, no waypoints needed\n\t\t\t\tif (start === goal) {\n\t\t\t\t\treturn []\n\t\t\t\t}\n\n\t\t\t\t// Tiles are not within the same section\n\t\t\t\t// If we test the start tile when invalid, we may get stuck\n\t\t\t\tif (connectivityMap[start] != -1 && connectivityMap[start] !== connectivityMap[goal]) {\n\t\t\t\t\treturn null\n\t\t\t\t}\n\n\t\t\t\t// Find a path\n\t\t\t\tinterface CostNode { cost: number, node: number }\n\t\t\t\tconst frontier = new BinaryHeap<CostNode>((a, b) => a.cost < b.cost)\n\t\t\t\tfrontier.insert({ cost: 0, node: start })\n\n\t\t\t\tconst cameFrom = new Map<number, number>()\n\t\t\t\tcameFrom.set(start, start)\n\t\t\t\tconst costSoFar = new Map<number, number>()\n\t\t\t\tcostSoFar.set(start, 0)\n\n\t\t\t\twhile (frontier.length !== 0) {\n\t\t\t\t\tconst current = frontier.remove()?.node\n\n\t\t\t\t\tif (current === goal)\n\t\t\t\t\t\tbreak\n\n\t\t\t\t\tconst neighbours = getNeighbours(current, opts.allowDiagonals)\n\t\t\t\t\tfor (const next of neighbours) {\n\t\t\t\t\t\tconst newCost = (costSoFar.get(current) || 0) +\n\t\t\t\t\t\t\tgetCost(current, next) +\n\t\t\t\t\t\t\tgetHeuristic(next, goal)\n\t\t\t\t\t\tif (!costSoFar.has(next) || newCost < costSoFar.get(next)) {\n\t\t\t\t\t\t\tcostSoFar.set(next, newCost)\n\t\t\t\t\t\t\tfrontier.insert({ cost: newCost, node: next })\n\t\t\t\t\t\t\tcameFrom.set(next, current)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst path = []\n\t\t\t\tlet node = goal\n\t\t\t\tconst p = hash2Tile(node)\n\t\t\t\tpath.push(p)\n\t\t\t\twhile (node !== start) {\n\t\t\t\t\tnode = cameFrom.get(node)\n\t\t\t\t\tconst p = hash2Tile(node)\n\t\t\t\t\tpath.push(p)\n\t\t\t\t}\n\t\t\t\treturn path.reverse()\n\t\t\t},\n\n\t\t\tgetPath(this: GameObj<LevelComp>, from: Vec2, to: Vec2, opts: PathFindOpt = {}) {\n\t\t\t\tconst tw = this.tileWidth()\n\t\t\t\tconst th = this.tileHeight()\n\t\t\t\tconst path = this.getTilePath(\n\t\t\t\t\tthis.pos2Tile(from),\n\t\t\t\t\tthis.pos2Tile(to),\n\t\t\t\t\topts,\n\t\t\t\t)\n\t\t\t\tif (path) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\tfrom,\n\t\t\t\t\t\t...path\n\t\t\t\t\t\t\t.slice(1, -1)\n\t\t\t\t\t\t\t.map((tilePos) => tilePos.scale(tw, th).add(tw / 2, th / 2)),\n\t\t\t\t\t\tto,\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn null\n\t\t\t\t}\n\t\t\t},\n\n\t\t}\n\n\t\tlevel.use(levelComp)\n\n\t\tlevel.onNavigationMapInvalid(() => {\n\t\t\tlevel.invalidateNavigationMap()\n\t\t\tlevel.trigger(\"navigation_map_changed\")\n\t\t})\n\n\t\tmap.forEach((row, i) => {\n\t\t\tconst keys = row.split(\"\")\n\t\t\tnumColumns = Math.max(keys.length, numColumns)\n\t\t\tkeys.forEach((key, j) => {\n\t\t\t\tlevel.spawn(key, vec2(j, i))\n\t\t\t})\n\t\t})\n\n\t\treturn level\n\n\t}\n\n\tfunction agent(opts: AgentCompOpt = {}) : AgentComp {\n\t\tlet target: Vec2 | null = null\n\t\tlet path: Vec2[] | null = null\n\t\tlet index: number | null = null\n\t\tlet navMapChangedEvent: EventController | null = null\n\t\treturn {\n\t\t\tid: \"agent\",\n\t\t\trequire: [\"pos\", \"tile\"],\n\t\t\tagentSpeed: opts.speed ?? 100,\n\t\t\tallowDiagonals: opts.allowDiagonals ?? true,\n\t\t\tgetDistanceToTarget(this: GameObj<AgentComp | PosComp>) {\n\t\t\t\treturn target ? this.pos.dist(target) : 0\n\t\t\t},\n\t\t\tgetNextLocation() {\n\t\t\t\treturn path && index ? path[index] : null\n\t\t\t},\n\t\t\tgetPath() {\n\t\t\t\treturn path ? path.slice() : null\n\t\t\t},\n\t\t\tgetTarget() {\n\t\t\t\treturn target\n\t\t\t},\n\t\t\tisNavigationFinished() {\n\t\t\t\treturn path ? index === null : true\n\t\t\t},\n\t\t\tisTargetReachable() {\n\t\t\t\treturn path !== null\n\t\t\t},\n\t\t\tisTargetReached(this: GameObj<AgentComp | PosComp>) {\n\t\t\t\treturn target ? this.pos.eq(target) : true\n\t\t\t},\n\t\t\tsetTarget(this: GameObj<AgentComp | TileComp | PosComp>, p: Vec2) {\n\t\t\t\ttarget = p\n\t\t\t\tpath = this.getLevel().getPath(this.pos, target, {\n\t\t\t\t\tallowDiagonals: this.allowDiagonals,\n\t\t\t\t})\n\t\t\t\tindex = path ? 0 : null\n\t\t\t\tif (path) {\n\t\t\t\t\tif (!navMapChangedEvent) {\n\t\t\t\t\t\tnavMapChangedEvent = this.getLevel().onNavigationMapChanged(() => {\n\t\t\t\t\t\t\tif (path && index !== null) {\n\t\t\t\t\t\t\t\tpath = this.getLevel().getPath(this.pos, target, {\n\t\t\t\t\t\t\t\t\tallowDiagonals: this.allowDiagonals,\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\tindex = path ? 0 : null\n\t\t\t\t\t\t\t\tif (path) {\n\t\t\t\t\t\t\t\t\tthis.trigger(\"navigation-next\", this, path[index])\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tthis.trigger(\"navigation-ended\", this)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\tthis.onDestroy(() => navMapChangedEvent.cancel())\n\t\t\t\t\t}\n\t\t\t\t\tthis.trigger(\"navigation-started\", this)\n\t\t\t\t\tthis.trigger(\"navigation-next\", this, path[index])\n\t\t\t\t} else {\n\t\t\t\t\tthis.trigger(\"navigation-ended\", this)\n\t\t\t\t}\n\t\t\t},\n\t\t\tupdate(this: GameObj<AgentComp | PosComp>) {\n\t\t\t\tif (path && index !== null) {\n\t\t\t\t\tif (this.pos.sdist(path[index]) < 2) {\n\t\t\t\t\t\tif (index === path.length - 1) {\n\t\t\t\t\t\t\tthis.pos = target.clone()\n\t\t\t\t\t\t\tindex = null\n\t\t\t\t\t\t\tthis.trigger(\"navigation-ended\", this)\n\t\t\t\t\t\t\tthis.trigger(\"target-reached\", this)\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindex++\n\t\t\t\t\t\t\tthis.trigger(\"navigation-next\", this, path[index])\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t\tthis.moveTo(path[index], this.agentSpeed)\n\t\t\t\t}\n\t\t\t},\n\t\t\tonNavigationStarted(this: GameObj<AgentComp>, cb: () => void) {\n\t\t\t\treturn this.on(\"navigation-started\", cb)\n\t\t\t},\n\t\t\tonNavigationNext(this: GameObj<AgentComp>, cb: () => void) {\n\t\t\t\treturn this.on(\"navigation-next\", cb)\n\t\t\t},\n\t\t\tonNavigationEnded(this: GameObj<AgentComp>, cb: () => void) {\n\t\t\t\treturn this.on(\"navigation-ended\", cb)\n\t\t\t},\n\t\t\tonTargetReached(this: GameObj<AgentComp>, cb: () => void) {\n\t\t\t\treturn this.on(\"target-reached\", cb)\n\t\t\t},\n\t\t\tinspect() {\n\t\t\t\treturn JSON.stringify({\n\t\t\t\t\ttarget: JSON.stringify(target),\n\t\t\t\t\tpath: JSON.stringify(path),\n\t\t\t\t})\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction record(frameRate?): Recording {\n\n\t\tconst stream = app.canvas().captureStream(frameRate)\n\t\tconst audioDest = audio.ctx.createMediaStreamDestination()\n\n\t\taudio.masterNode.connect(audioDest)\n\n\t\t// TODO: Enabling audio results in empty video if no audio received\n\t\t// const audioStream = audioDest.stream\n\t\t// const [firstAudioTrack] = audioStream.getAudioTracks()\n\n\t\t// stream.addTrack(firstAudioTrack);\n\n\t\tconst recorder = new MediaRecorder(stream)\n\t\tconst chunks = []\n\n\t\trecorder.ondataavailable = (e) => {\n\t\t\tif (e.data.size > 0) {\n\t\t\t\tchunks.push(e.data)\n\t\t\t}\n\t\t}\n\n\t\trecorder.onerror = () => {\n\t\t\taudio.masterNode.disconnect(audioDest)\n\t\t\tstream.getTracks().forEach(t => t.stop())\n\t\t}\n\n\t\trecorder.start()\n\n\t\treturn {\n\n\t\t\tresume() {\n\t\t\t\trecorder.resume()\n\t\t\t},\n\n\t\t\tpause() {\n\t\t\t\trecorder.pause()\n\t\t\t},\n\n\t\t\tstop(): Promise<Blob> {\n\t\t\t\trecorder.stop()\n\t\t\t\t// cleanup\n\t\t\t\taudio.masterNode.disconnect(audioDest)\n\t\t\t\tstream.getTracks().forEach(t => t.stop())\n\t\t\t\treturn new Promise((resolve) => {\n\t\t\t\t\trecorder.onstop = () => {\n\t\t\t\t\t\tresolve(new Blob(chunks, {\n\t\t\t\t\t\t\ttype: \"video/mp4\",\n\t\t\t\t\t\t}))\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t},\n\n\t\t\tdownload(filename = \"kaboom.mp4\") {\n\t\t\t\tthis.stop().then((blob) => downloadBlob(filename, blob))\n\t\t\t},\n\n\t\t}\n\n\t}\n\n\tfunction isFocused(): boolean {\n\t\treturn document.activeElement === app.canvas()\n\t}\n\n\tfunction destroy(obj: GameObj) {\n\t\tobj.destroy()\n\t}\n\n\t// aliases for root game obj operations\n\tconst add: KaboomCtx[\"add\"] = game.root.add.bind(game.root)\n\tconst readd: KaboomCtx[\"readd\"] = game.root.readd.bind(game.root)\n\tconst destroyAll: KaboomCtx[\"destroyAll\"] = game.root.removeAll.bind(game.root)\n\tconst get: KaboomCtx[\"get\"] = game.root.get.bind(game.root)\n\n\tfunction boom(speed: number = 2, size: number = 1): Comp {\n\t\tlet time = 0\n\t\treturn {\n\t\t\tid: \"boom\",\n\t\t\trequire: [ \"scale\" ],\n\t\t\tupdate(this: GameObj<ScaleComp>) {\n\t\t\t\tconst s = Math.sin(time * speed) * size\n\t\t\t\tif (s < 0) {\n\t\t\t\t\tthis.destroy()\n\t\t\t\t}\n\t\t\t\tthis.scale = vec2(s)\n\t\t\t\ttime += dt()\n\t\t\t},\n\t\t}\n\t}\n\n\tconst kaSprite = loadSprite(null, kaSpriteSrc)\n\tconst boomSprite = loadSprite(null, boomSpriteSrc)\n\n\tfunction addKaboom(p: Vec2, opt: BoomOpt = {}): GameObj {\n\n\t\tconst kaboom = add([\n\t\t\tpos(p),\n\t\t\tstay(),\n\t\t])\n\n\t\tconst speed = (opt.speed || 1) * 5\n\t\tconst s = opt.scale || 1\n\n\t\tkaboom.add([\n\t\t\tsprite(boomSprite),\n\t\t\tscale(0),\n\t\t\tanchor(\"center\"),\n\t\t\tboom(speed, s),\n\t\t\t...opt.comps ?? [],\n\t\t])\n\n\t\tconst ka = kaboom.add([\n\t\t\tsprite(kaSprite),\n\t\t\tscale(0),\n\t\t\tanchor(\"center\"),\n\t\t\ttimer(),\n\t\t\t...opt.comps ?? [],\n\t\t])\n\n\t\tka.wait(0.4 / speed, () => ka.use(boom(speed, s)))\n\t\tka.onDestroy(() => kaboom.destroy())\n\n\t\treturn kaboom\n\n\t}\n\n\tfunction updateFrame() {\n\t\t// update every obj\n\t\tgame.root.update()\n\t}\n\n\tclass Collision {\n\t\tsource: GameObj\n\t\ttarget: GameObj\n\t\tdisplacement: Vec2\n\t\tresolved: boolean = false\n\t\tconstructor(source: GameObj, target: GameObj, dis: Vec2, resolved = false) {\n\t\t\tthis.source = source\n\t\t\tthis.target = target\n\t\t\tthis.displacement = dis\n\t\t\tthis.resolved = resolved\n\t\t}\n\t\treverse() {\n\t\t\treturn new Collision(\n\t\t\t\tthis.target,\n\t\t\t\tthis.source,\n\t\t\t\tthis.displacement.scale(-1),\n\t\t\t\tthis.resolved,\n\t\t\t)\n\t\t}\n\t\thasOverlap() {\n\t\t\treturn !this.displacement.isZero()\n\t\t}\n\t\tisLeft() {\n\t\t\treturn this.displacement.x > 0\n\t\t}\n\t\tisRight() {\n\t\t\treturn this.displacement.x < 0\n\t\t}\n\t\tisTop() {\n\t\t\treturn this.displacement.y > 0\n\t\t}\n\t\tisBottom() {\n\t\t\treturn this.displacement.y < 0\n\t\t}\n\t\tpreventResolution() {\n\t\t\tthis.resolved = true\n\t\t}\n\t}\n\n\tfunction checkFrame() {\n\n\t\t// TODO: persistent grid?\n\t\t// start a spatial hash grid for more efficient collision detection\n\t\tconst grid: Record<number, Record<number, GameObj<AreaComp>[]>> = {}\n\t\tconst cellSize = gopt.hashGridSize || DEF_HASH_GRID_SIZE\n\n\t\t// current transform\n\t\tlet tr = new Mat4()\n\n\t\t// a local transform stack\n\t\tconst stack = []\n\n\t\tfunction checkObj(obj: GameObj) {\n\n\t\t\tstack.push(tr.clone())\n\n\t\t\t// Update object transform here. This will be the transform later used in rendering.\n\t\t\tif (obj.pos) tr.translate(obj.pos)\n\t\t\tif (obj.scale) tr.scale(obj.scale)\n\t\t\tif (obj.angle) tr.rotate(obj.angle)\n\t\t\tobj.transform = tr.clone()\n\n\t\t\tif (obj.c(\"area\") && !obj.paused) {\n\n\t\t\t\t// TODO: only update worldArea if transform changed\n\t\t\t\tconst aobj = obj as GameObj<AreaComp>\n\t\t\t\tconst area = aobj.worldArea()\n\t\t\t\tconst bbox = area.bbox()\n\n\t\t\t\t// Get spatial hash grid coverage\n\t\t\t\tconst xmin = Math.floor(bbox.pos.x / cellSize)\n\t\t\t\tconst ymin = Math.floor(bbox.pos.y / cellSize)\n\t\t\t\tconst xmax = Math.ceil((bbox.pos.x + bbox.width) / cellSize)\n\t\t\t\tconst ymax = Math.ceil((bbox.pos.y + bbox.height) / cellSize)\n\n\t\t\t\t// Cache objs that are already checked\n\t\t\t\tconst checked = new Set()\n\n\t\t\t\t// insert & check against all covered grids\n\t\t\t\tfor (let x = xmin; x <= xmax; x++) {\n\t\t\t\t\tfor (let y = ymin; y <= ymax; y++) {\n\t\t\t\t\t\tif(!grid[x]) {\n\t\t\t\t\t\t\tgrid[x] = {}\n\t\t\t\t\t\t\tgrid[x][y] = [aobj]\n\t\t\t\t\t\t} else if(!grid[x][y]) {\n\t\t\t\t\t\t\tgrid[x][y] = [aobj]\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst cell = grid[x][y]\n\t\t\t\t\t\t\tcheck: for (const other of cell) {\n\t\t\t\t\t\t\t\tif (!other.exists()) {\n\t\t\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (checked.has(other.id)) {\n\t\t\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tfor (const tag of aobj.collisionIgnore) {\n\t\t\t\t\t\t\t\t\tif (other.is(tag)) {\n\t\t\t\t\t\t\t\t\t\tcontinue check\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tfor (const tag of other.collisionIgnore) {\n\t\t\t\t\t\t\t\t\tif (aobj.is(tag)) {\n\t\t\t\t\t\t\t\t\t\tcontinue check\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// TODO: cache the world area here\n\t\t\t\t\t\t\t\tconst res = sat(aobj.worldArea(), other.worldArea())\n\t\t\t\t\t\t\t\tif (res) {\n\t\t\t\t\t\t\t\t\t// TODO: rehash if the object position is changed after resolution?\n\t\t\t\t\t\t\t\t\tconst col1 = new Collision(aobj, other, res)\n\t\t\t\t\t\t\t\t\taobj.trigger(\"collideUpdate\", other, col1)\n\t\t\t\t\t\t\t\t\tconst col2 = col1.reverse()\n\t\t\t\t\t\t\t\t\t// resolution only has to happen once\n\t\t\t\t\t\t\t\t\tcol2.resolved = col1.resolved\n\t\t\t\t\t\t\t\t\tother.trigger(\"collideUpdate\", aobj, col2)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tchecked.add(other.id)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcell.push(aobj)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tobj.children.forEach(checkObj)\n\t\t\ttr = stack.pop()\n\n\t\t}\n\n\t\tcheckObj(game.root)\n\n\t}\n\n\tfunction drawFrame() {\n\n\t\t// calculate camera matrix\n\t\tconst cam = game.cam\n\t\tconst shake = Vec2.fromAngle(rand(0, 360)).scale(cam.shake)\n\n\t\tcam.shake = lerp(cam.shake, 0, 5 * dt())\n\t\tcam.transform = new Mat4()\n\t\t\t.translate(center())\n\t\t\t.scale(cam.scale)\n\t\t\t.rotate(cam.angle)\n\t\t\t.translate((cam.pos ?? center()).scale(-1).add(shake))\n\n\t\tgame.root.draw()\n\t\tflush()\n\n\t}\n\n\tfunction drawLoadScreen() {\n\n\t\tconst progress = loadProgress()\n\n\t\tif (game.events.numListeners(\"loading\") > 0) {\n\t\t\tgame.events.trigger(\"loading\", progress)\n\t\t} else {\n\t\t\tdrawUnscaled(() => {\n\t\t\t\tconst w = width() / 2\n\t\t\t\tconst h = 24\n\t\t\t\tconst pos = vec2(width() / 2, height() / 2).sub(vec2(w / 2, h / 2))\n\t\t\t\tdrawRect({\n\t\t\t\t\tpos: vec2(0),\n\t\t\t\t\twidth: width(),\n\t\t\t\t\theight: height(),\n\t\t\t\t\tcolor: rgb(0, 0, 0),\n\t\t\t\t})\n\t\t\t\tdrawRect({\n\t\t\t\t\tpos: pos,\n\t\t\t\t\twidth: w,\n\t\t\t\t\theight: h,\n\t\t\t\t\tfill: false,\n\t\t\t\t\toutline: {\n\t\t\t\t\t\twidth: 4,\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t\tdrawRect({\n\t\t\t\t\tpos: pos,\n\t\t\t\t\twidth: w * progress,\n\t\t\t\t\theight: h,\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\n\t}\n\n\tfunction drawInspectText(pos, txt) {\n\n\t\tdrawUnscaled(() => {\n\n\t\t\tconst pad = vec2(8)\n\n\t\t\tpushTransform()\n\t\t\tpushTranslate(pos)\n\n\t\t\tconst ftxt = formatText({\n\t\t\t\ttext: txt,\n\t\t\t\tfont: DBG_FONT,\n\t\t\t\tsize: 16,\n\t\t\t\tpos: pad,\n\t\t\t\tcolor: rgb(255, 255, 255),\n\t\t\t\tfixed: true,\n\t\t\t})\n\n\t\t\tconst bw = ftxt.width + pad.x * 2\n\t\t\tconst bh = ftxt.height + pad.x * 2\n\n\t\t\tif (pos.x + bw >= width()) {\n\t\t\t\tpushTranslate(vec2(-bw, 0))\n\t\t\t}\n\n\t\t\tif (pos.y + bh >= height()) {\n\t\t\t\tpushTranslate(vec2(0, -bh))\n\t\t\t}\n\n\t\t\tdrawRect({\n\t\t\t\twidth: bw,\n\t\t\t\theight: bh,\n\t\t\t\tcolor: rgb(0, 0, 0),\n\t\t\t\tradius: 4,\n\t\t\t\topacity: 0.8,\n\t\t\t\tfixed: true,\n\t\t\t})\n\n\t\t\tdrawFormattedText(ftxt)\n\t\t\tpopTransform()\n\n\t\t})\n\n\t}\n\n\tfunction drawDebug() {\n\n\t\tif (debug.inspect) {\n\n\t\t\tlet inspecting = null\n\n\t\t\tfor (const obj of game.root.get(\"*\", { recursive: true })) {\n\t\t\t\tif (obj.c(\"area\") && obj.isHovering()) {\n\t\t\t\t\tinspecting = obj\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tgame.root.drawInspect()\n\n\t\t\tif (inspecting) {\n\n\t\t\t\tconst lines = []\n\t\t\t\tconst data = inspecting.inspect()\n\n\t\t\t\tfor (const tag in data) {\n\t\t\t\t\tif (data[tag]) {\n\t\t\t\t\t\tlines.push(`${tag}: ${data[tag]}`)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlines.push(`${tag}`)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tdrawInspectText(contentToView(mousePos()), lines.join(\"\\n\"))\n\n\t\t\t}\n\n\t\t\tdrawInspectText(vec2(8), `FPS: ${debug.fps()}`)\n\n\t\t}\n\n\t\tif (debug.paused) {\n\n\t\t\tdrawUnscaled(() => {\n\n\t\t\t\t// top right corner\n\t\t\t\tpushTransform()\n\t\t\t\tpushTranslate(width(), 0)\n\t\t\t\tpushTranslate(-8, 8)\n\n\t\t\t\tconst size = 32\n\n\t\t\t\t// bg\n\t\t\t\tdrawRect({\n\t\t\t\t\twidth: size,\n\t\t\t\t\theight: size,\n\t\t\t\t\tanchor: \"topright\",\n\t\t\t\t\tcolor: rgb(0, 0, 0),\n\t\t\t\t\topacity: 0.8,\n\t\t\t\t\tradius: 4,\n\t\t\t\t\tfixed: true,\n\t\t\t\t})\n\n\t\t\t\t// pause icon\n\t\t\t\tfor (let i = 1; i <= 2; i++) {\n\t\t\t\t\tdrawRect({\n\t\t\t\t\t\twidth: 4,\n\t\t\t\t\t\theight: size * 0.6,\n\t\t\t\t\t\tanchor: \"center\",\n\t\t\t\t\t\tpos: vec2(-size / 3 * i, size * 0.5),\n\t\t\t\t\t\tcolor: rgb(255, 255, 255),\n\t\t\t\t\t\tradius: 2,\n\t\t\t\t\t\tfixed: true,\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tpopTransform()\n\n\t\t\t})\n\n\t\t}\n\n\t\tif (debug.timeScale !== 1) {\n\n\t\t\tdrawUnscaled(() => {\n\n\t\t\t\t// bottom right corner\n\t\t\t\tpushTransform()\n\t\t\t\tpushTranslate(width(), height())\n\t\t\t\tpushTranslate(-8, -8)\n\n\t\t\t\tconst pad = 8\n\n\t\t\t\t// format text first to get text size\n\t\t\t\tconst ftxt = formatText({\n\t\t\t\t\ttext: debug.timeScale.toFixed(1),\n\t\t\t\t\tfont: DBG_FONT,\n\t\t\t\t\tsize: 16,\n\t\t\t\t\tcolor: rgb(255, 255, 255),\n\t\t\t\t\tpos: vec2(-pad),\n\t\t\t\t\tanchor: \"botright\",\n\t\t\t\t\tfixed: true,\n\t\t\t\t})\n\n\t\t\t\t// bg\n\t\t\t\tdrawRect({\n\t\t\t\t\twidth: ftxt.width + pad * 2 + pad * 4,\n\t\t\t\t\theight: ftxt.height + pad * 2,\n\t\t\t\t\tanchor: \"botright\",\n\t\t\t\t\tcolor: rgb(0, 0, 0),\n\t\t\t\t\topacity: 0.8,\n\t\t\t\t\tradius: 4,\n\t\t\t\t\tfixed: true,\n\t\t\t\t})\n\n\t\t\t\t// fast forward / slow down icon\n\t\t\t\tfor (let i = 0; i < 2; i++) {\n\t\t\t\t\tconst flipped = debug.timeScale < 1\n\t\t\t\t\tdrawTriangle({\n\t\t\t\t\t\tp1: vec2(-ftxt.width - pad * (flipped ? 2 : 3.5), -pad),\n\t\t\t\t\t\tp2: vec2(-ftxt.width - pad * (flipped ? 2 : 3.5), -pad - ftxt.height),\n\t\t\t\t\t\tp3: vec2(-ftxt.width - pad * (flipped ? 3.5 : 2), -pad - ftxt.height / 2),\n\t\t\t\t\t\tpos: vec2(-i * pad * 1 + (flipped ? -pad * 0.5 : 0), 0),\n\t\t\t\t\t\tcolor: rgb(255, 255, 255),\n\t\t\t\t\t\tfixed: true,\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\t// text\n\t\t\t\tdrawFormattedText(ftxt)\n\n\t\t\t\tpopTransform()\n\n\t\t\t})\n\n\t\t}\n\n\t\tif (debug.curRecording) {\n\n\t\t\tdrawUnscaled(() => {\n\n\t\t\t\tpushTransform()\n\t\t\t\tpushTranslate(0, height())\n\t\t\t\tpushTranslate(24, -24)\n\n\t\t\t\tdrawCircle({\n\t\t\t\t\tradius: 12,\n\t\t\t\t\tcolor: rgb(255, 0, 0),\n\t\t\t\t\topacity: wave(0, 1, app.time() * 4),\n\t\t\t\t\tfixed: true,\n\t\t\t\t})\n\n\t\t\t\tpopTransform()\n\n\t\t\t})\n\n\t\t}\n\n\t\tif (debug.showLog && game.logs.length > 0) {\n\n\t\t\tdrawUnscaled(() => {\n\n\t\t\t\tpushTransform()\n\t\t\t\tpushTranslate(0, height())\n\t\t\t\tpushTranslate(8, -8)\n\n\t\t\t\tconst pad = 8\n\t\t\t\tconst logs = []\n\n\t\t\t\tfor (const log of game.logs) {\n\t\t\t\t\tlet str = \"\"\n\t\t\t\t\tconst style = log.msg instanceof Error ? \"error\" : \"info\"\n\t\t\t\t\tstr += `[time]${log.time.toFixed(2)}[/time]`\n\t\t\t\t\tstr += \" \"\n\t\t\t\t\tstr += `[${style}]${log.msg?.toString ? log.msg.toString() : log.msg}[/${style}]`\n\t\t\t\t\tlogs.push(str)\n\t\t\t\t}\n\n\t\t\t\tgame.logs = game.logs\n\t\t\t\t\t.filter((log) => app.time() - log.time < (gopt.logTime || LOG_TIME))\n\n\t\t\t\tconst ftext = formatText({\n\t\t\t\t\ttext: logs.join(\"\\n\"),\n\t\t\t\t\tfont: DBG_FONT,\n\t\t\t\t\tpos: vec2(pad, -pad),\n\t\t\t\t\tanchor: \"botleft\",\n\t\t\t\t\tsize: 16,\n\t\t\t\t\twidth: width() * 0.6,\n\t\t\t\t\tlineSpacing: pad / 2,\n\t\t\t\t\tfixed: true,\n\t\t\t\t\tstyles: {\n\t\t\t\t\t\t\"time\": { color: rgb(127, 127, 127) },\n\t\t\t\t\t\t\"info\": { color: rgb(255, 255, 255) },\n\t\t\t\t\t\t\"error\": { color: rgb(255, 0, 127) },\n\t\t\t\t\t},\n\t\t\t\t})\n\n\t\t\t\tdrawRect({\n\t\t\t\t\twidth: ftext.width + pad * 2,\n\t\t\t\t\theight: ftext.height + pad * 2,\n\t\t\t\t\tanchor: \"botleft\",\n\t\t\t\t\tcolor: rgb(0, 0, 0),\n\t\t\t\t\tradius: 4,\n\t\t\t\t\topacity: 0.8,\n\t\t\t\t\tfixed: true,\n\t\t\t\t})\n\n\t\t\t\tdrawFormattedText(ftext)\n\t\t\t\tpopTransform()\n\n\t\t\t})\n\n\t\t}\n\n\t}\n\n\tif (gopt.debug !== false) {\n\t\tenterDebugMode()\n\t}\n\n\tif (gopt.burp) {\n\t\tenterBurpMode()\n\t}\n\n\tfunction onLoading(action: (progress: number) => void) {\n\t\tgame.events.on(\"loading\", action)\n\t}\n\n\tfunction onResize(action: () => void) {\n\t\tapp.onResize(action)\n\t}\n\n\tfunction onError(action: (err: Error) => void) {\n\t\tgame.events.on(\"error\", action)\n\t}\n\n\tfunction handleErr(err: Error) {\n\n\t\t// TODO: this should only run once\n\t\tapp.run(() => {\n\n\t\t\tdrawUnscaled(() => {\n\n\t\t\t\tconst pad = 32\n\t\t\t\tconst gap = 16\n\t\t\t\tconst gw = width()\n\t\t\t\tconst gh = height()\n\n\t\t\t\tconst textStyle = {\n\t\t\t\t\tsize: 36,\n\t\t\t\t\twidth: gw - pad * 2,\n\t\t\t\t\tletterSpacing: 4,\n\t\t\t\t\tlineSpacing: 4,\n\t\t\t\t\tfont: DBG_FONT,\n\t\t\t\t\tfixed: true,\n\t\t\t\t}\n\n\t\t\t\tdrawRect({\n\t\t\t\t\twidth: gw,\n\t\t\t\t\theight: gh,\n\t\t\t\t\tcolor: rgb(0, 0, 255),\n\t\t\t\t\tfixed: true,\n\t\t\t\t})\n\n\t\t\t\tconst title = formatText({\n\t\t\t\t\t...textStyle,\n\t\t\t\t\ttext: err.name,\n\t\t\t\t\tpos: vec2(pad),\n\t\t\t\t\tcolor: rgb(255, 128, 0),\n\t\t\t\t\tfixed: true,\n\t\t\t\t})\n\n\t\t\t\tdrawFormattedText(title)\n\n\t\t\t\tdrawText({\n\t\t\t\t\t...textStyle,\n\t\t\t\t\ttext: err.message,\n\t\t\t\t\tpos: vec2(pad, pad + title.height + gap),\n\t\t\t\t\tfixed: true,\n\t\t\t\t})\n\n\t\t\t\tpopTransform()\n\t\t\t\tgame.events.trigger(\"error\", err)\n\n\t\t\t})\n\n\t\t})\n\n\t}\n\n\tfunction onCleanup(action: () => void) {\n\t\tgc.push(action)\n\t}\n\n\tfunction quit() {\n\n\t\tgame.events.onOnce(\"frameEnd\", () => {\n\n\t\t\tapp.quit()\n\n\t\t\tfor (const name in winEvents) {\n\t\t\t\twindow.removeEventListener(name, winEvents[name])\n\t\t\t}\n\n\t\t\t// clear canvas\n\t\t\tgl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT | gl.STENCIL_BUFFER_BIT)\n\n\t\t\t// unbind everything\n\t\t\tconst numTextureUnits = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS)\n\n\t\t\tfor (let unit = 0; unit < numTextureUnits; unit++) {\n\t\t\t\tgl.activeTexture(gl.TEXTURE0 + unit)\n\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, null)\n\t\t\t\tgl.bindTexture(gl.TEXTURE_CUBE_MAP, null)\n\t\t\t}\n\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, null)\n\t\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null)\n\t\t\tgl.bindRenderbuffer(gl.RENDERBUFFER, null)\n\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null)\n\n\t\t\t// run all scattered gc events\n\t\t\tgc.forEach((f) => f())\n\n\t\t\t// delete webgl buffers\n\t\t\tgl.deleteBuffer(gfx.vbuf)\n\t\t\tgl.deleteBuffer(gfx.ibuf)\n\n\t\t})\n\n\t}\n\n\tfunction tween<V extends LerpValue>(\n\t\tfrom: V,\n\t\tto: V,\n\t\tduration: number,\n\t\tsetValue: (value: V) => void,\n\t\teaseFunc = easings.linear,\n\t): TweenController {\n\t\tlet curTime = 0\n\t\tconst onEndEvents: Array<() => void> = []\n\t\tconst ev = onUpdate(() => {\n\t\t\tcurTime += dt()\n\t\t\tconst t = Math.min(curTime / duration, 1)\n\t\t\tsetValue(lerp(from, to, easeFunc(t)))\n\t\t\tif (t === 1) {\n\t\t\t\tev.cancel()\n\t\t\t\tsetValue(to)\n\t\t\t\tonEndEvents.forEach((action) => action())\n\t\t\t}\n\t\t})\n\t\treturn {\n\t\t\tget paused() {\n\t\t\t\treturn ev.paused\n\t\t\t},\n\t\t\tset paused(p) {\n\t\t\t\tev.paused = p\n\t\t\t},\n\t\t\tonEnd(action: () => void) {\n\t\t\t\tonEndEvents.push(action)\n\t\t\t},\n\t\t\tthen(action: () => void) {\n\t\t\t\tthis.onEnd(action)\n\t\t\t\treturn this\n\t\t\t},\n\t\t\tcancel() {\n\t\t\t\tev.cancel()\n\t\t\t},\n\t\t\tfinish() {\n\t\t\t\tev.cancel()\n\t\t\t\tsetValue(to)\n\t\t\t\tonEndEvents.forEach((action) => action())\n\t\t\t},\n\t\t}\n\t}\n\n\tlet isFirstFrame = true\n\n\t// main game loop\n\tapp.run(() => {\n\n\t\tif (!assets.loaded) {\n\t\t\tif (loadProgress() === 1 && !isFirstFrame) {\n\t\t\t\tassets.loaded = true\n\t\t\t\tgame.events.trigger(\"load\")\n\t\t\t}\n\t\t}\n\n\t\tif (!assets.loaded && gopt.loadingScreen !== false || isFirstFrame) {\n\t\t\tframeStart()\n\t\t\t// TODO: Currently if assets are not initially loaded no updates or timers will be run, however they will run if loadingScreen is set to false. What's the desired behavior or should we make them consistent?\n\t\t\tdrawLoadScreen()\n\t\t\tframeEnd()\n\t\t} else {\n\t\t\tif (!debug.paused) updateFrame()\n\t\t\tcheckFrame()\n\t\t\tframeStart()\n\t\t\tdrawFrame()\n\t\t\tif (gopt.debug !== false) drawDebug()\n\t\t\tframeEnd()\n\t\t}\n\n\t\tif (isFirstFrame) {\n\t\t\tisFirstFrame = false\n\t\t}\n\n\t\tgame.events.trigger(\"frameEnd\")\n\n\t})\n\n\t// update viewport based on user setting and fullscreen state\n\tfunction updateViewport() {\n\n\t\t// content size (scaled content size, with scale, stretch and letterbox)\n\t\t// view size (unscaled viewport size)\n\t\t// window size (will be the same as view size except letterbox mode)\n\n\t\t// canvas size\n\t\tconst pd = pixelDensity\n\t\tconst cw = gl.drawingBufferWidth / pd\n\t\tconst ch = gl.drawingBufferHeight / pd\n\n\t\tif (app.isFullscreen()) {\n\t\t\tconst ww = window.innerWidth\n\t\t\tconst wh = window.innerHeight\n\t\t\tconst rw = ww / wh\n\t\t\tconst rc = cw / ch\n\t\t\tif (rw > rc) {\n\t\t\t\tconst sw = window.innerHeight * rc\n\t\t\t\tgfx.viewport = {\n\t\t\t\t\tx: (ww - sw) / 2,\n\t\t\t\t\ty: 0,\n\t\t\t\t\twidth: sw,\n\t\t\t\t\theight: wh,\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst sh = window.innerWidth / rc\n\t\t\t\tgfx.viewport = {\n\t\t\t\t\tx: 0,\n\t\t\t\t\ty: (wh - sh) / 2,\n\t\t\t\t\twidth: ww,\n\t\t\t\t\theight: sh,\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn\n\t\t}\n\n\t\tif (gopt.letterbox) {\n\n\t\t\tif (!gopt.width || !gopt.height) {\n\t\t\t\tthrow new Error(\"Letterboxing requires width and height defined.\")\n\t\t\t}\n\n\t\t\tconst rc = cw / ch\n\t\t\tconst rg = gopt.width / gopt.height\n\n\t\t\tif (rc > rg) {\n\t\t\t\tconst sw = ch * rg\n\t\t\t\tconst x = (cw - sw) / 2\n\t\t\t\tgfx.viewport = {\n\t\t\t\t\tx: x,\n\t\t\t\t\ty: 0,\n\t\t\t\t\twidth: sw,\n\t\t\t\t\theight: ch,\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst sh = cw / rg\n\t\t\t\tconst y = (ch - sh) / 2\n\t\t\t\tgfx.viewport = {\n\t\t\t\t\tx: 0,\n\t\t\t\t\ty: y,\n\t\t\t\t\twidth: cw,\n\t\t\t\t\theight: sh,\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn\n\n\t\t}\n\n\t\tif (gopt.stretch) {\n\t\t\tif (!gopt.width || !gopt.height) {\n\t\t\t\tthrow new Error(\"Stretching requires width and height defined.\")\n\t\t\t}\n\t\t}\n\n\t\tgfx.viewport = {\n\t\t\tx: 0,\n\t\t\ty: 0,\n\t\t\twidth: cw,\n\t\t\theight: ch,\n\t\t}\n\n\t}\n\n\tapp.onHide(() => {\n\t\tif (!gopt.backgroundAudio) {\n\t\t\taudio.ctx.suspend()\n\t\t}\n\t})\n\n\tapp.onShow(() => {\n\t\tif (!gopt.backgroundAudio) {\n\t\t\taudio.ctx.resume()\n\t\t}\n\t})\n\n\t// TODO: white artifact when scrolling, but disappears when done\n\t// TODO: if you resize to larger than the initial size it'll leave white space\n\t// TODO: this clears on scene change\n\tapp.onResize(() => {\n\t\tif (app.isFullscreen()) return\n\t\tconst fixedSize = gopt.width && gopt.height\n\t\tif (fixedSize && !gopt.stretch && !gopt.letterbox) return\n\t\tcanvas.width = canvas.offsetWidth * pixelDensity\n\t\tcanvas.height = canvas.offsetHeight * pixelDensity\n\t\tupdateViewport()\n\t\tif (!fixedSize) {\n\t\t\tgfx.frameBuffer.free()\n\t\t\tgfx.frameBuffer = new FrameBuffer(gl.drawingBufferWidth, gl.drawingBufferHeight)\n\t\t\tgfx.width = gl.drawingBufferWidth / pixelDensity\n\t\t\tgfx.height = gl.drawingBufferHeight / pixelDensity\n\t\t}\n\t})\n\n\tupdateViewport()\n\n\t// the exported ctx handle\n\tconst ctx: KaboomCtx = {\n\t\tVERSION,\n\t\t// asset load\n\t\tloadRoot,\n\t\tloadProgress,\n\t\tloadSprite,\n\t\tloadSpriteAtlas,\n\t\tloadSound,\n\t\tloadBitmapFont,\n\t\tloadFont,\n\t\tloadShader,\n\t\tloadShaderURL,\n\t\tloadAseprite,\n\t\tloadPedit,\n\t\tloadBean,\n\t\tloadJSON,\n\t\tload,\n\t\tgetSprite,\n\t\tgetSound,\n\t\tgetFont,\n\t\tgetBitmapFont,\n\t\tgetShader,\n\t\tgetAsset,\n\t\tAsset,\n\t\tSpriteData,\n\t\tSoundData,\n\t\t// query\n\t\twidth,\n\t\theight,\n\t\tcenter,\n\t\tdt,\n\t\ttime: app.time,\n\t\tscreenshot: app.screenshot,\n\t\trecord,\n\t\tisFocused,\n\t\tsetCursor: app.setCursor,\n\t\tgetCursor: app.getCursor,\n\t\tsetCursorLocked: app.setCursorLocked,\n\t\tisCursorLocked: app.isCursorLocked,\n\t\tsetFullscreen: app.setFullscreen,\n\t\tisFullscreen: app.isFullscreen,\n\t\tisTouchscreen: app.isTouchscreen,\n\t\tonLoad,\n\t\tonLoading,\n\t\tonResize,\n\t\tonGamepadConnect: app.onGamepadConnect,\n\t\tonGamepadDisconnect: app.onGamepadDisconnect,\n\t\tonError,\n\t\tonCleanup,\n\t\t// misc\n\t\tcamPos,\n\t\tcamScale,\n\t\tcamRot,\n\t\tshake,\n\t\ttoScreen,\n\t\ttoWorld,\n\t\tsetGravity,\n\t\tgetGravity,\n\t\tsetBackground,\n\t\tgetBackground,\n\t\tgetGamepads: app.getGamepads,\n\t\t// obj\n\t\tadd,\n\t\tmake,\n\t\tdestroy,\n\t\tdestroyAll,\n\t\tget,\n\t\treadd,\n\t\t// comps\n\t\tpos,\n\t\tscale,\n\t\trotate,\n\t\tcolor,\n\t\topacity,\n\t\tanchor,\n\t\tarea,\n\t\tsprite,\n\t\ttext,\n\t\trect,\n\t\tcircle,\n\t\tuvquad,\n\t\toutline,\n\t\tbody,\n\t\tdoubleJump,\n\t\tshader,\n\t\ttimer,\n\t\tfixed,\n\t\tstay,\n\t\thealth,\n\t\tlifespan,\n\t\tz,\n\t\tmove,\n\t\toffscreen,\n\t\tfollow,\n\t\tstate,\n\t\tfadeIn,\n\t\ttile,\n\t\tagent,\n\t\t// group events\n\t\ton,\n\t\tonUpdate,\n\t\tonDraw,\n\t\tonAdd,\n\t\tonDestroy,\n\t\tonClick,\n\t\tonCollide,\n\t\tonCollideUpdate,\n\t\tonCollideEnd,\n\t\tonHover,\n\t\tonHoverUpdate,\n\t\tonHoverEnd,\n\t\t// input\n\t\tonKeyDown: app.onKeyDown,\n\t\tonKeyPress: app.onKeyPress,\n\t\tonKeyPressRepeat: app.onKeyPressRepeat,\n\t\tonKeyRelease: app.onKeyRelease,\n\t\tonMouseDown: app.onMouseDown,\n\t\tonMousePress: app.onMousePress,\n\t\tonMouseRelease: app.onMouseRelease,\n\t\tonMouseMove: app.onMouseMove,\n\t\tonCharInput: app.onCharInput,\n\t\tonTouchStart: app.onTouchStart,\n\t\tonTouchMove: app.onTouchMove,\n\t\tonTouchEnd: app.onTouchEnd,\n\t\tonScroll: app.onScroll,\n\t\tonHide: app.onHide,\n\t\tonShow: app.onShow,\n\t\tonGamepadButtonDown: app.onGamepadButtonDown,\n\t\tonGamepadButtonPress: app.onGamepadButtonPress,\n\t\tonGamepadButtonRelease: app.onGamepadButtonRelease,\n\t\tonGamepadStick: app.onGamepadStick,\n\t\tmousePos: mousePos,\n\t\tmouseDeltaPos: app.mouseDeltaPos,\n\t\tisKeyDown: app.isKeyDown,\n\t\tisKeyPressed: app.isKeyPressed,\n\t\tisKeyPressedRepeat: app.isKeyPressedRepeat,\n\t\tisKeyReleased: app.isKeyReleased,\n\t\tisMouseDown: app.isMouseDown,\n\t\tisMousePressed: app.isMousePressed,\n\t\tisMouseReleased: app.isMouseReleased,\n\t\tisMouseMoved: app.isMouseMoved,\n\t\tisGamepadButtonPressed: app.isGamepadButtonPressed,\n\t\tisGamepadButtonDown: app.isGamepadButtonDown,\n\t\tisGamepadButtonReleased: app.isGamepadButtonReleased,\n\t\t// getGamepadStick,\n\t\tcharInputted: app.charInputted,\n\t\t// timer\n\t\tloop,\n\t\twait,\n\t\t// audio\n\t\tplay,\n\t\tvolume,\n\t\tburp,\n\t\taudioCtx: audio.ctx,\n\t\t// math\n\t\tTimer,\n\t\tLine,\n\t\tRect,\n\t\tCircle,\n\t\tPolygon,\n\t\tVec2,\n\t\tColor,\n\t\tMat4,\n\t\tQuad,\n\t\tRNG,\n\t\trand,\n\t\trandi,\n\t\trandSeed,\n\t\tvec2,\n\t\trgb,\n\t\thsl2rgb,\n\t\tquad,\n\t\tchoose,\n\t\tchance,\n\t\tlerp,\n\t\ttween,\n\t\teasings,\n\t\tmap,\n\t\tmapc,\n\t\twave,\n\t\tdeg2rad,\n\t\trad2deg,\n\t\tclamp,\n\t\ttestLineLine,\n\t\ttestRectRect,\n\t\ttestRectLine,\n\t\ttestRectPoint,\n\t\ttestCirclePolygon,\n\t\ttestLinePoint,\n\t\ttestLineCircle,\n\t\t// raw draw\n\t\tdrawSprite,\n\t\tdrawText,\n\t\tformatText,\n\t\tdrawRect,\n\t\tdrawLine,\n\t\tdrawLines,\n\t\tdrawTriangle,\n\t\tdrawCircle,\n\t\tdrawEllipse,\n\t\tdrawUVQuad,\n\t\tdrawPolygon,\n\t\tdrawFormattedText,\n\t\tdrawMasked,\n\t\tdrawSubtracted,\n\t\tpushTransform,\n\t\tpopTransform,\n\t\tpushTranslate,\n\t\tpushScale,\n\t\tpushRotate,\n\t\tpushMatrix,\n\t\tusePostEffect,\n\t\t// debug\n\t\tdebug,\n\t\t// scene\n\t\tscene,\n\t\tgo,\n\t\tonSceneLeave,\n\t\t// level\n\t\taddLevel,\n\t\t// storage\n\t\tgetData,\n\t\tsetData,\n\t\tdownload,\n\t\tdownloadJSON,\n\t\tdownloadText,\n\t\tdownloadBlob,\n\t\t// plugin\n\t\tplug,\n\t\t// char sets\n\t\tASCII_CHARS,\n\t\t// dom\n\t\tcanvas: app.canvas(),\n\t\t// misc\n\t\taddKaboom,\n\t\t// dirs\n\t\tLEFT: Vec2.LEFT,\n\t\tRIGHT: Vec2.RIGHT,\n\t\tUP: Vec2.UP,\n\t\tDOWN: Vec2.DOWN,\n\t\t// colors\n\t\tRED: Color.RED,\n\t\tGREEN: Color.GREEN,\n\t\tBLUE: Color.BLUE,\n\t\tYELLOW: Color.YELLOW,\n\t\tMAGENTA: Color.MAGENTA,\n\t\tCYAN: Color.CYAN,\n\t\tWHITE: Color.WHITE,\n\t\tBLACK: Color.BLACK,\n\t\tquit,\n\t\t// helpers\n\t\tEvent,\n\t\tEventHandler,\n\t\tEventController,\n\t}\n\n\tif (gopt.plugins) {\n\t\tgopt.plugins.forEach(plug)\n\t}\n\n\t// export everything to window if global is set\n\tif (gopt.global !== false) {\n\t\tfor (const k in ctx) {\n\t\t\twindow[k] = ctx[k]\n\t\t}\n\t}\n\n\tapp.canvas().focus()\n\n\treturn ctx\n\n}\n", "import kaboom from \"kaboom\"\nimport \"kaboom/global\"\n\n// initialize context\nkaboom({\n    background: [255, 225, 102, ]\n})\n\n// load assets\nloadSprite(\"bean\", \"sprites/bean.png\")\nloadSprite(\"coronavirus\", \"sprites/coronavirus.png\");\nloadSound(\"success-fanfare-trumpets-6185\", \"sounds/success-fanfare-trumpets-6185.mp3\");\nloadSound(\"score\", \"sounds/score.mp3\");\nloadSound(\"jump\", \"sounds/jump.wav\");\nloadSound(\"gover\", \"sounds/gover.mp3\");\nloadSound(\"die\", \"sounds/die.wav\");\nloadSound(\"tunetank\", \"sounds/tunetank.com_5709_fire-cocktail_by_alexey-anisimov.mp3\");\nloadSprite(\"syringe\", \"sprites/syringe.png\");\nloadSprite(\"mask\", \"sprites/mask.png\");\nloadSprite(\"man\", \"sprites/man.png\");\nlet bspeed = 2;\nlet speed = 320;\nlet bg = false;\nlet pausegame = false;\nlet gameover = false;\nconst player = add([\n    sprite(\"mask\"),\n    pos(80, 40),\n    scale(0.13),\n    area(),\n]);\nconst score = add([\n    text(\"Unused Dose: 0\"),\n    pos(80, 40),\n    {\n        value: 0\n    },\n])\nconst active = add([\n    text(\"Active Dose: 0\"),\n    pos(400, 40),\n    {\n        value: 0\n    },\n])\nplayer.onKeyPress('u', () => {\n   if(score.value>0){\n      score.value -= 1;\n    score.text = \"Unused Dose: \" + score.value;\n    active.value += 1;\n    console.log(player.pos)\n    active.text = \"Active Dose: \" + active.value;\n    if (bspeed <= 10) {\n        bspeed += 1;\n    }\n  if(active.value>=2){\n    player.use(sprite(\"man\"))\n  }else{\n    player.use(sprite(\"mask\"))\n  }\n   }\n})\nplayer.onKeyDown('up', () => {\n    if (!bg) {\n        play(\"tunetank\", {\n            volume: 0.3\n        })\n        bg = true;\n    }\n    player.move(0, -speed)\n});\nplayer.onKeyDown('down', () => {\n    if (!bg) {\n        play(\"tunetank\", {\n            volume: 0.3\n        })\n        bg = true;\n    }\n    player.move(0, speed)\n});\nplayer.onKeyDown('left', () => {\n    if (!bg) {\n        play(\"tunetank\", {\n            volume: 0.3\n        })\n        bg = true;\n    }\n    player.move(-speed, 0)\n});\nplayer.onKeyDown('right', () => {\n    if (!bg) {\n        play(\"tunetank\", {\n            volume: 0.3\n        })\n        bg = true;\n    }\n    player.move(speed, 0)\n});\n\nloop(2, () => {\n    let e = add([\n        sprite(\"coronavirus\"),\n        scale(0.13),\n        pos(rand(vec2(width(), height()))),\n        area(),\n        \"covid\",\n    ]);\n    e.onUpdate(() => {\n        e.moveTo(e.pos.x, e.pos.y - bspeed);\n    })\n})\nloop(2, () => {\n    if (!gameover) {\n        let e = add([\n            sprite(\"coronavirus\"),\n            scale(0.13),\n            pos(rand(vec2(width(), height()))),\n            area(),\n            \"covid19\",\n        ]);\n        e.onUpdate(() => {\n            e.moveTo(e.pos.x - bspeed, e.pos.y);\n        })\n    }\n})\nloop(4, () => {\n    if (!gameover) {\n        let e = add([\n            sprite(\"syringe\"),\n            scale(0.13),\n            pos(rand(vec2(width(), height()))),\n            area(),\n            \"vaccine\",\n        ]);\n        e.onUpdate(() => {\n            e.moveTo(e.pos.x - bspeed, e.pos.y);\n        })\n    }\n});\nplayer.onCollide(\"covid\", (covid) => {\n  if(active.value>=2){\n    player.use(sprite(\"man\"))\n    destroy(covid)\n  }else{\n    player.use(sprite(\"mask\"))\n  }\n    if (score.value >= 100) {\n        bspeed = 10;\n        gameover = true;\n      play(\"tunetank\", {\n            volume: 0.7\n        })\n        player.moveTo(575.9987199999995, 408.00224000000014)\n        add([\n            text(\"You Won\"),\n            pos(554.6831999999997, 546.6422400000006),\n            {\n                value: 0\n            },\n        ]);\n    }\n    if (active.dose >= 2) {\n        destroy(covid)\n    } else {\n      if(!score.value>=100){\n        destroy(player)\n        volume(0.1)\n        gameover = true;\n        play(\"gover\")\n        bspeed = 10;\n          add([\n            text(\"Game Over\"),\n            pos(554.6831999999997, 546.6422400000006),\n            {\n                value: 0\n            },\n        ]);\n        }\n    }\n})\nplayer.onCollide(\"covid19\", (covid19) => {\n  if(active.value>=2){\n    player.use(sprite(\"man\"))\n  }else{\n    player.use(sprite(\"mask\"))\n  }\n    if (score.value >= 100) {\n        volume(0.1);\n        play(\"tunetank\", {\n            volume: 0.7\n        })\n        bspeed = 10;\n        gameover = true;\n        player.moveTo(575.9987199999995, 408.00224000000014)\n        add([\n            text(\"You Won\"),\n            pos(554.6831999999997, 546.6422400000006),\n            {\n                value: 0\n            },\n        ]);\n    }\n    if (active.dose >= 2) {\n        destroy(covid19)\n    } else {\n        destroy(player)\n        volume(0.1)\n        gameover = true;\n        play(\"gover\")\n        bspeed = 10;\n        if(!score.value>=100){\n          add([\n            text(\"Game Over\"),\n            pos(554.6831999999997, 546.6422400000006),\n            {\n                value: 0\n            },\n        ]);\n        }\n    }\n})\nplayer.onCollide(\"vaccine\", (vaccine) => {\n    play(\"score\")\n    score.value += 1;\n    score.text = \"Unused Dose: \" + score.value\n    destroy(vaccine)\n    console.log(\"Crash\")\n});\nfunction cheatgame(){\n  score.value +=120;\n  score.text = \"Unused Dose: \"+score.value;\n}\n"],
  "mappings": "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",
  "names": ["deg2rad", "deg", "__name", "rad2deg", "rad", "clamp", "val", "min", "max", "lerp", "a", "b", "t", "Vec2", "Color", "map", "v", "l1", "h1", "l2", "h2", "mapc", "x", "y", "angle", "_Vec2", "args", "p2", "vec2", "s", "len", "normal", "on", "dest", "cos", "sin", "n", "m", "other", "Rect", "_a", "r", "g", "arr", "_Color", "hex", "result", "h", "l", "hue2rgb", "p", "q", "rgb", "hsl2rgb", "Quad", "_Quad", "quad", "w", "Mat4", "_Mat4", "c", "m0", "m1", "m4", "m5", "out", "i", "j", "det", "f00", "f01", "f02", "f03", "f04", "f05", "f06", "f07", "f08", "f09", "f10", "f11", "f12", "f13", "f14", "f15", "f16", "f17", "f18", "wave", "lo", "hi", "f", "A", "C", "M", "RNG", "seed", "defRNG", "randSeed", "rand", "randi", "chance", "choose", "list", "testRectRect", "r1", "r2", "testLineLineT", "denom", "ua", "ub", "testLineLine", "testRectLine", "testRectPoint", "pts", "Line", "pt", "testLinePoint", "v1", "v2", "testLineCircle", "circle", "centerToOrigin", "dis", "t1", "t2", "testCirclePoint", "testCirclePolygon", "prev", "cur", "testPolygonPoint", "poly", "p1", "_Line", "pos", "width", "height", "_Rect", "Polygon", "dx", "dy", "Circle", "center", "radius", "tr", "Ellipse", "_Circle", "rx", "ry", "_Ellipse", "_Polygon", "total", "sat", "overlap", "displacement", "axisProj", "min1", "max1", "min2", "max2", "o", "o1", "o2", "IDList", "id", "EventController", "cancel", "events", "ev", "_EventController", "e", "Event", "action", "res", "EventHandler", "name", "deepEq", "k1", "k2", "k", "base64ToArrayBuffer", "base64", "binstr", "bytes", "dataURLToArrayBuffer", "url", "download", "filename", "downloadText", "text", "downloadJSON", "data", "downloadBlob", "blob", "isDataURL", "str", "getExt", "uid", "BinaryHeap", "compareFn", "item", "lastItem", "parent", "child", "index1", "index2", "gamepad_default", "ButtonState", "btn", "GamepadState", "FPSCounter", "dt", "app_default", "opt", "state", "canvas", "time", "fps", "numFrames", "screenshot", "setCursor", "getCursor", "setCursorLocked", "isCursorLocked", "enterFullscreen", "el", "exitFullscreen", "getFullscreenElement", "setFullscreen", "isFullscreen", "quit", "canvasEvents", "docEvents", "winEvents", "resizeObserver", "run", "accumulatedDt", "frame", "loopTime", "realDt", "desiredDt", "processInput", "resetInput", "isTouchscreen", "mousePos", "mouseDeltaPos", "isMousePressed", "isMouseDown", "isMouseReleased", "isMouseMoved", "isKeyPressed", "isKeyPressedRepeat", "isKeyDown", "isKeyReleased", "isGamepadButtonPressed", "isGamepadButtonDown", "isGamepadButtonReleased", "onResize", "onKeyDown", "key", "onKeyPress", "onKeyPressRepeat", "onKeyRelease", "onMouseDown", "mouse", "onMousePress", "onMouseRelease", "onMouseMove", "onCharInput", "onTouchStart", "onTouchMove", "onTouchEnd", "onScroll", "onHide", "onShow", "onGamepadButtonDown", "onGamepadButtonPress", "onGamepadButtonRelease", "onGamepadStick", "stick", "onGamepadConnect", "onGamepadDisconnect", "getGamepadStick", "charInputted", "getGamepads", "processGamepad", "registerGamepad", "browserGamepad", "gamepad", "removeGamepad", "gamepadState", "stickName", "value", "MOUSE_BUTTONS", "PREVENT_DEFAULT_KEYS", "KEY_ALIAS", "touches", "box", "kbGamepad", "entries", "entry", "c2", "c3", "c4", "c5", "easings", "easings_default", "Timer", "VERSION", "ASCII_CHARS", "DEF_ANCHOR", "BG_GRID_SIZE", "DEF_FONT", "DBG_FONT", "DEF_TEXT_SIZE", "DEF_TEXT_CACHE_SIZE", "MAX_TEXT_CACHE_SIZE", "FONT_ATLAS_WIDTH", "FONT_ATLAS_HEIGHT", "SPRITE_ATLAS_WIDTH", "SPRITE_ATLAS_HEIGHT", "UV_PAD", "DEF_HASH_GRID_SIZE", "DEF_FONT_FILTER", "LOG_MAX", "LOG_TIME", "VERTEX_FORMAT", "STRIDE", "sum", "MAX_BATCHED_QUAD", "MAX_BATCHED_VERTS", "MAX_BATCHED_INDICES", "VERT_TEMPLATE", "FRAG_TEMPLATE", "DEF_VERT", "DEF_FRAG", "COMP_DESC", "COMP_EVENTS", "anchorPt", "orig", "alignPt", "align", "createEmptyAudioBuffer", "ctx", "kaboom_default", "gopt", "root", "gscale", "fixedSize", "cw", "ch", "pixelDensity", "styles", "fontCacheCanvas", "fontCacheCtx", "app", "gc", "gl", "Texture", "filter", "wrap", "img", "tex", "TexPacker", "FrameBuffer", "gfx", "defShader", "makeShader", "emptyTex", "frameBuffer", "bgColor", "bgAlpha", "vbuf", "offset", "ibuf", "bgTex", "SpriteData", "frames", "anims", "slice9", "src", "assets", "slice", "loadImg", "SoundData", "buf", "resolve", "reject", "audio", "fetchArrayBuffer", "masterNode", "burpSnd", "burp_default", "err", "Asset", "loader", "asset", "AssetBucket", "handle", "loaded", "game", "make", "load", "prom", "loadProgress", "buckets", "bucket", "loadRoot", "path", "fetchURL", "fetchJSON", "fetchText", "loadJSON", "FontData", "face", "loadFont", "font", "loadBitmapFont", "gw", "gh", "makeFont", "qw", "qh", "loadSpriteAtlas", "rej", "json", "atlas", "info", "spr", "createSpriteSheet", "images", "merged", "loadSprite", "loadPedit", "loadAseprite", "imgSrc", "jsonSrc", "resolveJSON", "size", "anim", "loadShader", "vert", "frag", "loadShaderURL", "resolveUrl", "vcode", "fcode", "loadSound", "loadBean", "bean_default", "getSprite", "getSound", "getFont", "getBitmapFont", "getShader", "getAsset", "resolveSprite", "resolveSound", "snd", "resolveShader", "shader", "resolveFont", "bfont", "volume", "play", "paused", "srcNode", "onEndEvents", "gainNode", "startTime", "stopTime", "started", "getTime", "start", "d", "cloneNode", "oldNode", "newNode", "burp", "vertSrc", "fragSrc", "vertShader", "fragShader", "prog", "formatShaderError", "msg", "FMT", "match", "vertError", "fragError", "uniform", "loc", "chars", "cols", "charMap", "drawRaw", "verts", "indices", "fixed", "shaderSrc", "flush", "transform", "screen2ndc", "frameStart", "drawUnscaled", "drawUVQuad", "usePostEffect", "frameEnd", "ow", "oh", "drawTexture", "pushMatrix", "pushTranslate", "pushScale", "pushRotate", "pushTransform", "popTransform", "color", "opacity", "uvPadX", "uvPadY", "qx", "qy", "scale", "repX", "repY", "drawSprite", "getArcPts", "radiusX", "radiusY", "end", "nverts", "step", "drawRect", "drawPolygon", "drawLine", "drawLines", "minSLen", "drawCircle", "drawTriangle", "drawEllipse", "polyOpt", "npts", "drawStenciled", "content", "mask", "test", "drawMasked", "drawSubtracted", "getViewportScale", "applyCharTransform", "fchar", "TEXT_STYLE_RE", "compileStyledText", "charStyleMap", "renderText", "idxOffset", "origIdx", "fontAtlases", "formatText", "fontName", "opts", "c2d", "lineSpacing", "letterSpacing", "curX", "tw", "th", "lines", "curLine", "cursor", "lastSpace", "lastSpaceWidth", "fchars", "line", "ox", "idx", "style", "drawText", "drawFormattedText", "ftext", "windowToContent", "contentToView", "handleErr", "debug", "updateFrame", "camPos", "camScale", "camRot", "shake", "intensity", "toScreen", "toWorld", "calcTransform", "obj", "comps", "compStates", "cleanups", "inputEvents", "onCurCompCleanup", "trigger", "tag", "comp", "prop", "func", "checkDeps", "dep", "recurse", "isChild", "onAdd", "onDestroy", "ctrl", "cb", "evs", "event", "onUpdate", "add", "onDraw", "onCollide", "col", "onCollideUpdate", "onCollideEnd", "forAllCurrentAndFuture", "get", "onClick", "onHover", "onHoverUpdate", "onHoverEnd", "wait", "actions", "loop", "curTimer", "newAction", "enterDebugMode", "toFixed", "enterBurpMode", "setGravity", "getGravity", "setBackground", "getBackground", "speed", "diff", "isFixed", "rotate", "easeFunc", "tween", "anchor", "z", "follow", "move", "dir", "DEF_OFFSCREEN_DIS", "offscreen", "distance", "isOut", "screenRect", "area", "colliding", "collidingThisFrame", "mpos", "hovering", "localArea", "getRenderProps", "sprite", "spriteData", "curAnim", "curAnimDir", "spriteLoadedEvent", "calcTexScale", "_b", "left", "right", "top", "bottom", "iw", "ih", "w1", "w3", "w2", "h3", "quads", "uv", "setSpriteData", "onLoad", "prevAnim", "update", "rect", "uvquad", "outline", "timer", "from", "to", "duration", "setValue", "curTime", "DEF_JUMP_FORCE", "MAX_VEL", "body", "vel", "curPlatform", "lastPlatformPos", "wantFall", "tmass", "col2", "prevVelY", "force", "doubleJump", "numJumps", "jumpsLeft", "stay", "scenesToStay", "health", "hp", "maxHP", "lifespan", "fade", "initState", "stateList", "transitions", "initStateEvents", "didFirstEnter", "oldState", "available", "fadeIn", "done", "scene", "def", "go", "onSceneLeave", "getData", "setData", "plug", "plugin", "funcs", "funcsObj", "EdgeMask", "tile", "tilePos", "isObstacle", "cost", "edges", "getEdgeMask", "loopup", "edgeMask", "level", "is", "addLevel", "numRows", "numColumns", "spatialMap", "costMap", "edgeMap", "connectivityMap", "tile2Hash", "hash2Tile", "hash", "createSpatialMap", "insertIntoSpatialMap", "removeFromSpatialMap", "index", "updateSpatialMap", "spatialMapChanged", "createCostMap", "objects", "createEdgeMap", "createConnectivityMap", "traverse", "frontier", "getNeighbours", "getCost", "node", "neighbour", "getHeuristic", "goal", "diagonals", "levelComp", "hasPos", "hasTile", "cameFrom", "costSoFar", "current", "neighbours", "next", "newCost", "row", "keys", "agent", "target", "navMapChangedEvent", "record", "frameRate", "stream", "audioDest", "recorder", "chunks", "isFocused", "destroy", "readd", "destroyAll", "boom", "kaSprite", "ka_default", "boomSprite", "boom_default", "addKaboom", "kaboom", "ka", "Collision", "source", "resolved", "checkFrame", "grid", "cellSize", "stack", "checkObj", "aobj", "bbox", "xmin", "ymin", "xmax", "ymax", "checked", "cell", "check", "col1", "drawFrame", "cam", "drawLoadScreen", "progress", "drawInspectText", "txt", "pad", "ftxt", "bw", "bh", "drawDebug", "inspecting", "flipped", "logs", "log", "onLoading", "onError", "textStyle", "title", "onCleanup", "numTextureUnits", "unit", "isFirstFrame", "updateViewport", "pd", "ww", "wh", "rw", "rc", "sw", "sh", "rg"]
}
